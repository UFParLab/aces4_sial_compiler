#  Copyright (c) 1997-1999, 2003 Massachusetts Institute of Technology
# 
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307
#  USA
#
                  SIAL CIS_RHF_MO
#
#***********************************************************
#
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#
# Declare indeces
#
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      index kiter    = 1, cc_iter
#
      aoindex mu     = 1, norb
      aoindex nu     = 1, norb
      aoindex lambda = 1, norb
      aoindex sigma  = 1, norb
#
      moaindex i = baocc, eaocc
      moaindex i1= baocc, eaocc
      moaindex i2= baocc, eaocc
      moaindex i3= baocc, eaocc
#
      moaindex a = bavirt, eavirt
      moaindex a1= bavirt, eavirt
      moaindex a2= bavirt, eavirt
      moaindex a3= bavirt, eavirt
#
      moaindex j = baocc, eaocc
      moaindex j1= baocc, eaocc
      moaindex j2= baocc, eaocc
      moaindex j3= baocc, eaocc
#
      moaindex b = bavirt, eavirt
      moaindex b1= bavirt, eavirt
      moaindex b2= bavirt, eavirt
      moaindex b3= bavirt, eavirt
#
      moaindex p = baocc, eavirt
      moaindex p1= baocc, eavirt
      moaindex p2= baocc, eavirt
      moaindex p3= baocc, eavirt
#
      moaindex q = baocc, eavirt
      moaindex q1= baocc, eavirt
      moaindex q2= baocc, eavirt
      moaindex q3= baocc, eavirt
#
#     eom indeces
#
      index eomcycle = 1, 150
      index spdim = 1, 20 
      index spdim2 = 1, 20 
      index spdim20 = 1, 20 
      index jindex =1, 20
      index kindex =1, 20
      index jindex2 =1, 2 
      index kindex2 =1, 2 
      index jindex3 =1, 3 
      index kindex3 =1, 3 
      index jindex4 =1, 4 
      index kindex4 =1, 4 
      index jindex5 =1, 5 
      index kindex5 =1, 5 
      index jindex6 =1, 6 
      index kindex6 =1, 6 
      index jindex7 =1, 7 
      index kindex7 =1, 7
      index jindex8 =1, 8
      index kindex8 =1, 8
      index jindex9 =1, 9
      index kindex9 =1, 9
      index jindex10 =1, 10
      index kindex10 =1, 10
      index jindex11 =1, 11
      index kindex11 =1, 11
      index jindex12 =1, 12
      index kindex12 =1, 12
      index jindex13 =1, 13
      index kindex13 =1, 13
      index jindex14 =1, 14
      index kindex14 =1, 14
      index jindex15 =1, 15
      index kindex15 =1, 15
      index jindex16 =1, 16
      index kindex16 =1, 16
      index jindex17 =1, 17
      index kindex17 =1, 17
      index jindex18 =1, 18
      index kindex18 =1, 18
      index jindex19 =1, 19
      index kindex19 =1, 19
      index jindex20 =1, 20
      index kindex20 =1, 20
      index j20 =1, 20
      index k20 =1, 20
      index j21 =1, 21
      index k21 =1, 21
#
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#
# Declare arrays
#
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      served Viaai(i,a1,a,i1)
      served Vaaii(a,a1,i,i1)
#
      served Vjbbj(j,b,b1,j1)
      served Vbbjj(b,b1,j,j1)
#
      served Vaajj(a,a1,j,j1)
      served Viabj(i,a,b,j)
#
# VFL arrays to use simple indeces

      distributed VC1A(a,i,k21)
      distributed VCH1A(a,i,k20)
      distributed VTEMP1A(a,i,k20)

      distributed ax(j20,k20)
      local Lax(j20,k20)
      static MYvev(kindex20,jindex20)
      static Aeig(kindex20,jindex20)
      temp t1(k21,k21)
      temp t20(k20,j20)
      distributed orth(j21,k21)

      temp taiS(a,i,k21)
      temp t2aiS(a,i,k20)
      temp t3aiS(a,i,k20)

      temp tbjS(b,j,k21)
      temp t2bjS(b,j,k20)
      temp t3bjS(b,j,k20)

      temp atemp2(jindex2,kindex2)
      temp atemp3(jindex3,kindex3)
      temp atemp4(jindex4,kindex4)
      temp atemp5(jindex5,kindex5)
      temp atemp6(jindex6,kindex6)
      temp atemp7(jindex7,kindex7)
      temp atemp8(jindex8,kindex8)
      temp atemp9(jindex9,kindex9)
      temp atemp10(jindex10,kindex10)
      temp atemp11(jindex11,kindex11)
      temp atemp12(jindex12,kindex12)
      temp atemp13(jindex13,kindex13)
      temp atemp14(jindex14,kindex14)
      temp atemp15(jindex15,kindex15)
      temp atemp16(jindex16,kindex16)
      temp atemp17(jindex17,kindex17)
      temp atemp18(jindex18,kindex18)
      temp atemp19(jindex19,kindex19)
      temp atemp20(jindex20,kindex20)
#
      local L1ai(a,i) 

      scalar six 
      scalar kcount
      scalar fact
      scalar esum
      scalar esum1
      scalar temp3  
# END VFL arrays to use simple indeces
#
#    served arrays used in EOM
#
      static Sii(i,i1)
      static Sdii(i,i1)
      static Saa(a,a1)
      static Sdaa(a,a1)
      static Sia(i,a)
      static Sdia(i,a)
      static Sjj(j,j1)
      static Sdjj(j,j1)
      static Sbb(b,b1)
      static Sdbb(b,b1)
      static Smat(kindex,jindex)
      static SVEV(kindex,jindex)
      static Smat2(kindex2,jindex2)
      static SVEV2(kindex2,jindex2)
      static Smat3(kindex3,jindex3)
      static SVEV3(kindex3,jindex3)
      static Smat4(kindex4,jindex4)
      static SVEV4(kindex4,jindex4)
      static Smat5(kindex5,jindex5)
      static SVEV5(kindex5,jindex5)
      static Smat6(kindex6,jindex6)
      static SVEV6(kindex6,jindex6)
      static Smat7(kindex7,jindex7)
      static SVEV7(kindex7,jindex7)
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--start of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
      static Smat8(kindex8,jindex8)
      static SVEV8(kindex8,jindex8)
      static Smat9(kindex9,jindex9)
      static SVEV9(kindex9,jindex9)
      static Smat10(kindex10,jindex10)
      static SVEV10(kindex10,jindex10)
      static Smat11(kindex11,jindex11)
      static SVEV11(kindex11,jindex11)
      static Smat12(kindex12,jindex12)
      static SVEV12(kindex12,jindex12)
      static Smat13(kindex13,jindex13)
      static SVEV13(kindex13,jindex13)
      static Smat14(kindex14,jindex14)
      static SVEV14(kindex14,jindex14)
      static Smat15(kindex15,jindex15)
      static SVEV15(kindex15,jindex15)
      static Smat16(kindex16,jindex16)
      static SVEV16(kindex16,jindex16)
      static Smat17(kindex17,jindex17)
      static SVEV17(kindex17,jindex17)
      static Smat18(kindex18,jindex18)
      static SVEV18(kindex18,jindex18)
      static Smat19(kindex19,jindex19)
      static SVEV19(kindex19,jindex19)
      static Smat20(kindex20,jindex20)
      static SVEV20(kindex20,jindex20)
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
      temp tcoef2(kindex2,jindex2)
      temp tcoef3(kindex3,jindex3)
      temp tcoef4(kindex4,jindex4)
      temp tcoef5(kindex5,jindex5)
      temp tcoef6(kindex6,jindex6)
      temp tcoef7(kindex7,jindex7)
      temp tcoef8(kindex8,jindex8)
      temp tcoef9(kindex9,jindex9)
      temp tcoef10(kindex10,jindex10)
      temp tcoef11(kindex11,jindex11)
      temp tcoef12(kindex12,jindex12)
      temp tcoef13(kindex13,jindex13)
      temp tcoef14(kindex14,jindex14)
      temp tcoef15(kindex15,jindex15)
      temp tcoef16(kindex16,jindex16)
      temp tcoef17(kindex17,jindex17)
      temp tcoef18(kindex18,jindex18)
      temp tcoef19(kindex19,jindex19)
      temp tcoef20(kindex20,jindex20)
#
      temp  Tiaai(i1,a1,a,i)
      temp  TSiaai(i,a,a1,i1)
      temp  TS2iaai(i,a,a1,i1)
      temp  TSbjbj(b,j,b1,j1)
      temp  Taaii(a,a2,i,i2)
      temp  T1aaii(a,a2,i,i2)
      temp  Tbbjj(b,b1,j,j1)
      temp  T2bbjj(b,b1,j,j1)
      temp  Tii(i,i1)
      temp  T1ii(i,i1)
      temp  T1jj(j,j1)
      temp  Tjj(j,j1)
      temp  Taa(a,a1)
      temp  Tbb(b,b1)
      temp  tai(a,i)
      temp  t1ai(a,i)
      temp  t11ai(a,i)
      temp  t1aa(a,a1)
      temp  t11aa(a,a1)
      temp  t1bb(b,b1)
      temp  t11bb(b,b1)
      temp  t111bb(b,b1)
      temp  tia(i,a)
      temp  t2ia(i,a)
      temp  t2jb(j,b)
      temp  t1ia(i,a)
      temp  t2ai(a,i)
      temp  t3ai(a,i)
      temp  tbj(b,j)
      temp  tjb(j,b)
      temp  t1jb(j,b)
      temp  t1bj(b,j)
      temp  t2bj(b,j)
      temp  t3bj(b,j)
      temp  t11bj(b,j)
      temp  Tjbbj(j1,b1,b,j)
      temp tiabj(i,a,b,j) 
#
      local VAL(jindex,kindex)
      temp VAL1(jindex,kindex)
      local lai(a,i)
      local lia(i,a)
      local ljb(j,b)
      local l2ai(a,i)
      local laa(a,a1)
      local lbb(b,b1)
      local lii(i1,i)
      local ljj(j1,j)
      local lbj(b,j)
#
#     eom local arrays
#
      local acoef(spdim,spdim)
      local Lmat(kindex,jindex)
      local LVEV(kindex,jindex)
      local acoef2(kindex2,jindex2)
      local Lmat2(kindex2,jindex2)
      local LVEV2(kindex2,jindex2)
      local acoef3(kindex3,jindex3)
      local Lmat3(kindex3,jindex3)
      local LVEV3(kindex3,jindex3)
      local acoef4(kindex4,jindex4)
      local Lmat4(kindex4,jindex4)
      local LVEV4(kindex4,jindex4)
      local acoef5(kindex5,jindex5)
      local Lmat5(kindex5,jindex5)
      local LVEV5(kindex5,jindex5)
      local acoef6(kindex6,jindex6)
      local Lmat6(kindex6,jindex6)
      local LVEV6(kindex6,jindex6)
      local acoef7(kindex7,jindex7)
      local Lmat7(kindex7,jindex7)
      local LVEV7(kindex7,jindex7)
      local acoef8(kindex8,jindex8)
      local Lmat8(kindex8,jindex8)
      local LVEV8(kindex8,jindex8)
      local acoef9(kindex9,jindex9)
      local Lmat9(kindex9,jindex9)
      local LVEV9(kindex9,jindex9)
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--start of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
      local Lmat10(kindex10,jindex10)
      local LVEV10(kindex10,jindex10)
      local acoef10(kindex10,jindex10)
      local Lmat11(kindex11,jindex11)
      local LVEV11(kindex11,jindex11)
      local acoef11(kindex11,jindex11)
      local Lmat12(kindex12,jindex12)
      local LVEV12(kindex12,jindex12)
      local acoef12(kindex12,jindex12)
      local Lmat13(kindex13,jindex13)
      local LVEV13(kindex13,jindex13)
      local acoef13(kindex13,jindex13)
      local Lmat14(kindex14,jindex14)
      local LVEV14(kindex14,jindex14)
      local acoef14(kindex14,jindex14)
      local Lmat15(kindex15,jindex15)
      local LVEV15(kindex15,jindex15)
      local acoef15(kindex15,jindex15)
      local Lmat16(kindex16,jindex16)
      local LVEV16(kindex16,jindex16)
      local acoef16(kindex16,jindex16)
      local Lmat17(kindex17,jindex17)
      local LVEV17(kindex17,jindex17)
      local acoef17(kindex17,jindex17)
      local Lmat18(kindex18,jindex18)
      local LVEV18(kindex18,jindex18)
      local acoef18(kindex18,jindex18)
      local Lmat19(kindex19,jindex19)
      local LVEV19(kindex19,jindex19)
      local acoef19(kindex19,jindex19)
      local Lmat20(kindex20,jindex20)
      local LVEV20(kindex20,jindex20)
      local acoef20(kindex20,jindex20)
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
      distributed DDaa(a,a1)
      distributed DDii(i,i1)
      distributed DDia(i,a)
      distributed DDbb(b,b1)
      distributed DDjj(j,j1)
      distributed DDjb(j,b)
      distributed VCONV1A(a,i)
      distributed VCONV1B(b,j)
      distributed Fae_a(a,a1)
      distributed Fae_b(b,b1)
      distributed Fmi_a(i1,i)
      distributed Fmi_b(j1,j)
      distributed Fia_a(i,a)
      distributed Fia_b(j,b)
      distributed Wmnijab(i,i1,j,j1)
      distributed Wmnijaa(i,i1,i2,i3)
      distributed Wmnijbb(j,j1,j2,j3)
#
#     distributed arrays used in EOM
#
      distributed VEV(kindex,jindex)
      distributed VEV2(kindex2,jindex2)
      distributed VEV3(kindex3,jindex3)
      distributed VEV4(kindex4,jindex4)
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
      distributed VCEND1A1(a,i)
      distributed VCEND1B1(b,j)
      distributed VCEND1A2(a,i)
      distributed VCEND1B2(b,j)
      distributed VCEND1A3(a,i)
      distributed VCEND1B3(b,j)
      distributed VCEND1A4(a,i)
      distributed VCEND1B4(b,j)
      distributed VCEND1A5(a,i)
      distributed VCEND1B5(b,j)
      distributed VCEND1A6(a,i)
      distributed VCEND1B6(b,j)
      distributed VCEND1A7(a,i)
      distributed VCEND1B7(b,j)
      distributed VCEND1A8(a,i)
      distributed VCEND1B8(b,j)
      distributed VCEND1A9(a,i)
      distributed VCEND1B9(b,j)
      distributed VCEND1A10(a,i)
      distributed VCEND1B10(b,j)
      distributed VCEND1A11(a,i)
      distributed VCEND1B11(b,j)
      distributed VCEND1A12(a,i)
      distributed VCEND1B12(b,j)
#
      distributed VCE1A(a,i)
#
      distributed VCACT1A(a,i)
#
      distributed VCHACT1A(a,i)
#
      distributed VSTART1A1(a,i)
      distributed VSTART1A2(a,i)
      distributed VSTART1A3(a,i)
      distributed VSTART1A4(a,i)
      distributed VSTART1A5(a,i)
      distributed VSTART1A6(a,i)
      distributed VSTART1A7(a,i)
      distributed VSTART1A8(a,i)
      distributed VSTART1A9(a,i)
      distributed VSTART1A10(a,i)
      distributed VSTART1A11(a,i)
      distributed VSTART1A12(a,i)
#
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#
# Declare scalars
#
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      scalar maxcycle
      scalar imaxc
      scalar ncount
      scalar aeigtemp
      scalar aeigtemp2
      scalar rootmax
      scalar evfev
      scalar eomthresh
      scalar sqr
      scalar sqr2
      scalar egvmax
      scalar lcount
      scalar icount
      scalar xcount
      scalar imax
      scalar emax
      scalar energaa
      scalar energbb
      scalar energab
      scalar esuma
      scalar esumb
      scalar esumab
      scalar ecorraa
      scalar ecorrbb
      scalar ecorrab
      scalar ecorrT
      scalar eold
      scalar etemp
      scalar etemp1
      scalar etemp2
      scalar etemp3
      scalar etemp4
      scalar etemp5
      scalar etemp0
      scalar eetemp
      scalar ediff
      scalar xcor
      scalar xcor0
      scalar xcor1
      scalar xcor2
      scalar xcor3
      scalar count_iter
      scalar sval
      scalar sval2
      scalar sval3
      scalar sval4
      scalar sval5
      scalar sval6
      scalar sval7
      scalar sval8
      scalar sval9
#
#     eom scalars
#
      scalar ispdim
      scalar one
      scalar omega
      scalar omegam 
      scalar residuum
      scalar square
      scalar squarert
      scalar mult
      scalar exponent
#
      scalar nsp
      scalar iroot
#
      scalar Aeig1
      scalar Aeig2
      scalar Aeig3
      scalar Aeig4
      scalar Aeig5
      scalar Aeig6
      scalar Aeig7
      scalar Aeig8
      scalar Aeig9
#
      scalar Aeigv1
      scalar Aeigv2
      scalar Aeigv3
      scalar Aeigv4
      scalar Aeigv5
      scalar Aeigv6
      scalar Aeigv7
      scalar Aeigv8
      scalar Aeigv9
#
      scalar Aeigvm1
      scalar Aeigvm2
      scalar Aeigvm3
      scalar Aeigvm4
      scalar Aeigvm5
      scalar Aeigvm6
      scalar Aeigvm7
      scalar Aeigvm8
      scalar Aeigvm9
#
      scalar xmax
#
      scalar xmax1
      scalar xmax2
      scalar xmax3
      scalar xmax4
      scalar xmax5
      scalar xmax6
      scalar xmax7
      scalar xmax8
      scalar xmax9
#
      scalar xtemp
      scalar xtemp1
#
      scalar xm1
      scalar xm2
      scalar xm3
      scalar xm4
      scalar xm5
      scalar xm6
      scalar xm7
      scalar xm8
      scalar xm9
#
      scalar ort1
      scalar ort2
      scalar ort3
      scalar ort4
      scalar ort5
      scalar ort6
      scalar ort7
      scalar ort8
      scalar ort9
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--start of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
      scalar etemp2_1
      scalar etemp2_2
      scalar etemp2_3
      scalar etemp2_4
      scalar etemp2_5
      scalar etemp2_6
      scalar etemp2_7
      scalar etemp2_8
      scalar etemp2_9
      scalar etemp2_10
      scalar etemp2_11
      scalar etemp2_12
      scalar etemp2_13
      scalar etemp2_14
      scalar etemp2_15
      scalar etemp2_16
      scalar etemp2_17
      scalar etemp2_18
      scalar etemp2_19
      scalar etemp2_20
#
      scalar Vtemp_1
      scalar Vtemp_2
      scalar Vtemp_3
      scalar Vtemp_4
      scalar Vtemp_5
      scalar Vtemp_6
      scalar Vtemp_7
      scalar Vtemp_8
      scalar Vtemp_9
      scalar Vtemp_10
      scalar Vtemp_11
      scalar Vtemp_12
      scalar Vtemp_13
      scalar Vtemp_14
      scalar Vtemp_15
      scalar Vtemp_16
      scalar Vtemp_17
      scalar Vtemp_18
      scalar Vtemp_19
      scalar Vtemp_20
#
      scalar V1_1
      scalar V1_2
      scalar V1_3
      scalar V1_4
      scalar V1_5
      scalar V1_6
      scalar V1_7
      scalar V1_8
      scalar V1_9
      scalar V1_10
      scalar V1_11
      scalar V1_12
      scalar V1_13
      scalar V1_14
      scalar V1_15
      scalar V1_16
      scalar V1_17
      scalar V1_18
      scalar V1_19
      scalar V1_20
      scalar V2_1
      scalar V2_2
      scalar V2_3
      scalar V2_4
      scalar V2_5
      scalar V2_6
      scalar V2_7
      scalar V2_8
      scalar V2_9
      scalar V2_10
      scalar V2_11
      scalar V2_12
      scalar V2_13
      scalar V2_14
      scalar V2_15
      scalar V2_16
      scalar V2_17
      scalar V2_18
      scalar V2_19
      scalar V2_20
      scalar V3_1
      scalar V3_2
      scalar V3_3
      scalar V3_4
      scalar V3_5
      scalar V3_6
      scalar V3_7
      scalar V3_8
      scalar V3_9
      scalar V3_10
      scalar V3_11
      scalar V3_12
      scalar V3_13
      scalar V3_14
      scalar V3_15
      scalar V3_16
      scalar V3_17
      scalar V3_18
      scalar V3_19
      scalar V3_20
      scalar V4_1
      scalar V4_2
      scalar V4_3
      scalar V4_4
      scalar V4_5
      scalar V4_6
      scalar V4_7
      scalar V4_8
      scalar V4_9
      scalar V4_10
      scalar V4_11
      scalar V4_12
      scalar V4_13
      scalar V4_14
      scalar V4_15
      scalar V4_16
      scalar V4_17
      scalar V4_18
      scalar V4_19
      scalar V4_20
      scalar V5_1
      scalar V5_2
      scalar V5_3
      scalar V5_4
      scalar V5_5
      scalar V5_6
      scalar V5_7
      scalar V5_8
      scalar V5_9
      scalar V5_10
      scalar V5_11
      scalar V5_12
      scalar V5_13
      scalar V5_14
      scalar V5_15
      scalar V5_16
      scalar V5_17
      scalar V5_18
      scalar V5_19
      scalar V5_20
      scalar V6_1
      scalar V6_2
      scalar V6_3
      scalar V6_4
      scalar V6_5
      scalar V6_6
      scalar V6_7
      scalar V6_8
      scalar V6_9
      scalar V6_10
      scalar V6_11
      scalar V6_12
      scalar V6_13
      scalar V6_14
      scalar V6_15
      scalar V6_16
      scalar V6_17
      scalar V6_18
      scalar V6_19
      scalar V6_20
      scalar V7_1
      scalar V7_2
      scalar V7_3
      scalar V7_4
      scalar V7_5
      scalar V7_6
      scalar V7_7
      scalar V7_8
      scalar V7_9
      scalar V7_10
      scalar V7_11
      scalar V7_12
      scalar V7_13
      scalar V7_14
      scalar V7_15
      scalar V7_16
      scalar V7_17
      scalar V7_18
      scalar V7_19
      scalar V7_20
      scalar V8_1
      scalar V8_2
      scalar V8_3
      scalar V8_4
      scalar V8_5
      scalar V8_6
      scalar V8_7
      scalar V8_8
      scalar V8_9
      scalar V8_10
      scalar V8_11
      scalar V8_12
      scalar V8_13
      scalar V8_14
      scalar V8_15
      scalar V8_16
      scalar V8_17
      scalar V8_18
      scalar V8_19
      scalar V8_20
      scalar V9_1
      scalar V9_2
      scalar V9_3
      scalar V9_4
      scalar V9_5
      scalar V9_6
      scalar V9_7
      scalar V9_8
      scalar V9_9
      scalar V9_10
      scalar V9_11
      scalar V9_12
      scalar V9_13
      scalar V9_14
      scalar V9_15
      scalar V9_16
      scalar V9_17
      scalar V9_18
      scalar V9_19
      scalar V9_20
      scalar V10_1
      scalar V10_2
      scalar V10_3
      scalar V10_4
      scalar V10_5
      scalar V10_6
      scalar V10_7
      scalar V10_8
      scalar V10_9
      scalar V10_10
      scalar V10_11
      scalar V10_12
      scalar V10_13
      scalar V10_14
      scalar V10_15
      scalar V10_16
      scalar V10_17
      scalar V10_18
      scalar V10_19
      scalar V10_20
      scalar V11_1
      scalar V11_2
      scalar V11_3
      scalar V11_4
      scalar V11_5
      scalar V11_6
      scalar V11_7
      scalar V11_8
      scalar V11_9
      scalar V11_10
      scalar V11_11
      scalar V11_12
      scalar V11_13
      scalar V11_14
      scalar V11_15
      scalar V11_16
      scalar V11_17
      scalar V11_18
      scalar V11_19
      scalar V11_20
      scalar V12_1
      scalar V12_2
      scalar V12_3
      scalar V12_4
      scalar V12_5
      scalar V12_6
      scalar V12_7
      scalar V12_8
      scalar V12_9
      scalar V12_10
      scalar V12_11
      scalar V12_12
      scalar V12_13
      scalar V12_14
      scalar V12_15
      scalar V12_16
      scalar V12_17
      scalar V12_18
      scalar V12_19
      scalar V12_20
#
      scalar root1
      scalar root2
      scalar root3
      scalar root4
      scalar root5
      scalar root6
      scalar root7
      scalar root8
      scalar root9
      scalar root10
      scalar root11
      scalar root12
#
      scalar Aeig10
      scalar Aeigv10
      scalar Aeigvm10
      scalar xmax10
      scalar xm10
      scalar ort10
      scalar Aeig11
      scalar Aeigv11
      scalar Aeigvm11
      scalar xmax11
      scalar xm11
      scalar ort11
      scalar Aeig12
      scalar Aeigv12
      scalar Aeigvm12
      scalar xmax12
      scalar xm12
      scalar ort12
      scalar Aeig13
      scalar Aeigv13
      scalar Aeigvm13
      scalar xmax13
      scalar xm13
      scalar ort13
      scalar Aeig14
      scalar Aeigv14
      scalar Aeigvm14
      scalar xmax14
      scalar xm14
      scalar ort14
      scalar Aeig15
      scalar Aeigv15
      scalar Aeigvm15
      scalar xmax15
      scalar xm15
      scalar ort15
      scalar Aeig16
      scalar Aeigv16
      scalar Aeigvm16
      scalar xmax16
      scalar xm16
      scalar ort16
      scalar Aeig17
      scalar Aeigv17
      scalar Aeigvm17
      scalar xmax17
      scalar xm17
      scalar ort17
      scalar Aeig18
      scalar Aeigv18
      scalar Aeigvm18
      scalar xmax18
      scalar xm18
      scalar ort18
      scalar Aeig19
      scalar Aeigv19
      scalar Aeigvm19
      scalar xmax19
      scalar xm19
      scalar ort19
      scalar Aeig20
      scalar Aeigv20
      scalar Aeigvm20
      scalar xmax20
      scalar xm20
      scalar ort20
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
      scalar sum1
      scalar sum2
      scalar sum3
      scalar sum4
      scalar sum5
#
# Arrays for Transformation 
# ------------------------- 
#
      temp daoint(mu,nu,lambda,sigma) 
      temp Txixi(mu,i1,lambda,i)
      temp T1xixi(mu,i1,lambda,i)
      temp Txxii(mu,nu,i1,i)
      temp Tixxi(i1,nu,lambda,i)
      temp Txipi(mu,i,p,i1)
      temp Tpipi(p1,i,p,i1)
      temp T1pipi(p1,i,p,i1)
      temp T2pipi(p1,i,p,i1)
      temp Tixai(i,mu,a,i1)
      temp Txaii(mu,a,i,i1)
#
      temp Txxxi(mu,nu,sigma,i)
      temp T1xxxi(mu,nu,sigma,i)
      temp Txxxj(mu,nu,sigma,j)
      temp T1xxxj(mu,nu,sigma,j)
#
      served Vxixi(mu,i1,lambda,i)
      served Vxxii(mu,nu,i1,i)
      served Viixx(i1,i,mu,nu)
      served Vixxi(i1,nu,lambda,i)
      served Vixai(i,mu,a,i1)
      served Vxaii(mu,a,i,i1)   
      served Vixbj(i,mu,b,j) 
      served Vixxj(i,mu,nu,j) 
#
      temp Txjxj(mu,j1,lambda,j)
      temp T1xjxj(mu,j1,lambda,j)
      temp Txxjj(mu,nu,j1,j)
      temp Tjjxx(j1,nu,lambda,j)
      temp Tjxxj(j1,nu,lambda,j)
      temp Txjqj(mu,j,q,j1)
      temp Tqjqj(q1,j,q,j1)
      temp T1qjqj(q1,j,q,j1)
      temp T2qjqj(q1,j,q,j1)
      temp Tjxbj(j,mu,b,j1)
      temp Txbjj(mu,b,j,j1)
      temp Txbbj(mu,b1,b,j)
      temp Tbbbj(b2,b,b1,j)
      temp T1bbbj(b2,b,b1,j)
      temp Txxbj(mu,nu,b,j)
      temp txixx(lambda,i,mu,nu)
      temp t1xixx(lambda,i,mu,nu)
      temp t2xixx(lambda,i,mu,nu)
      temp t3xixx(lambda,i,mu,nu)
      temp txjxx(lambda,j,mu,nu)
      temp t1xjxx(lambda,j,mu,nu)
      temp t2xjxx(lambda,j,mu,nu)
      temp t3xjxx(lambda,j,mu,nu)
      temp txxix(nu,mu,i,lambda)
      temp t1xxix(nu,mu,i,lambda)
      temp t2xxix(nu,mu,i,lambda)
      temp t3xxix(nu,mu,i,lambda)
      temp txxjx(nu,mu,j,lambda)
      temp t1xxjx(nu,mu,j,lambda)
      temp t2xxjx(nu,mu,j,lambda)
      temp t3xxjx(nu,mu,j,lambda)
#
      served Vxxjj(mu,nu,j1,j)
      served Vjjxx(j1,nu,lambda,j)
      served Vjxxj(j1,nu,lambda,j)
      served Vxjqj(mu,j,q,j1)
      served Vjxbj(j,mu,b,j1)
      served Vxbjj(mu,b,j,j1)     
#
      temp Txixj(mu,i,nu,j)
      temp Txiqj(mu,i,q,j)
      temp Tpiqj(p,i,q,j)
      temp T1piqj(p,i,q,j)
      temp T2piqj(p,i,q,j)
      temp Tiixx(i,i1,mu,nu)
      temp Tiixb(i,i1,mu,b)
      temp Tiibb(i,i1,b1,b)
      temp Txajj(mu,a,j,j1)
      temp Taajj(a,a1,j,j1)
      temp Txabj(mu,a,b,j)
      temp Tixxj(i,mu,nu,j)
      temp Tixbj(i,mu,b,j)
      temp Taabj(a,a1,b,j) 
      temp Txbii(mu,b,i,i1)
      temp Tbbii(b,b1,i,i1)
      temp Tjbii(j,b,i,i1)
      temp Txbai(mu,b,a,i)
      temp Tbbai(b,b1,a,i)
#
      served Vxbii(mu,b,i,i1)  
      local L0xxxi(mu,nu,lambda,i)
      local L1xxxi(nu,mu,lambda,i)
      local L2xxxi(mu,nu,sigma,i)
      local L3xxxi(nu,mu,sigma,i)
#
      local L0xxxj(mu,nu,lambda,j)
      local L1xxxj(nu,mu,lambda,j)
      local L2xxxj(mu,nu,sigma,j)
      local L3xxxj(nu,mu,sigma,j)
#
      temp V0xxxi(mu,nu,lambda,i)
      temp V0xxxj(mu,nu,lambda,j)
#
      local Lxixi(mu,i1,lambda,i)
      local Lxixj(mu,i,lambda,j)
      local Lxjxj(mu,j1,lambda,j)
      local Lxxii(mu,nu,i1,i)
      local Lxxjj(mu,nu,j1,j)
      local Lixxi(i1,nu,lambda,i)
      local Lixxj(i,nu,lambda,j)
      local Ljxxj(j1,nu,lambda,j)
      local Lxipi(mu,i,p,i1)
      local Lpipi(p1,i,p,i1)
      local Lxaii(mu,a,i,i1)
      local Laaii(a1,a,i,i1)
      local Lixai(i,mu,a,i1)
      local Liaai(i,a1,a,i1)
#
      local Lxjqj(mu,j,q,j1)
      local Lqjqj(q1,j,q,j1)
      local Lxbjj(mu,b,j,j1)
      local Lbbjj(b1,b,j,j1)
      local Ljxbj(j,mu,b,j1)
      local Ljbbj(j,b1,b,j1)
      local Lxbii(mu,b,i,i1)
      local Lbbii(b1,b,i,i1)
      local Lxajj(mu,a,j,j1)
      local Laajj(a1,a,j,j1)
      local Lixbj(i,mu,b,j)
      local Liabj(i,a,b,j)
      local Liixb(i,i1,mu,b)
      local Liibb(i,i1,b1,b)
      local Lxiqj(mu,i,q,j)
      local Lpiqj(p,i,q,j)
#
      local Lxiai(mu,i,a1,i1)
      local Lxjbj(mu,j,b1,j1)
      local Lxibj(mu,i,b,j)
      local L1xixi(mu,i,nu,i1)
      local L1xjxj(mu,j,nu,j1)
      local L1xixj(mu,i,nu,j)
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_XXII
#
#    ------------------------------------------------------------------------
#
    #execute load_balance_off  
     execute sip_barrier
#
      PARDO mu, nu, lambda
            allocate L0xxxi(mu,nu,lambda,*) 
            allocate L0xxxj(mu,nu,lambda,*) 
            DO  sigma
#
                compute_integrals daoint(mu,nu,lambda,sigma)
#
                DO i
                   txxxi(mu,nu,lambda,i)  = daoint(mu,nu,lambda,sigma)*ca(sigma,i)
                   L0xxxi(mu,nu,lambda,i) += txxxi(mu,nu,lambda,i)
                ENDDO i
#
                DO j
                   txxxj(mu,nu,lambda,j)  = daoint(mu,nu,lambda,sigma)*ca(sigma,j)
                   L0xxxj(mu,nu,lambda,j) += txxxj(mu,nu,lambda,j)
                ENDDO j
#
           ENDDO  sigma
#     
           DO i
#     
              txixx(lambda,i,mu,nu) = L0xxxi(mu,nu,lambda,i)
              txxix(nu,mu,i,lambda) = L0xxxi(mu,nu,lambda,i)
#
              DO i1
                 Txxii(nu,mu,i,i1)  = txxix(nu,mu,i,lambda)*ca(lambda,i1)
                 prepare Vxxii(nu,mu,i,i1) += Txxii(nu,mu,i,i1)
              ENDDO i1
#
              DO i1
                 Tixxi(i1,nu,lambda,i)  = L0xxxi(mu,nu,lambda,i)*ca(mu,i1)
                 prepare Vixxi(i1,nu,lambda,i) += Tixxi(i1,nu,lambda,i)
              ENDDO i1
#
           ENDDO i
#
           DO j
#     
              txjxx(lambda,j,mu,nu) = L0xxxj(mu,nu,lambda,j)
              txxjx(nu,mu,j,lambda) = L0xxxj(mu,nu,lambda,j)
#
              DO j1
                 Txxjj(nu,mu,j,j1)  = txxjx(nu,mu,j,lambda)*ca(lambda,j1)
                 prepare Vxxjj(nu,mu,j,j1) += Txxjj(nu,mu,j,j1)
              ENDDO j1
#
              DO j1
                 Tjxxj(j1,nu,lambda,j)  = L0xxxj(mu,nu,lambda,j)*ca(mu,j1)
                 prepare Vjxxj(j1,nu,lambda,j) += Tjxxj(j1,nu,lambda,j)
              ENDDO j1
#
              DO i1
                 Tixxj(i1,nu,lambda,j)  = L0xxxj(mu,nu,lambda,j)*ca(mu,i1)
                 prepare Vixxj(i1,nu,lambda,j) += Tixxj(i1,nu,lambda,j)
              ENDDO i1
#
           ENDDO j
#
        deallocate L0xxxi(mu,nu,lambda,*)
        deallocate L0xxxj(mu,nu,lambda,*)
      ENDPARDO mu, nu, lambda 
#
     execute server_barrier
    #execute load_balance_on 
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_XXII
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_AAII
#
#    ------------------------------------------------------------------------
#
     execute sip_barrier
#
     PARDO mu, i, i1
#
           allocate Lxaii(mu,*,i,i1) 
#
           DO nu 
#
              REQUEST Vxxii(mu,nu,i,i1) i
#
              DO a
                 Txaii(mu,a,i,i1)  = Vxxii(mu,nu,i,i1)*ca(nu,a)
                 Lxaii(mu,a,i,i1) += Txaii(mu,a,i,i1)
              ENDDO a
#
           ENDDO nu 
#
           DO a 
#
              PREPARE Vxaii(mu,a,i,i1) = Lxaii(mu,a,i,i1) 
#
           ENDDO a 
#
           deallocate Lxaii(mu,*,i,i1) 
#
     ENDPARDO mu, i, i1
#
     execute server_barrier
     destroy Vxxii  
#
     PARDO a, i, i1
#
           allocate Laaii(*,a,i,i1) 
#
           DO mu 
#
              REQUEST Vxaii(mu,a,i,i1) i
#
              DO a1
#
                 Taaii(a1,a,i,i1)  = Vxaii(mu,a,i,i1)*ca(mu,a1)
                 Laaii(a1,a,i,i1) += Taaii(a1,a,i,i1)
#
              ENDDO a1
#
           ENDDO mu 
#
           DO a1 
#
              PREPARE Vaaii(a1,a,i,i1) = Laaii(a1,a,i,i1) 
#
           ENDDO a1 
#
           deallocate Laaii(*,a,i,i1) 
#
     ENDPARDO a, i, i1
#
     execute sip_barrier
     execute server_barrier
     destroy Vxaii
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_AAII
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_IAAI
#
#    ------------------------------------------------------------------------
#
     execute sip_barrier
#
     PARDO mu, i, i1
#
           allocate Lixai(i,mu,*,i1) 
#
           DO nu 
#
              REQUEST Vixxi(i,mu,nu,i1) i 
#
              DO a
#
                 Tixai(i,mu,a,i1)  = Vixxi(i,mu,nu,i1)*ca(nu,a)
                 Lixai(i,mu,a,i1) += Tixai(i,mu,a,i1)
#
              ENDDO a
#
           ENDDO nu 
#
           DO a 
#
              PREPARE Vixai(i,mu,a,i1) = Lixai(i,mu,a,i1)
#
           ENDDO a 
#
           deallocate Lixai(i,mu,*,i1) 
#
     ENDPARDO mu, i, i1
#
     execute sip_barrier
     execute server_barrier
     destroy Vixxi
#
     PARDO a, i, i1
#
           allocate Liaai(i,*,a,i1) 
#
           DO mu 
#
              REQUEST Vixai(i,mu,a,i1) i 
#
              DO a1
#
                 Tiaai(i,a1,a,i1)  = Vixai(i,mu,a,i1)*ca(mu,a1)
                 Liaai(i,a1,a,i1) += Tiaai(i,a1,a,i1)
#
              ENDDO a1
#
           ENDDO mu 
#
           DO a1 
#
              REQUEST                    Vaaii(a,a1,i,i1) a  
              tiaai(i,a1,a,i1)         = Vaaii(a,a1,i,i1) 
              tiaai(i,a1,a,i1)        -= Liaai(i,a1,a,i1)  
              tiaai(i,a1,a,i1)        *= -1.0  
              PREPARE Viaai(i,a1,a,i1) = tiaai(i,a1,a,i1)
#
           ENDDO a1 
#
           deallocate Liaai(i,*,a,i1) 
#
     ENDPARDO a, i, i1
#
     execute sip_barrier
     execute server_barrier
     destroy Vixai
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_IAAI
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_BBJJ
#
#    ------------------------------------------------------------------------
#
     execute sip_barrier
#
     PARDO mu, j, j1
#
           allocate Lxbjj(mu,*,j,j1) 
#
           DO nu 
#
              REQUEST Vxxjj(mu,nu,j,j1) j 
#
              DO b
#
                 Txbjj(mu,b,j,j1)  = Vxxjj(mu,nu,j,j1)*ca(nu,b)
                 Lxbjj(mu,b,j,j1) += Txbjj(mu,b,j,j1)
#
              ENDDO b
#
           ENDDO nu 
#
           DO b 
#
              PREPARE Vxbjj(mu,b,j,j1) = Lxbjj(mu,b,j,j1)
#
           ENDDO b 
#
           deallocate Lxbjj(mu,*,j,j1) 
#
     ENDPARDO mu, j, j1
#
     execute server_barrier
     destroy Vxxjj 
#
     PARDO b, j, j1
#
           allocate Lbbjj(*,b,j,j1) 
#
           DO mu 
#
              REQUEST Vxbjj(mu,b,j,j1) j 
#
              DO b1
#
                 Tbbjj(b1,b,j,j1)  = Vxbjj(mu,b,j,j1)*ca(mu,b1)
                 Lbbjj(b1,b,j,j1) += Tbbjj(b1,b,j,j1)
#
              ENDDO b1
#
           ENDDO mu 
#
           DO b1
#
              PREPARE Vbbjj(b1,b,j,j1) = Lbbjj(b1,b,j,j1)
#
           ENDDO b1
#
           deallocate Lbbjj(*,b,j,j1) 
#
     ENDPARDO b, j, j1
#
     execute sip_barrier
     execute server_barrier
     destroy Vxbjj
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_BBJJ
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_JBBJ
#
#    ------------------------------------------------------------------------
#
     execute sip_barrier
#
     PARDO mu, j, j1
#
           allocate Ljxbj(j,mu,*,j1) 
#
           DO nu 
#
              REQUEST Vjxxj(j,mu,nu,j1) j 
#
              DO b
#
                 Tjxbj(j,mu,b,j1)  = Vjxxj(j,mu,nu,j1)*ca(nu,b)
                 Ljxbj(j,mu,b,j1) += Tjxbj(j,mu,b,j1)
#
              ENDDO b
#
           ENDDO nu 
#
           DO b
#
              PREPARE Vjxbj(j,mu,b,j1) = Ljxbj(j,mu,b,j1)
#
           ENDDO b
#
           deallocate Ljxbj(j,mu,*,j1) 
#
     ENDPARDO mu, j, j1
#
     execute server_barrier
     destroy Vjxxj
#
     PARDO b, j, j1
#
           allocate Ljbbj(j,*,b,j1) 
#
           DO mu 
#
              REQUEST Vjxbj(j,mu,b,j1) j 
#
              DO b1
#
                 Tjbbj(j,b1,b,j1)  = Vjxbj(j,mu,b,j1)*ca(mu,b1)
                 Ljbbj(j,b1,b,j1) += Tjbbj(j,b1,b,j1)
#
              ENDDO b1
#
           ENDDO mu 
#
           DO b1
#
              REQUEST                    Vbbjj(b,b1,j,j1) b 
              tjbbj(j,b1,b,j1)         = Vbbjj(b,b1,j,j1) 
              tjbbj(j,b1,b,j1)        -= Ljbbj(j,b1,b,j1)  
              tjbbj(j,b1,b,j1)        *= -1.0  
              PREPARE Vjbbj(j,b1,b,j1) = tjbbj(j,b1,b,j1)
#
           ENDDO b1
#
           deallocate Ljbbj(j,*,b,j1) 
#
     ENDPARDO b, j, j1
#
     execute server_barrier
     destroy Vjxbj
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_JBBJ
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_IABJ
#
#    ------------------------------------------------------------------------
#
     execute sip_barrier
#
     PARDO mu, i, j
#
           allocate Lixbj(i,mu,*,j) 
#
           DO nu 
#
              REQUEST Vixxj(i,mu,nu,j) i
#
              DO b
#
                 Tixbj(i,mu,b,j)  = Vixxj(i,mu,nu,j)*ca(nu,b)
                 Lixbj(i,mu,b,j) += Tixbj(i,mu,b,j)
#
              ENDDO b
#
           ENDDO nu 
#
           DO b
#
              PREPARE Vixbj(i,mu,b,j) = Lixbj(i,mu,b,j)
#
           ENDDO b
#
           deallocate Lixbj(i,mu,*,j) 
#
     ENDPARDO mu, i, j
#
     execute server_barrier
     destroy Vixxj
#
     PARDO b, i, j
#
           allocate Liabj(i,*,b,j) 
#
           DO mu 
#
              REQUEST Vixbj(i,mu,b,j) i
#
              DO a
#
                 Tiabj(i,a,b,j)  = Vixbj(i,mu,b,j)*ca(mu,a)
                 Liabj(i,a,b,j) += Tiabj(i,a,b,j)
#
              ENDDO a
#
           ENDDO mu 
#
           DO a
#
              PREPARE Viabj(i,a,b,j) = Liabj(i,a,b,j)
#
           ENDDO a
#
           deallocate Liabj(i,*,b,j) 
#
     ENDPARDO b, i, j
#
     execute sip_barrier
     execute server_barrier
     destroy Vixbj
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_IABJ
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_PPPP
#
#    ------------------------------------------------------------------------
#
          CALL TRAN_XXII
          CALL TRAN_AAII
          CALL TRAN_IAAI
#
          CALL TRAN_BBJJ
          CALL TRAN_JBBJ
#
          CALL TRAN_IABJ
#
#    ------------------------------------------------------------------------
#
     ENDPROC TRAN_PPPP
#
#    ------------------------------------------------------------------------
#
#    ------------------------------------------------------------------------
#
     PROC TRAN_UHF 
# 
         CALL TRAN_PPPP  
#
     ENDPROC TRAN_UHF 
# 
#    ------------------------------------------------------------------------ 
#
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      PROC WRITEOUT
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      execute sip_barrier
      execute server_barrier
    ##execute blocks_to_list                Vaaii
    ##execute blocks_to_list                Viaai
    ##execute blocks_to_list                Vbbjj
    ##execute blocks_to_list                Vjbbj
    ##execute blocks_to_list                Viabj
#
      execute blocks_to_list VSTART1A1
      execute blocks_to_list VSTART1A1
      execute blocks_to_list VSTART1A2
      execute blocks_to_list VSTART1A2
      execute blocks_to_list VSTART1A3
      execute blocks_to_list VSTART1A3
      execute blocks_to_list VSTART1A4
      execute blocks_to_list VSTART1A4
      execute blocks_to_list VSTART1A5
      execute blocks_to_list VSTART1A5
      execute blocks_to_list VSTART1A6
      execute blocks_to_list VSTART1A6
      execute blocks_to_list VSTART1A7
      execute blocks_to_list VSTART1A7
      execute blocks_to_list VSTART1A8
      execute blocks_to_list VSTART1A8
      execute blocks_to_list VSTART1A9
      execute blocks_to_list VSTART1A9
      execute blocks_to_list VSTART1A10
      execute blocks_to_list VSTART1A10
      execute blocks_to_list VSTART1A11
      execute blocks_to_list VSTART1A11
      execute blocks_to_list VSTART1A12
      execute blocks_to_list VSTART1A12
#
      execute write_blocks_to_list
      execute sip_barrier
      execute server_barrier
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      ENDPROC WRITEOUT
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
      PROC R1ANEW
#     ----------- 
#
      PARDO a, i
#
            tai(a,i) = 0.0
#
            DO i1
               GET         VCACT1A(a,i1)
               t2ai(a,i) = VCACT1A(a,i1)*fock_a(i1,i)
               tai(a,i) -= t2ai(a,i)
            ENDDO i1
#
            DO a1
#
               GET         VCACT1A(a1,i)
               t1ai(a,i) = VCACT1A(a1,i)*fock_a(a,a1)
               tai(a,i) += t1ai(a,i)
#
            ENDDO a1
#
            PUT VCHACT1A(a,i) = tai(a,i)
#
            DO k20
               if k20 == spdim
                  t2aiS(a,i,k20)     = tai(a,i)
                  PUT VCH1A(a,i,k20) = t2aiS(a,i,k20)
               endif
            ENDDO k20
#
      ENDPARDO a, i
#
      execute sip_barrier 
#
      PARDO a, i, b, j 
#
            REQUEST              Viabj(i,a,b,j) a 
            GET                  VCACT1A(b,j)
            t2ai(a,i)          = Viabj(i,a,b,j)*VCACT1A(b,j)
            PUT VCHACT1A(a,i) += t2ai(a,i)
#
            DO k20
               if k20 == spdim
                  t2aiS(a,i,k20)     = t2ai(a,i)
                  PUT VCH1A(a,i,k20)+= t2aiS(a,i,k20)
               endif
            ENDDO k20
#
      ENDPARDO a, i, b, j 
#
      PARDO a, i, a1, i1     
#
            REQUEST             Viaai(i1,a1,a,i) i
            GET                 VCACT1A(a1,i1)
            tai(a,i)          = Viaai(i1,a1,a,i)*VCACT1A(a1,i1)
            PUT VCHACT1A(a,i)+= tai(a,i)
#
            DO k20
               if k20 == spdim
                  t2aiS(a,i,k20)     = tai(a,i)
                  PUT VCH1A(a,i,k20)+= t2aiS(a,i,k20)
               endif
            ENDDO k20
#
      ENDPARDO a, i, a1, i1     
#
      ENDPROC R1ANEW
#     --------------
#
     PROC UPDATE
#    ----------- 
#
     PARDO a, i
#
           GET        VCHACT1A(a,i)
           tai(a,i) = VCHACT1A(a,i)
#
            DO k20
               if k20 == spdim
                  t2aiS(a,i,k20)     = tai(a,i)
                  PUT VCH1A(a,i,k20) = t2aiS(a,i,k20)
               endif
            ENDDO k20
#
     ENDPARDO a, i
#
     ENDPROC UPDATE
#    -------------- 
#
     PROC VCHACT_ZERO
#    ---------------
#
          PARDO a, i
                tai(a,i) = 0.0
                PUT VCHACT1A(a,i) = tai(a,i)
          ENDPARDO a, i
#
     ENDPROC VCHACT_ZERO
#    -------------------- 
#
     PROC startvec2
#    -------------- 
#
     allocate lai(*,*)
#
     sqr=1.0
     exponent=0.5
     execute square_root sqr exponent
     etemp=1.0/sqr
#
     PARDO a, i
           lai(a,i)=0.0
           execute place_one lai etemp
           tai(a,i)=lai(a,i)
           put VSTART1A1(a,i)=tai(a,i)
     ENDPARDO a, i
#
     PARDO a, i
           lai(a,i)=0.0
           execute place_one2 lai etemp
           tai(a,i)=lai(a,i)
           put VSTART1A2(a,i)=tai(a,i)
     ENDPARDO a, i
#
     PARDO a, i
           lai(a,i)=0.0
           execute place_one3 lai etemp
           tai(a,i)=lai(a,i)
           put VSTART1A3(a,i)=tai(a,i)
     ENDPARDO a, i
#
     PARDO a, i
           lai(a,i)=0.0
           execute place_one4 lai etemp
           tai(a,i)=lai(a,i)
           put VSTART1A4(a,i)=tai(a,i)
     ENDPARDO a, i
#
     PARDO a, i
           lai(a,i)=0.0
           execute place_one5 lai etemp
           tai(a,i)=lai(a,i)
           put VSTART1A5(a,i)=tai(a,i)
     ENDPARDO a, i
#
     PARDO a, i
           lai(a,i)=0.0
           execute place_one6 lai etemp
           tai(a,i)=lai(a,i)
           put VSTART1A6(a,i)=tai(a,i)
     ENDPARDO a, i
#
     etemp *= -1.0 
#
     PARDO a, i
           lai(a,i)=0.0
           execute place_one lai etemp
           tai(a,i)=lai(a,i)
           put VSTART1A7(a,i)=tai(a,i)
     ENDPARDO a, i
#
     PARDO a, i
           lai(a,i)=0.0
           execute place_one2 lai etemp
           tai(a,i)=lai(a,i)
           put VSTART1A8(a,i)=tai(a,i)
     ENDPARDO a, i
#
     PARDO a, i
           lai(a,i)=0.0
           execute place_one3 lai etemp
           tai(a,i)=lai(a,i)
           put VSTART1A9(a,i)=tai(a,i)
     ENDPARDO a, i
#
     PARDO a, i
           lai(a,i)=0.0
           execute place_one4 lai etemp
           tai(a,i)=lai(a,i)
           put VSTART1A10(a,i)=tai(a,i)
     ENDPARDO a, i
#
     PARDO a, i
           lai(a,i)=0.0
           execute place_one5 lai etemp
           tai(a,i)=lai(a,i)
           put VSTART1A11(a,i)=tai(a,i)
     ENDPARDO a, i
#
     PARDO a, i
           lai(a,i)=0.0
           execute place_one6 lai etemp
           tai(a,i)=lai(a,i)
           put VSTART1A12(a,i)=tai(a,i)
     ENDPARDO a, i
#
     deallocate lai(*,*)
#
     execute sip_barrier 

     ENDPROC startvec2
#    ----------------- 
#
     PROC copy_starttoev
#    ------------------- 
#
     PARDO a, i
#
           GET                VSTART1A1(a,i)
           tai(a,i)         = VSTART1A1(a,i)
           PUT VCE1A(a,i)   = tai(a,i)
           PUT VCACT1A(a,i) = tai(a,i)
#
           DO k21
              if k21 == 1
                taiS(a,i,k21)     = tai(a,i)
                PUT VC1A(a,i,k21) = taiS(a,i,k21)
              endif
           ENDDO k21
#
     ENDPARDO a, i
#
     execute sip_barrier
#
     ENDPROC copy_starttoev
#    ---------------------- 
#
     PROC copy_ACT_to_E
#    ------------------ 
#
     PARDO a, i
           GET              VCACT1A(a,i)
           tai(a,i)       = VCACT1A(a,i)
           PUT VCE1A(a,i) = tai(a,i)
     ENDPARDO a, i
#
     execute sip_barrier
#
     ENDPROC copy_ACT_to_E
#    --------------------- 
#
     PROC copy_toVCactual_tr
#    ----------------------- 
#
     PARDO a, i
           DO k21
              if k21 == 21
                 GET        VC1A(a,i,k21)
                 tai(a,i) = VC1A(a,i,k21)
                 PUT VCACT1A(a,i) = Tai(a,i)
                 DO j21
                    if j21 == 13
                       taiS(a,i,j21)     = Tai(a,i)
                       PUT VC1A(a,i,j21) = taiS(a,i,j21)
                    endif
                 ENDDO j21
              endif
           ENDDO k21
     ENDPARDO a, i
#
     ENDPROC copy_toVCactual_tr
#    -------------------------- 
#
     PROC copy_toVCactual
#    -------------------- 
#
     PARDO a, i
           DO k21
              if k21 == spdim
                 GET                VC1A(a,i,k21)
                 tai(a,i)         = VC1A(a,i,k21)
                 PUT VCACT1A(a,i) = tai(a,i)
              endif
           ENDDO k21
     ENDPARDO a, i
#
     execute sip_barrier
#
     ENDPROC copy_toVCactual
#    -----------------------
#
     PROC copy_toVCactual_2
#    ---------------------- 
#
     PARDO a, i
           DO k21
              if k21 > spdim
                 GET                VC1A(a,i,k21)
                 tai(a,i)         = VC1A(a,i,k21)
                 PUT VCACT1A(a,i) = tai(a,i)
                 exit 
              endif
           ENDDO k21
     ENDPARDO a, i
#
     execute sip_barrier
#
     ENDPROC copy_toVCactual_2
#    ------------------------- 
#
     PROC copy_toVCHactual_2
#    ----------------------- 
#
     PARDO a, i
           DO k21
              if k21 > spdim
                 GET                 VC1A(a,i,k21)
                 tai(a,i)          = VC1A(a,i,k21)
                 PUT VCHACT1A(a,i) = tai(a,i)
                 exit 
              endif
           ENDDO k21
     ENDPARDO a, i
#
     execute sip_barrier
#
     ENDPROC copy_toVCHactual_2
#    -------------------------- 
#
     PROC HCmult
#    -----------
#
      call R1ANEW
#
     ENDPROC HCmult
#    --------------
#
# ----------------------------------------------------------------------------
#
     PROC Adiag
#    ---------- 
#
     Aeig1=0.0
     Aeig2=0.0
     Aeig3=0.0
     Aeig4=0.0
     Aeig5=0.0
     Aeig6=0.0
     Aeig7=0.0
     Aeig8=0.0
     Aeig9=0.0
     Aeig10=0.0
     Aeig11=0.0
     Aeig12=0.0
     Aeig13=0.0
     Aeig14=0.0
     Aeig15=0.0
     Aeig16=0.0
     Aeig17=0.0
     Aeig18=0.0
     Aeig19=0.0
     Aeig20=0.0
#
#    FIRST ITERATION
#
     if spdim == 1
#
    #Aeig1=a1_1
#
     do jindex20
     do kindex20
         if jindex20 == 1
         if kindex20 == 1
            t20(kindex20,jindex20) = sMAT20(kindex20,jindex20)
            execute return_sval t20  Aeig1
         endif
         endif
     enddo kindex20
     enddo jindex20
#
     endif
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--start of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#    --------------2th iteration-----------------
     if spdim == 2
#
     execute eig_nonsymm Smat2 SVEV2
#
     do jindex2
     do kindex2
#
     tcoef2(kindex2,jindex2)=Smat2(kindex2,jindex2)
#
     if kindex2 == 1
     if jindex2 == 1
     execute return_sval tcoef2  Aeig1
     endif
     endif
     if kindex2 == 2
     if jindex2 == 2
     execute return_sval tcoef2  Aeig2
     endif
     endif
#
     enddo kindex2
     enddo jindex2
#
     endif
#
#    --------------end 2th iteration-----------------
#
#    --------------3th iteration-----------------
     if spdim == 3
#
     execute eig_nonsymm Smat3 SVEV3
#
     do jindex3
     do kindex3
#
     tcoef3(kindex3,jindex3)=Smat3(kindex3,jindex3)
#
     if kindex3 == 1
     if jindex3 == 1
     execute return_sval tcoef3  Aeig1
     endif
     endif
     if kindex3 == 2
     if jindex3 == 2
     execute return_sval tcoef3  Aeig2
     endif
     endif
     if kindex3 == 3
     if jindex3 == 3
     execute return_sval tcoef3  Aeig3
     endif
     endif
#
     enddo kindex3
     enddo jindex3
#
     endif
#
#    --------------end 3th iteration-----------------
#
#    --------------4th iteration-----------------
     if spdim == 4
#
     execute eig_nonsymm Smat4 SVEV4
#
     do jindex4
     do kindex4
#
     tcoef4(kindex4,jindex4)=Smat4(kindex4,jindex4)
#
     if kindex4 == 1
     if jindex4 == 1
     execute return_sval tcoef4  Aeig1
     endif
     endif
     if kindex4 == 2
     if jindex4 == 2
     execute return_sval tcoef4  Aeig2
     endif
     endif
     if kindex4 == 3
     if jindex4 == 3
     execute return_sval tcoef4  Aeig3
     endif
     endif
     if kindex4 == 4
     if jindex4 == 4
     execute return_sval tcoef4  Aeig4
     endif
     endif
#
     enddo kindex4
     enddo jindex4
#
     endif
#
#    --------------end 4th iteration-----------------
#
#    --------------5th iteration-----------------
     if spdim == 5
#
     execute eig_nonsymm Smat5 SVEV5
#
     do jindex5
     do kindex5
#
     tcoef5(kindex5,jindex5)=Smat5(kindex5,jindex5)
#
     if kindex5 == 1
     if jindex5 == 1
     execute return_sval tcoef5  Aeig1
     endif
     endif
     if kindex5 == 2
     if jindex5 == 2
     execute return_sval tcoef5  Aeig2
     endif
     endif
     if kindex5 == 3
     if jindex5 == 3
     execute return_sval tcoef5  Aeig3
     endif
     endif
     if kindex5 == 4
     if jindex5 == 4
     execute return_sval tcoef5  Aeig4
     endif
     endif
     if kindex5 == 5
     if jindex5 == 5
     execute return_sval tcoef5  Aeig5
     endif
     endif
#
     enddo kindex5
     enddo jindex5
#
     endif
#
#    --------------end 5th iteration-----------------
#
#    --------------6th iteration-----------------
     if spdim == 6
#
     execute eig_nonsymm Smat6 SVEV6
#
     do jindex6
     do kindex6
#
     tcoef6(kindex6,jindex6)=Smat6(kindex6,jindex6)
#
     if kindex6 == 1
     if jindex6 == 1
     execute return_sval tcoef6  Aeig1
     endif
     endif
     if kindex6 == 2
     if jindex6 == 2
     execute return_sval tcoef6  Aeig2
     endif
     endif
     if kindex6 == 3
     if jindex6 == 3
     execute return_sval tcoef6  Aeig3
     endif
     endif
     if kindex6 == 4
     if jindex6 == 4
     execute return_sval tcoef6  Aeig4
     endif
     endif
     if kindex6 == 5
     if jindex6 == 5
     execute return_sval tcoef6  Aeig5
     endif
     endif
     if kindex6 == 6
     if jindex6 == 6
     execute return_sval tcoef6  Aeig6
     endif
     endif
#
     enddo kindex6
     enddo jindex6
#
     endif
#
#    --------------end 6th iteration-----------------
#
#    --------------7th iteration-----------------
     if spdim == 7
#
     execute eig_nonsymm Smat7 SVEV7
#
     do jindex7
     do kindex7
#
     tcoef7(kindex7,jindex7)=Smat7(kindex7,jindex7)
#
     if kindex7 == 1
     if jindex7 == 1
     execute return_sval tcoef7  Aeig1
     endif
     endif
     if kindex7 == 2
     if jindex7 == 2
     execute return_sval tcoef7  Aeig2
     endif
     endif
     if kindex7 == 3
     if jindex7 == 3
     execute return_sval tcoef7  Aeig3
     endif
     endif
     if kindex7 == 4
     if jindex7 == 4
     execute return_sval tcoef7  Aeig4
     endif
     endif
     if kindex7 == 5
     if jindex7 == 5
     execute return_sval tcoef7  Aeig5
     endif
     endif
     if kindex7 == 6
     if jindex7 == 6
     execute return_sval tcoef7  Aeig6
     endif
     endif
     if kindex7 == 7
     if jindex7 == 7
     execute return_sval tcoef7  Aeig7
     endif
     endif
#
     enddo kindex7
     enddo jindex7
#
     endif
#
#    --------------end 7th iteration-----------------
#
#    --------------8th iteration-----------------
     if spdim == 8
#
     execute eig_nonsymm Smat8 SVEV8
#
     do jindex8
     do kindex8
#
     tcoef8(kindex8,jindex8)=Smat8(kindex8,jindex8)
#
     if kindex8 == 1
     if jindex8 == 1
     execute return_sval tcoef8  Aeig1
     endif
     endif
     if kindex8 == 2
     if jindex8 == 2
     execute return_sval tcoef8  Aeig2
     endif
     endif
     if kindex8 == 3
     if jindex8 == 3
     execute return_sval tcoef8  Aeig3
     endif
     endif
     if kindex8 == 4
     if jindex8 == 4
     execute return_sval tcoef8  Aeig4
     endif
     endif
     if kindex8 == 5
     if jindex8 == 5
     execute return_sval tcoef8  Aeig5
     endif
     endif
     if kindex8 == 6
     if jindex8 == 6
     execute return_sval tcoef8  Aeig6
     endif
     endif
     if kindex8 == 7
     if jindex8 == 7
     execute return_sval tcoef8  Aeig7
     endif
     endif
     if kindex8 == 8
     if jindex8 == 8
     execute return_sval tcoef8  Aeig8
     endif
     endif
#
     enddo kindex8
     enddo jindex8
#
     endif
#
#    --------------end 8th iteration-----------------
#
#    --------------9th iteration-----------------
     if spdim == 9
#
     execute eig_nonsymm Smat9 SVEV9
#
     do jindex9
     do kindex9
#
     tcoef9(kindex9,jindex9)=Smat9(kindex9,jindex9)
#
     if kindex9 == 1
     if jindex9 == 1
     execute return_sval tcoef9  Aeig1
     endif
     endif
     if kindex9 == 2
     if jindex9 == 2
     execute return_sval tcoef9  Aeig2
     endif
     endif
     if kindex9 == 3
     if jindex9 == 3
     execute return_sval tcoef9  Aeig3
     endif
     endif
     if kindex9 == 4
     if jindex9 == 4
     execute return_sval tcoef9  Aeig4
     endif
     endif
     if kindex9 == 5
     if jindex9 == 5
     execute return_sval tcoef9  Aeig5
     endif
     endif
     if kindex9 == 6
     if jindex9 == 6
     execute return_sval tcoef9  Aeig6
     endif
     endif
     if kindex9 == 7
     if jindex9 == 7
     execute return_sval tcoef9  Aeig7
     endif
     endif
     if kindex9 == 8
     if jindex9 == 8
     execute return_sval tcoef9  Aeig8
     endif
     endif
     if kindex9 == 9
     if jindex9 == 9
     execute return_sval tcoef9  Aeig9
     endif
     endif
#
     enddo kindex9
     enddo jindex9
#
     endif
#
#
#    --------------end 9th iteration-----------------
#
#
#    --------------10th iteration-----------------
     if spdim == 10
#
     execute eig_nonsymm Smat10 SVEV10
#
     do jindex10
     do kindex10
#
     tcoef10(kindex10,jindex10)=Smat10(kindex10,jindex10)
#
     if kindex10 == 1
     if jindex10 == 1
     execute return_sval tcoef10  Aeig1
     endif
     endif
     if kindex10 == 2
     if jindex10 == 2
     execute return_sval tcoef10  Aeig2
     endif
     endif
     if kindex10 == 3
     if jindex10 == 3
     execute return_sval tcoef10  Aeig3
     endif
     endif
     if kindex10 == 4
     if jindex10 == 4
     execute return_sval tcoef10  Aeig4
     endif
     endif
     if kindex10 == 5
     if jindex10 == 5
     execute return_sval tcoef10  Aeig5
     endif
     endif
     if kindex10 == 6
     if jindex10 == 6
     execute return_sval tcoef10  Aeig6
     endif
     endif
     if kindex10 == 7
     if jindex10 == 7
     execute return_sval tcoef10  Aeig7
     endif
     endif
     if kindex10 == 8
     if jindex10 == 8
     execute return_sval tcoef10  Aeig8
     endif
     endif
     if kindex10 == 9
     if jindex10 == 9
     execute return_sval tcoef10  Aeig9
     endif
     endif
     if kindex10 == 10
     if jindex10 == 10
     execute return_sval tcoef10  Aeig10
     endif
     endif
#
     enddo kindex10
     enddo jindex10
#
     endif
#
#    --------------end 10th iteration-----------------
#
#    --------------11th iteration-----------------
     if spdim == 11
#
     execute eig_nonsymm Smat11 SVEV11
#
     do jindex11
     do kindex11
#
     tcoef11(kindex11,jindex11)=Smat11(kindex11,jindex11)
#
     if kindex11 == 1
     if jindex11 == 1
     execute return_sval tcoef11  Aeig1
     endif
     endif
     if kindex11 == 2
     if jindex11 == 2
     execute return_sval tcoef11  Aeig2
     endif
     endif
     if kindex11 == 3
     if jindex11 == 3
     execute return_sval tcoef11  Aeig3
     endif
     endif
     if kindex11 == 4
     if jindex11 == 4
     execute return_sval tcoef11  Aeig4
     endif
     endif
     if kindex11 == 5
     if jindex11 == 5
     execute return_sval tcoef11  Aeig5
     endif
     endif
     if kindex11 == 6
     if jindex11 == 6
     execute return_sval tcoef11  Aeig6
     endif
     endif
     if kindex11 == 7
     if jindex11 == 7
     execute return_sval tcoef11  Aeig7
     endif
     endif
     if kindex11 == 8
     if jindex11 == 8
     execute return_sval tcoef11  Aeig8
     endif
     endif
     if kindex11 == 9
     if jindex11 == 9
     execute return_sval tcoef11  Aeig9
     endif
     endif
     if kindex11 == 10
     if jindex11 == 10
     execute return_sval tcoef11  Aeig10
     endif
     endif
     if kindex11 == 11
     if jindex11 == 11
     execute return_sval tcoef11  Aeig11
     endif
     endif
#
     enddo kindex11
     enddo jindex11
#
     endif
#
#    --------------end 11th iteration-----------------
#
#    --------------12th iteration-----------------
     if spdim == 12
#
     execute eig_nonsymm Smat12 SVEV12
#
     do jindex12
     do kindex12
#
     tcoef12(kindex12,jindex12)=Smat12(kindex12,jindex12)
#
     if kindex12 == 1
     if jindex12 == 1
     execute return_sval tcoef12  Aeig1
     endif
     endif
     if kindex12 == 2
     if jindex12 == 2
     execute return_sval tcoef12  Aeig2
     endif
     endif
     if kindex12 == 3
     if jindex12 == 3
     execute return_sval tcoef12  Aeig3
     endif
     endif
     if kindex12 == 4
     if jindex12 == 4
     execute return_sval tcoef12  Aeig4
     endif
     endif
     if kindex12 == 5
     if jindex12 == 5
     execute return_sval tcoef12  Aeig5
     endif
     endif
     if kindex12 == 6
     if jindex12 == 6
     execute return_sval tcoef12  Aeig6
     endif
     endif
     if kindex12 == 7
     if jindex12 == 7
     execute return_sval tcoef12  Aeig7
     endif
     endif
     if kindex12 == 8
     if jindex12 == 8
     execute return_sval tcoef12  Aeig8
     endif
     endif
     if kindex12 == 9
     if jindex12 == 9
     execute return_sval tcoef12  Aeig9
     endif
     endif
     if kindex12 == 10
     if jindex12 == 10
     execute return_sval tcoef12  Aeig10
     endif
     endif
     if kindex12 == 11
     if jindex12 == 11
     execute return_sval tcoef12  Aeig11
     endif
     endif
     if kindex12 == 12
     if jindex12 == 12
     execute return_sval tcoef12  Aeig12
     endif
     endif
#
     enddo kindex12
     enddo jindex12
#
     endif
#
#    --------------end 12th iteration-----------------
#
#    --------------13th iteration-----------------
     if spdim == 13
#
     execute eig_nonsymm Smat13 SVEV13
#
     do jindex13
     do kindex13
#
     tcoef13(kindex13,jindex13)=Smat13(kindex13,jindex13)
#
     if kindex13 == 1
     if jindex13 == 1
     execute return_sval tcoef13  Aeig1
     endif
     endif
     if kindex13 == 2
     if jindex13 == 2
     execute return_sval tcoef13  Aeig2
     endif
     endif
     if kindex13 == 3
     if jindex13 == 3
     execute return_sval tcoef13  Aeig3
     endif
     endif
     if kindex13 == 4
     if jindex13 == 4
     execute return_sval tcoef13  Aeig4
     endif
     endif
     if kindex13 == 5
     if jindex13 == 5
     execute return_sval tcoef13  Aeig5
     endif
     endif
     if kindex13 == 6
     if jindex13 == 6
     execute return_sval tcoef13  Aeig6
     endif
     endif
     if kindex13 == 7
     if jindex13 == 7
     execute return_sval tcoef13  Aeig7
     endif
     endif
     if kindex13 == 8
     if jindex13 == 8
     execute return_sval tcoef13  Aeig8
     endif
     endif
     if kindex13 == 9
     if jindex13 == 9
     execute return_sval tcoef13  Aeig9
     endif
     endif
     if kindex13 == 10
     if jindex13 == 10
     execute return_sval tcoef13  Aeig10
     endif
     endif
     if kindex13 == 11
     if jindex13 == 11
     execute return_sval tcoef13  Aeig11
     endif
     endif
     if kindex13 == 12
     if jindex13 == 12
     execute return_sval tcoef13  Aeig12
     endif
     endif
     if kindex13 == 13
     if jindex13 == 13
     execute return_sval tcoef13  Aeig13
     endif
     endif
#
     enddo kindex13
     enddo jindex13
#
     endif
#
#    --------------end 13th iteration-----------------
#
#    --------------14th iteration-----------------
     if spdim == 14
#
     execute eig_nonsymm Smat14 SVEV14
#
     do jindex14
     do kindex14
#
     tcoef14(kindex14,jindex14)=Smat14(kindex14,jindex14)
#
     if kindex14 == 1
     if jindex14 == 1
     execute return_sval tcoef14  Aeig1
     endif
     endif
     if kindex14 == 2
     if jindex14 == 2
     execute return_sval tcoef14  Aeig2
     endif
     endif
     if kindex14 == 3
     if jindex14 == 3
     execute return_sval tcoef14  Aeig3
     endif
     endif
     if kindex14 == 4
     if jindex14 == 4
     execute return_sval tcoef14  Aeig4
     endif
     endif
     if kindex14 == 5
     if jindex14 == 5
     execute return_sval tcoef14  Aeig5
     endif
     endif
     if kindex14 == 6
     if jindex14 == 6
     execute return_sval tcoef14  Aeig6
     endif
     endif
     if kindex14 == 7
     if jindex14 == 7
     execute return_sval tcoef14  Aeig7
     endif
     endif
     if kindex14 == 8
     if jindex14 == 8
     execute return_sval tcoef14  Aeig8
     endif
     endif
     if kindex14 == 9
     if jindex14 == 9
     execute return_sval tcoef14  Aeig9
     endif
     endif
     if kindex14 == 10
     if jindex14 == 10
     execute return_sval tcoef14  Aeig10
     endif
     endif
     if kindex14 == 11
     if jindex14 == 11
     execute return_sval tcoef14  Aeig11
     endif
     endif
     if kindex14 == 12
     if jindex14 == 12
     execute return_sval tcoef14  Aeig12
     endif
     endif
     if kindex14 == 13
     if jindex14 == 13
     execute return_sval tcoef14  Aeig13
     endif
     endif
     if kindex14 == 14
     if jindex14 == 14
     execute return_sval tcoef14  Aeig14
     endif
     endif
#
     enddo kindex14
     enddo jindex14
#
     endif
#
#    --------------end 14th iteration-----------------
#
#
#    --------------15th iteration-----------------
     if spdim == 15
#
     execute eig_nonsymm Smat15 SVEV15
#
     do jindex15
     do kindex15
#
     tcoef15(kindex15,jindex15)=Smat15(kindex15,jindex15)
#
     if kindex15 == 1
     if jindex15 == 1
     execute return_sval tcoef15  Aeig1
     endif
     endif
     if kindex15 == 2
     if jindex15 == 2
     execute return_sval tcoef15  Aeig2
     endif
     endif
     if kindex15 == 3
     if jindex15 == 3
     execute return_sval tcoef15  Aeig3
     endif
     endif
     if kindex15 == 4
     if jindex15 == 4
     execute return_sval tcoef15  Aeig4
     endif
     endif
     if kindex15 == 5
     if jindex15 == 5
     execute return_sval tcoef15  Aeig5
     endif
     endif
     if kindex15 == 6
     if jindex15 == 6
     execute return_sval tcoef15  Aeig6
     endif
     endif
     if kindex15 == 7
     if jindex15 == 7
     execute return_sval tcoef15  Aeig7
     endif
     endif
     if kindex15 == 8
     if jindex15 == 8
     execute return_sval tcoef15  Aeig8
     endif
     endif
     if kindex15 == 9
     if jindex15 == 9
     execute return_sval tcoef15  Aeig9
     endif
     endif
     if kindex15 == 10
     if jindex15 == 10
     execute return_sval tcoef15  Aeig10
     endif
     endif
     if kindex15 == 11
     if jindex15 == 11
     execute return_sval tcoef15  Aeig11
     endif
     endif
     if kindex15 == 12
     if jindex15 == 12
     execute return_sval tcoef15  Aeig12
     endif
     endif
     if kindex15 == 13
     if jindex15 == 13
     execute return_sval tcoef15  Aeig13
     endif
     endif
     if kindex15 == 14
     if jindex15 == 14
     execute return_sval tcoef15  Aeig14
     endif
     endif
     if kindex15 == 15
     if jindex15 == 15
     execute return_sval tcoef15  Aeig15
     endif
     endif
#
     enddo kindex15
     enddo jindex15
#
     endif
#
#    --------------end 15th iteration-----------------
#
#    --------------16th iteration-----------------
     if spdim == 16
#
     execute eig_nonsymm Smat16 SVEV16
#
     do jindex16
     do kindex16
#
     tcoef16(kindex16,jindex16)=Smat16(kindex16,jindex16)
#
     if kindex16 == 1
     if jindex16 == 1
     execute return_sval tcoef16  Aeig1
     endif
     endif
     if kindex16 == 2
     if jindex16 == 2
     execute return_sval tcoef16  Aeig2
     endif
     endif
     if kindex16 == 3
     if jindex16 == 3
     execute return_sval tcoef16  Aeig3
     endif
     endif
     if kindex16 == 4
     if jindex16 == 4
     execute return_sval tcoef16  Aeig4
     endif
     endif
     if kindex16 == 5
     if jindex16 == 5
     execute return_sval tcoef16  Aeig5
     endif
     endif
     if kindex16 == 6
     if jindex16 == 6
     execute return_sval tcoef16  Aeig6
     endif
     endif
     if kindex16 == 7
     if jindex16 == 7
     execute return_sval tcoef16  Aeig7
     endif
     endif
     if kindex16 == 8
     if jindex16 == 8
     execute return_sval tcoef16  Aeig8
     endif
     endif
     if kindex16 == 9
     if jindex16 == 9
     execute return_sval tcoef16  Aeig9
     endif
     endif
     if kindex16 == 10
     if jindex16 == 10
     execute return_sval tcoef16  Aeig10
     endif
     endif
     if kindex16 == 11
     if jindex16 == 11
     execute return_sval tcoef16  Aeig11
     endif
     endif
     if kindex16 == 12
     if jindex16 == 12
     execute return_sval tcoef16  Aeig12
     endif
     endif
     if kindex16 == 13
     if jindex16 == 13
     execute return_sval tcoef16  Aeig13
     endif
     endif
     if kindex16 == 14
     if jindex16 == 14
     execute return_sval tcoef16  Aeig14
     endif
     endif
     if kindex16 == 15
     if jindex16 == 15
     execute return_sval tcoef16  Aeig15
     endif
     endif
     if kindex16 == 16
     if jindex16 == 16
     execute return_sval tcoef16  Aeig16
     endif
     endif
#
     enddo kindex16
     enddo jindex16
#
     endif
#
#    --------------end 16th iteration-----------------
#
#    --------------17th iteration-----------------
     if spdim == 17
#
     execute eig_nonsymm Smat17 SVEV17
#
     do jindex17
     do kindex17
#
     tcoef17(kindex17,jindex17)=Smat17(kindex17,jindex17)
#
     if kindex17 == 1
     if jindex17 == 1
     execute return_sval tcoef17  Aeig1
     endif
     endif
     if kindex17 == 2
     if jindex17 == 2
     execute return_sval tcoef17  Aeig2
     endif
     endif
     if kindex17 == 3
     if jindex17 == 3
     execute return_sval tcoef17  Aeig3
     endif
     endif
     if kindex17 == 4
     if jindex17 == 4
     execute return_sval tcoef17  Aeig4
     endif
     endif
     if kindex17 == 5
     if jindex17 == 5
     execute return_sval tcoef17  Aeig5
     endif
     endif
     if kindex17 == 6
     if jindex17 == 6
     execute return_sval tcoef17  Aeig6
     endif
     endif
     if kindex17 == 7
     if jindex17 == 7
     execute return_sval tcoef17  Aeig7
     endif
     endif
     if kindex17 == 8
     if jindex17 == 8
     execute return_sval tcoef17  Aeig8
     endif
     endif
     if kindex17 == 9
     if jindex17 == 9
     execute return_sval tcoef17  Aeig9
     endif
     endif
     if kindex17 == 10
     if jindex17 == 10
     execute return_sval tcoef17  Aeig10
     endif
     endif
     if kindex17 == 11
     if jindex17 == 11
     execute return_sval tcoef17  Aeig11
     endif
     endif
     if kindex17 == 12
     if jindex17 == 12
     execute return_sval tcoef17  Aeig12
     endif
     endif
     if kindex17 == 13
     if jindex17 == 13
     execute return_sval tcoef17  Aeig13
     endif
     endif
     if kindex17 == 14
     if jindex17 == 14
     execute return_sval tcoef17  Aeig14
     endif
     endif
     if kindex17 == 15
     if jindex17 == 15
     execute return_sval tcoef17  Aeig15
     endif
     endif
     if kindex17 == 16
     if jindex17 == 16
     execute return_sval tcoef17  Aeig16
     endif
     endif
     if kindex17 == 17
     if jindex17 == 17
     execute return_sval tcoef17  Aeig17
     endif
     endif
#
     enddo kindex17
     enddo jindex17
#
     endif
#
#    --------------end 17th iteration-----------------
#
#    --------------18th iteration-----------------
     if spdim == 18
#
     execute eig_nonsymm Smat18 SVEV18
#
     do jindex18
     do kindex18
#
     tcoef18(kindex18,jindex18)=Smat18(kindex18,jindex18)
#
     if kindex18 == 1
     if jindex18 == 1
     execute return_sval tcoef18  Aeig1
     endif
     endif
     if kindex18 == 2
     if jindex18 == 2
     execute return_sval tcoef18  Aeig2
     endif
     endif
     if kindex18 == 3
     if jindex18 == 3
     execute return_sval tcoef18  Aeig3
     endif
     endif
     if kindex18 == 4
     if jindex18 == 4
     execute return_sval tcoef18  Aeig4
     endif
     endif
     if kindex18 == 5
     if jindex18 == 5
     execute return_sval tcoef18  Aeig5
     endif
     endif
     if kindex18 == 6
     if jindex18 == 6
     execute return_sval tcoef18  Aeig6
     endif
     endif
     if kindex18 == 7
     if jindex18 == 7
     execute return_sval tcoef18  Aeig7
     endif
     endif
     if kindex18 == 8
     if jindex18 == 8
     execute return_sval tcoef18  Aeig8
     endif
     endif
     if kindex18 == 9
     if jindex18 == 9
     execute return_sval tcoef18  Aeig9
     endif
     endif
     if kindex18 == 10
     if jindex18 == 10
     execute return_sval tcoef18  Aeig10
     endif
     endif
     if kindex18 == 11
     if jindex18 == 11
     execute return_sval tcoef18  Aeig11
     endif
     endif
     if kindex18 == 12
     if jindex18 == 12
     execute return_sval tcoef18  Aeig12
     endif
     endif
     if kindex18 == 13
     if jindex18 == 13
     execute return_sval tcoef18  Aeig13
     endif
     endif
     if kindex18 == 14
     if jindex18 == 14
     execute return_sval tcoef18  Aeig14
     endif
     endif
     if kindex18 == 15
     if jindex18 == 15
     execute return_sval tcoef18  Aeig15
     endif
     endif
     if kindex18 == 16
     if jindex18 == 16
     execute return_sval tcoef18  Aeig16
     endif
     endif
     if kindex18 == 17
     if jindex18 == 17
     execute return_sval tcoef18  Aeig17
     endif
     endif
     if kindex18 == 18
     if jindex18 == 18
     execute return_sval tcoef18  Aeig18
     endif
     endif
#
     enddo kindex18
     enddo jindex18
#
     endif
#
#
#    --------------end 18th iteration-----------------
#
#
#    --------------19th iteration-----------------
     if spdim == 19
#
     execute eig_nonsymm Smat19 SVEV19
#
     do jindex19
     do kindex19
#
     tcoef19(kindex19,jindex19)=Smat19(kindex19,jindex19)
#
     if kindex19 == 1
     if jindex19 == 1
     execute return_sval tcoef19  Aeig1
     endif
     endif
     if kindex19 == 2
     if jindex19 == 2
     execute return_sval tcoef19  Aeig2
     endif
     endif
     if kindex19 == 3
     if jindex19 == 3
     execute return_sval tcoef19  Aeig3
     endif
     endif
     if kindex19 == 4
     if jindex19 == 4
     execute return_sval tcoef19  Aeig4
     endif
     endif
     if kindex19 == 5
     if jindex19 == 5
     execute return_sval tcoef19  Aeig5
     endif
     endif
     if kindex19 == 6
     if jindex19 == 6
     execute return_sval tcoef19  Aeig6
     endif
     endif
     if kindex19 == 7
     if jindex19 == 7
     execute return_sval tcoef19  Aeig7
     endif
     endif
     if kindex19 == 8
     if jindex19 == 8
     execute return_sval tcoef19  Aeig8
     endif
     endif
     if kindex19 == 9
     if jindex19 == 9
     execute return_sval tcoef19  Aeig9
     endif
     endif
     if kindex19 == 10
     if jindex19 == 10
     execute return_sval tcoef19  Aeig10
     endif
     endif
     if kindex19 == 11
     if jindex19 == 11
     execute return_sval tcoef19  Aeig11
     endif
     endif
     if kindex19 == 12
     if jindex19 == 12
     execute return_sval tcoef19  Aeig12
     endif
     endif
     if kindex19 == 13
     if jindex19 == 13
     execute return_sval tcoef19  Aeig13
     endif
     endif
     if kindex19 == 14
     if jindex19 == 14
     execute return_sval tcoef19  Aeig14
     endif
     endif
     if kindex19 == 15
     if jindex19 == 15
     execute return_sval tcoef19  Aeig15
     endif
     endif
     if kindex19 == 16
     if jindex19 == 16
     execute return_sval tcoef19  Aeig16
     endif
     endif
     if kindex19 == 17
     if jindex19 == 17
     execute return_sval tcoef19  Aeig17
     endif
     endif
     if kindex19 == 18
     if jindex19 == 18
     execute return_sval tcoef19  Aeig18
     endif
     endif
     if kindex19 == 19
     if jindex19 == 19
     execute return_sval tcoef19  Aeig19
     endif
     endif
#
     enddo kindex19
     enddo jindex19
#
     endif
#
#    --------------end 19th iteration-----------------
#
#    --------------20th iteration-----------------
     if spdim == 20
#
     execute eig_nonsymm Smat20 SVEV20
#
     do jindex20
     do kindex20
#
     tcoef20(kindex20,jindex20)=Smat20(kindex20,jindex20)
#
     if kindex20 == 1
     if jindex20 == 1
     execute return_sval tcoef20  Aeig1
     endif
     endif
     if kindex20 == 2
     if jindex20 == 2
     execute return_sval tcoef20  Aeig2
     endif
     endif
     if kindex20 == 3
     if jindex20 == 3
     execute return_sval tcoef20  Aeig3
     endif
     endif
     if kindex20 == 4
     if jindex20 == 4
     execute return_sval tcoef20  Aeig4
     endif
     endif
     if kindex20 == 5
     if jindex20 == 5
     execute return_sval tcoef20  Aeig5
     endif
     endif
     if kindex20 == 6
     if jindex20 == 6
     execute return_sval tcoef20  Aeig6
     endif
     endif
     if kindex20 == 7
     if jindex20 == 7
     execute return_sval tcoef20  Aeig7
     endif
     endif
     if kindex20 == 8
     if jindex20 == 8
     execute return_sval tcoef20  Aeig8
     endif
     endif
     if kindex20 == 9
     if jindex20 == 9
     execute return_sval tcoef20  Aeig9
     endif
     endif
     if kindex20 == 10
     if jindex20 == 10
     execute return_sval tcoef20  Aeig10
     endif
     endif
     if kindex20 == 11
     if jindex20 == 11
     execute return_sval tcoef20  Aeig11
     endif
     endif
     if kindex20 == 12
     if jindex20 == 12
     execute return_sval tcoef20  Aeig12
     endif
     endif
     if kindex20 == 13
     if jindex20 == 13
     execute return_sval tcoef20  Aeig13
     endif
     endif
     if kindex20 == 14
     if jindex20 == 14
     execute return_sval tcoef20  Aeig14
     endif
     endif
     if kindex20 == 15
     if jindex20 == 15
     execute return_sval tcoef20  Aeig15
     endif
     endif
     if kindex20 == 16
     if jindex20 == 16
     execute return_sval tcoef20  Aeig16
     endif
     endif
     if kindex20 == 17
     if jindex20 == 17
     execute return_sval tcoef20  Aeig17
     endif
     endif
     if kindex20 == 18
     if jindex20 == 18
     execute return_sval tcoef20  Aeig18
     endif
     endif
     if kindex20 == 19
     if jindex20 == 19
     execute return_sval tcoef20  Aeig19
     endif
     endif
     if kindex20 == 20
     if jindex20 == 20
     execute return_sval tcoef20  Aeig20
     endif
     endif
#
     enddo kindex20
     enddo jindex20
#
     execute sip_barrier
#
     endif
#
#
#    --------------end 20th iteration-----------------
#
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
#
     ENDPROC Adiag
#
#
     PROC SELVEC
#
     if spdim==1 
#
    #omega=a1_1
#
     do jindex20
     do kindex20
         if jindex20 == 1
         if kindex20 == 1
            t20(kindex20,jindex20) = sMAT20(kindex20,jindex20)
            execute return_sval t20  omega
         endif
         endif
     enddo kindex20
     enddo jindex20
#
     imax=1.0
#
     endif
#
#    SECOND AND FURTHER ITERATIONS
#
     if spdim >= 2
#
      Aeigvm1=0.0
      Aeigvm2=0.0
      Aeigvm3=0.0
      Aeigvm4=0.0
      Aeigvm5=0.0
      Aeigvm6=0.0
      Aeigvm7=0.0
      Aeigvm8=0.0
      Aeigvm9=0.0
      Aeigvm10=0.0
      Aeigvm11=0.0
      Aeigvm12=0.0
      Aeigvm13=0.0
      Aeigvm14=0.0
      Aeigvm15=0.0
      Aeigvm16=0.0
      Aeigvm17=0.0
      Aeigvm18=0.0
      Aeigvm19=0.0
      Aeigvm20=0.0
#
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--start of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#----------find the lowest eigenvalue not being the previous root------
#
      xmax=1000.0
      ncount=0.0
#
      do spdim20
#
      ncount+=1.0
#
     if ncount > nsp
     exit
     endif
#
     if spdim20 == 1
     aeigtemp=Aeig1
     endif
     if spdim20 == 2
     aeigtemp=Aeig2
     endif
     if spdim20 == 3
     aeigtemp=Aeig3
     endif
     if spdim20 == 4
     aeigtemp=Aeig4
     endif
     if spdim20 == 5
     aeigtemp=Aeig5
     endif
     if spdim20 == 6
     aeigtemp=Aeig6
     endif
     if spdim20 == 7
     aeigtemp=Aeig7
     endif
     if spdim20 == 8
     aeigtemp=Aeig8
     endif
     if spdim20 == 9
     aeigtemp=Aeig9
     endif
     if spdim20 == 10
     aeigtemp=Aeig10
     endif
     if spdim20 == 11
     aeigtemp=Aeig11
     endif
     if spdim20 == 12
     aeigtemp=Aeig12
     endif
     if spdim20 == 13
     aeigtemp=Aeig13
     endif
     if spdim20 == 14
     aeigtemp=Aeig14
     endif
     if spdim20 == 15
     aeigtemp=Aeig15
     endif
     if spdim20 == 16
     aeigtemp=Aeig16
     endif
     if spdim20 == 17
     aeigtemp=Aeig17
     endif
     if spdim20 == 18
     aeigtemp=Aeig18
     endif
     if spdim20 == 19
     aeigtemp=Aeig19
     endif
     if spdim20 == 20
     aeigtemp=Aeig20
     endif
#
      aeigtemp2=aeigtemp
      if aeigtemp2 < 0.0
      aeigtemp2*=-1.0
      endif
      if aeigtemp2 < eomthresh
      aeigtemp=1111.0
      endif
#
      aeigtemp2=aeigtemp
#
      do jindex12
#
     if jindex12 == 1
     xtemp=root1-aeigtemp
     if xtemp<0.0
     xtemp*=-1.0
     endif
     if xtemp < eomthresh
     aeigtemp2=1001.0
     endif
     endif
#
     if jindex12 == 2
     xtemp=root2-aeigtemp
     if xtemp<0.0
     xtemp*=-1.0
     endif
     if xtemp < eomthresh
     aeigtemp2=1001.0
     endif
     endif
#
     if jindex12 == 3
     xtemp=root3-aeigtemp
     if xtemp<0.0
     xtemp*=-1.0
     endif
     if xtemp < eomthresh
     aeigtemp2=1001.0
     endif
     endif
#
     if jindex12 == 4
     xtemp=root4-aeigtemp
     if xtemp<0.0
     xtemp*=-1.0
     endif
     if xtemp < eomthresh
     aeigtemp2=1001.0
     endif
     endif
#
     if jindex12 == 5
     xtemp=root5-aeigtemp
     if xtemp<0.0
     xtemp*=-1.0
     endif
     if xtemp < eomthresh
     aeigtemp2=1001.0
     endif
     endif
#
     if jindex12 == 6
     xtemp=root6-aeigtemp
     if xtemp<0.0
     xtemp*=-1.0
     endif
     if xtemp < eomthresh
     aeigtemp2=1001.0
     endif
     endif
#
     if jindex12 == 7
     xtemp=root7-aeigtemp
     if xtemp<0.0
     xtemp*=-1.0
     endif
     if xtemp < eomthresh
     aeigtemp2=1001.0
     endif
     endif
#
     if jindex12 == 8
     xtemp=root8-aeigtemp
     if xtemp<0.0
     xtemp*=-1.0
     endif
     if xtemp < eomthresh
     aeigtemp2=1001.0
     endif
     endif
#
     if jindex12 == 9
     xtemp=root9-aeigtemp
     if xtemp<0.0
     xtemp*=-1.0
     endif
     if xtemp < eomthresh
     aeigtemp2=1001.0
     endif
     endif
#
     if jindex12 == 10
     xtemp=root10-aeigtemp
     if xtemp<0.0
     xtemp*=-1.0
     endif
     if xtemp < eomthresh
     aeigtemp2=1001.0
     endif
     endif
#
     if jindex12 == 11
     xtemp=root11-aeigtemp
     if xtemp<0.0
     xtemp*=-1.0
     endif
     if xtemp < eomthresh
     aeigtemp2=1001.0
     endif
     endif
#
     if jindex12 == 12
     xtemp=root12-aeigtemp
     if xtemp<0.0
     xtemp*=-1.0
     endif
     if xtemp < eomthresh
     aeigtemp2=1001.0
     endif
     endif
#
#
      enddo jindex12
#
      aeigtemp=aeigtemp2
#
     if aeigtemp < xmax
     xmax=aeigtemp
     imax=ncount
     endif
#
      enddo spdim20
#
#
#----------get the chosen eigenvector------------
      ncount=0.0
#
      do spdim20
#
      ncount+=1.0
#
      if imax == ncount
#
      if spdim20 == 1
      omega=Aeig1
      endif
#
      if spdim20 == 2
      omega=Aeig2
      endif
#
      if spdim20 == 3
      omega=Aeig3
      endif
#
      if spdim20 == 4
      omega=Aeig4
      endif
#
      if spdim20 == 5
      omega=Aeig5
      endif
#
      if spdim20 == 6
      omega=Aeig6
      endif
#
      if spdim20 == 7
      omega=Aeig7
      endif
#
      if spdim20 == 8
      omega=Aeig8
      endif
#
      if spdim20 == 9
      omega=Aeig9
      endif
#
      if spdim20 == 10
      omega=Aeig10
      endif
#
      if spdim20 == 11
      omega=Aeig11
      endif
#
      if spdim20 == 12
      omega=Aeig12
      endif
#
      if spdim20 == 13
      omega=Aeig13
      endif
#
      if spdim20 == 14
      omega=Aeig14
      endif
#
      if spdim20 == 15
      omega=Aeig15
      endif
#
      if spdim20 == 16
      omega=Aeig16
      endif
#
      if spdim20 == 17
      omega=Aeig17
      endif
#
      if spdim20 == 18
      omega=Aeig18
      endif
#
      if spdim20 == 19
      omega=Aeig19
      endif
#
      if spdim20 == 20
      omega=Aeig20
      endif
#
#
#    --------------2th iteration-----------------
     if spdim == 2
#
     allocate Lvev2(*,*)
#
     do jindex2
     do kindex2
     Lvev2(kindex2,jindex2)=Svev2(kindex2,jindex2)
     enddo kindex2
     enddo jindex2
#
     do jindex2
     do kindex2
#
     if jindex2 == spdim20
#
     if kindex2 == 1
     execute return_sval Lvev2  Aeigvm1
     endif
     if kindex2 == 2
     execute return_sval Lvev2  Aeigvm2
     endif
#
     endif
#
     enddo kindex2
     enddo jindex2
#
     deallocate Lvev2(*,*)
#
     endif
#
#
#    --------------end 2th iteration-----------------
#
#
#    --------------3th iteration-----------------
     if spdim == 3
#
     allocate Lvev3(*,*)
#
     do jindex3
     do kindex3
     Lvev3(kindex3,jindex3)=Svev3(kindex3,jindex3)
     enddo kindex3
     enddo jindex3
#
     do jindex3
     do kindex3
#
     if jindex3 == spdim20
#
     if kindex3 == 1
     execute return_sval Lvev3  Aeigvm1
     endif
     if kindex3 == 2
     execute return_sval Lvev3  Aeigvm2
     endif
     if kindex3 == 3
     execute return_sval Lvev3  Aeigvm3
     endif
#
     endif
#
     enddo kindex3
     enddo jindex3
#
     deallocate Lvev3(*,*)
#
     endif
#
#
#    --------------end 3th iteration-----------------
#
#
#    --------------4th iteration-----------------
     if spdim == 4
#
     allocate Lvev4(*,*)
#
     do jindex4
     do kindex4
     Lvev4(kindex4,jindex4)=Svev4(kindex4,jindex4)
     enddo kindex4
     enddo jindex4
#
     do jindex4
     do kindex4
#
     if jindex4 == spdim20
#
     if kindex4 == 1
     execute return_sval Lvev4  Aeigvm1
     endif
     if kindex4 == 2
     execute return_sval Lvev4  Aeigvm2
     endif
     if kindex4 == 3
     execute return_sval Lvev4  Aeigvm3
     endif
     if kindex4 == 4
     execute return_sval Lvev4  Aeigvm4
     endif
#
     endif
#
     enddo kindex4
     enddo jindex4
#
     deallocate Lvev4(*,*)
#
     endif
#
#
#    --------------end 4th iteration-----------------
#
#
#    --------------5th iteration-----------------
     if spdim == 5
#
     allocate Lvev5(*,*)
#
     do jindex5
     do kindex5
     Lvev5(kindex5,jindex5)=Svev5(kindex5,jindex5)
     enddo kindex5
     enddo jindex5
#
     do jindex5
     do kindex5
#
     if jindex5 == spdim20
#
     if kindex5 == 1
     execute return_sval Lvev5  Aeigvm1
     endif
     if kindex5 == 2
     execute return_sval Lvev5  Aeigvm2
     endif
     if kindex5 == 3
     execute return_sval Lvev5  Aeigvm3
     endif
     if kindex5 == 4
     execute return_sval Lvev5  Aeigvm4
     endif
     if kindex5 == 5
     execute return_sval Lvev5  Aeigvm5
     endif
#
     endif
#
     enddo kindex5
     enddo jindex5
#
     deallocate Lvev5(*,*)
#
     endif
#
#
#    --------------end 5th iteration-----------------
#
#
#    --------------6th iteration-----------------
     if spdim == 6
#
     allocate Lvev6(*,*)
#
     do jindex6
     do kindex6
     Lvev6(kindex6,jindex6)=Svev6(kindex6,jindex6)
     enddo kindex6
     enddo jindex6
#
     do jindex6
     do kindex6
#
     if jindex6 == spdim20
#
     if kindex6 == 1
     execute return_sval Lvev6  Aeigvm1
     endif
     if kindex6 == 2
     execute return_sval Lvev6  Aeigvm2
     endif
     if kindex6 == 3
     execute return_sval Lvev6  Aeigvm3
     endif
     if kindex6 == 4
     execute return_sval Lvev6  Aeigvm4
     endif
     if kindex6 == 5
     execute return_sval Lvev6  Aeigvm5
     endif
     if kindex6 == 6
     execute return_sval Lvev6  Aeigvm6
     endif
#
     endif
#
     enddo kindex6
     enddo jindex6
#
     deallocate Lvev6(*,*)
#
     endif
#
#
#    --------------end 6th iteration-----------------
#
#
#    --------------7th iteration-----------------
     if spdim == 7
#
     allocate Lvev7(*,*)
#
     do jindex7
     do kindex7
     Lvev7(kindex7,jindex7)=Svev7(kindex7,jindex7)
     enddo kindex7
     enddo jindex7
#
     do jindex7
     do kindex7
#
     if jindex7 == spdim20
#
     if kindex7 == 1
     execute return_sval Lvev7  Aeigvm1
     endif
     if kindex7 == 2
     execute return_sval Lvev7  Aeigvm2
     endif
     if kindex7 == 3
     execute return_sval Lvev7  Aeigvm3
     endif
     if kindex7 == 4
     execute return_sval Lvev7  Aeigvm4
     endif
     if kindex7 == 5
     execute return_sval Lvev7  Aeigvm5
     endif
     if kindex7 == 6
     execute return_sval Lvev7  Aeigvm6
     endif
     if kindex7 == 7
     execute return_sval Lvev7  Aeigvm7
     endif
#
     endif
#
     enddo kindex7
     enddo jindex7
#
     deallocate Lvev7(*,*)
#
     endif
#
#
#    --------------end 7th iteration-----------------
#
#
#    --------------8th iteration-----------------
     if spdim == 8
#
     allocate Lvev8(*,*)
#
     do jindex8
     do kindex8
     Lvev8(kindex8,jindex8)=Svev8(kindex8,jindex8)
     enddo kindex8
     enddo jindex8
#
     do jindex8
     do kindex8
#
     if jindex8 == spdim20
#
     if kindex8 == 1
     execute return_sval Lvev8  Aeigvm1
     endif
     if kindex8 == 2
     execute return_sval Lvev8  Aeigvm2
     endif
     if kindex8 == 3
     execute return_sval Lvev8  Aeigvm3
     endif
     if kindex8 == 4
     execute return_sval Lvev8  Aeigvm4
     endif
     if kindex8 == 5
     execute return_sval Lvev8  Aeigvm5
     endif
     if kindex8 == 6
     execute return_sval Lvev8  Aeigvm6
     endif
     if kindex8 == 7
     execute return_sval Lvev8  Aeigvm7
     endif
     if kindex8 == 8
     execute return_sval Lvev8  Aeigvm8
     endif
#
     endif
#
     enddo kindex8
     enddo jindex8
#
     deallocate Lvev8(*,*)
#
     endif
#
#
#    --------------end 8th iteration-----------------
#
#
#    --------------9th iteration-----------------
     if spdim == 9
#
     allocate Lvev9(*,*)
#
     do jindex9
     do kindex9
     Lvev9(kindex9,jindex9)=Svev9(kindex9,jindex9)
     enddo kindex9
     enddo jindex9
#
     do jindex9
     do kindex9
#
     if jindex9 == spdim20
#
     if kindex9 == 1
     execute return_sval Lvev9  Aeigvm1
     endif
     if kindex9 == 2
     execute return_sval Lvev9  Aeigvm2
     endif
     if kindex9 == 3
     execute return_sval Lvev9  Aeigvm3
     endif
     if kindex9 == 4
     execute return_sval Lvev9  Aeigvm4
     endif
     if kindex9 == 5
     execute return_sval Lvev9  Aeigvm5
     endif
     if kindex9 == 6
     execute return_sval Lvev9  Aeigvm6
     endif
     if kindex9 == 7
     execute return_sval Lvev9  Aeigvm7
     endif
     if kindex9 == 8
     execute return_sval Lvev9  Aeigvm8
     endif
     if kindex9 == 9
     execute return_sval Lvev9  Aeigvm9
     endif
#
     endif
#
     enddo kindex9
     enddo jindex9
#
     deallocate Lvev9(*,*)
#
     endif
#
#
#    --------------end 9th iteration-----------------
#
#
#    --------------10th iteration-----------------
     if spdim == 10
#
     allocate Lvev10(*,*)
#
     do jindex10
     do kindex10
     Lvev10(kindex10,jindex10)=Svev10(kindex10,jindex10)
     enddo kindex10
     enddo jindex10
#
     do jindex10
     do kindex10
#
     if jindex10 == spdim20
#
     if kindex10 == 1
     execute return_sval Lvev10  Aeigvm1
     endif
     if kindex10 == 2
     execute return_sval Lvev10  Aeigvm2
     endif
     if kindex10 == 3
     execute return_sval Lvev10  Aeigvm3
     endif
     if kindex10 == 4
     execute return_sval Lvev10  Aeigvm4
     endif
     if kindex10 == 5
     execute return_sval Lvev10  Aeigvm5
     endif
     if kindex10 == 6
     execute return_sval Lvev10  Aeigvm6
     endif
     if kindex10 == 7
     execute return_sval Lvev10  Aeigvm7
     endif
     if kindex10 == 8
     execute return_sval Lvev10  Aeigvm8
     endif
     if kindex10 == 9
     execute return_sval Lvev10  Aeigvm9
     endif
     if kindex10 == 10
     execute return_sval Lvev10  Aeigvm10
     endif
#
     endif
#
     enddo kindex10
     enddo jindex10
#
     deallocate Lvev10(*,*)
#
     endif
#
#
#    --------------end 10th iteration-----------------
#
#
#    --------------11th iteration-----------------
     if spdim == 11
#
     allocate Lvev11(*,*)
#
     do jindex11
     do kindex11
     Lvev11(kindex11,jindex11)=Svev11(kindex11,jindex11)
     enddo kindex11
     enddo jindex11
#
     do jindex11
     do kindex11
#
     if jindex11 == spdim20
#
     if kindex11 == 1
     execute return_sval Lvev11  Aeigvm1
     endif
     if kindex11 == 2
     execute return_sval Lvev11  Aeigvm2
     endif
     if kindex11 == 3
     execute return_sval Lvev11  Aeigvm3
     endif
     if kindex11 == 4
     execute return_sval Lvev11  Aeigvm4
     endif
     if kindex11 == 5
     execute return_sval Lvev11  Aeigvm5
     endif
     if kindex11 == 6
     execute return_sval Lvev11  Aeigvm6
     endif
     if kindex11 == 7
     execute return_sval Lvev11  Aeigvm7
     endif
     if kindex11 == 8
     execute return_sval Lvev11  Aeigvm8
     endif
     if kindex11 == 9
     execute return_sval Lvev11  Aeigvm9
     endif
     if kindex11 == 10
     execute return_sval Lvev11  Aeigvm10
     endif
     if kindex11 == 11
     execute return_sval Lvev11  Aeigvm11
     endif
#
     endif
#
     enddo kindex11
     enddo jindex11
#
     deallocate Lvev11(*,*)
#
     endif
#
#
#    --------------end 11th iteration-----------------
#
#
#    --------------12th iteration-----------------
     if spdim == 12
#
     allocate Lvev12(*,*)
#
     do jindex12
     do kindex12
     Lvev12(kindex12,jindex12)=Svev12(kindex12,jindex12)
     enddo kindex12
     enddo jindex12
#
     do jindex12
     do kindex12
#
     if jindex12 == spdim20
#
     if kindex12 == 1
     execute return_sval Lvev12  Aeigvm1
     endif
     if kindex12 == 2
     execute return_sval Lvev12  Aeigvm2
     endif
     if kindex12 == 3
     execute return_sval Lvev12  Aeigvm3
     endif
     if kindex12 == 4
     execute return_sval Lvev12  Aeigvm4
     endif
     if kindex12 == 5
     execute return_sval Lvev12  Aeigvm5
     endif
     if kindex12 == 6
     execute return_sval Lvev12  Aeigvm6
     endif
     if kindex12 == 7
     execute return_sval Lvev12  Aeigvm7
     endif
     if kindex12 == 8
     execute return_sval Lvev12  Aeigvm8
     endif
     if kindex12 == 9
     execute return_sval Lvev12  Aeigvm9
     endif
     if kindex12 == 10
     execute return_sval Lvev12  Aeigvm10
     endif
     if kindex12 == 11
     execute return_sval Lvev12  Aeigvm11
     endif
     if kindex12 == 12
     execute return_sval Lvev12  Aeigvm12
     endif
#
     endif
#
     enddo kindex12
     enddo jindex12
#
     deallocate Lvev12(*,*)
#
     endif
#
#
#    --------------end 12th iteration-----------------
#
#
#    --------------13th iteration-----------------
     if spdim == 13
#
     allocate Lvev13(*,*)
#
     do jindex13
     do kindex13
     Lvev13(kindex13,jindex13)=Svev13(kindex13,jindex13)
     enddo kindex13
     enddo jindex13
#
     do jindex13
     do kindex13
#
     if jindex13 == spdim20
#
     if kindex13 == 1
     execute return_sval Lvev13  Aeigvm1
     endif
     if kindex13 == 2
     execute return_sval Lvev13  Aeigvm2
     endif
     if kindex13 == 3
     execute return_sval Lvev13  Aeigvm3
     endif
     if kindex13 == 4
     execute return_sval Lvev13  Aeigvm4
     endif
     if kindex13 == 5
     execute return_sval Lvev13  Aeigvm5
     endif
     if kindex13 == 6
     execute return_sval Lvev13  Aeigvm6
     endif
     if kindex13 == 7
     execute return_sval Lvev13  Aeigvm7
     endif
     if kindex13 == 8
     execute return_sval Lvev13  Aeigvm8
     endif
     if kindex13 == 9
     execute return_sval Lvev13  Aeigvm9
     endif
     if kindex13 == 10
     execute return_sval Lvev13  Aeigvm10
     endif
     if kindex13 == 11
     execute return_sval Lvev13  Aeigvm11
     endif
     if kindex13 == 12
     execute return_sval Lvev13  Aeigvm12
     endif
     if kindex13 == 13
     execute return_sval Lvev13  Aeigvm13
     endif
#
     endif
#
     enddo kindex13
     enddo jindex13
#
     deallocate Lvev13(*,*)
#
     endif
#
#
#    --------------end 13th iteration-----------------
#
#
#    --------------14th iteration-----------------
     if spdim == 14
#
     allocate Lvev14(*,*)
#
     do jindex14
     do kindex14
     Lvev14(kindex14,jindex14)=Svev14(kindex14,jindex14)
     enddo kindex14
     enddo jindex14
#
     do jindex14
     do kindex14
#
     if jindex14 == spdim20
#
     if kindex14 == 1
     execute return_sval Lvev14  Aeigvm1
     endif
     if kindex14 == 2
     execute return_sval Lvev14  Aeigvm2
     endif
     if kindex14 == 3
     execute return_sval Lvev14  Aeigvm3
     endif
     if kindex14 == 4
     execute return_sval Lvev14  Aeigvm4
     endif
     if kindex14 == 5
     execute return_sval Lvev14  Aeigvm5
     endif
     if kindex14 == 6
     execute return_sval Lvev14  Aeigvm6
     endif
     if kindex14 == 7
     execute return_sval Lvev14  Aeigvm7
     endif
     if kindex14 == 8
     execute return_sval Lvev14  Aeigvm8
     endif
     if kindex14 == 9
     execute return_sval Lvev14  Aeigvm9
     endif
     if kindex14 == 10
     execute return_sval Lvev14  Aeigvm10
     endif
     if kindex14 == 11
     execute return_sval Lvev14  Aeigvm11
     endif
     if kindex14 == 12
     execute return_sval Lvev14  Aeigvm12
     endif
     if kindex14 == 13
     execute return_sval Lvev14  Aeigvm13
     endif
     if kindex14 == 14
     execute return_sval Lvev14  Aeigvm14
     endif
#
     endif
#
     enddo kindex14
     enddo jindex14
#
     deallocate Lvev14(*,*)
#
     endif
#
#
#    --------------end 14th iteration-----------------
#
#
#    --------------15th iteration-----------------
     if spdim == 15
#
     allocate Lvev15(*,*)
#
     do jindex15
     do kindex15
     Lvev15(kindex15,jindex15)=Svev15(kindex15,jindex15)
     enddo kindex15
     enddo jindex15
#
     do jindex15
     do kindex15
#
     if jindex15 == spdim20
#
     if kindex15 == 1
     execute return_sval Lvev15  Aeigvm1
     endif
     if kindex15 == 2
     execute return_sval Lvev15  Aeigvm2
     endif
     if kindex15 == 3
     execute return_sval Lvev15  Aeigvm3
     endif
     if kindex15 == 4
     execute return_sval Lvev15  Aeigvm4
     endif
     if kindex15 == 5
     execute return_sval Lvev15  Aeigvm5
     endif
     if kindex15 == 6
     execute return_sval Lvev15  Aeigvm6
     endif
     if kindex15 == 7
     execute return_sval Lvev15  Aeigvm7
     endif
     if kindex15 == 8
     execute return_sval Lvev15  Aeigvm8
     endif
     if kindex15 == 9
     execute return_sval Lvev15  Aeigvm9
     endif
     if kindex15 == 10
     execute return_sval Lvev15  Aeigvm10
     endif
     if kindex15 == 11
     execute return_sval Lvev15  Aeigvm11
     endif
     if kindex15 == 12
     execute return_sval Lvev15  Aeigvm12
     endif
     if kindex15 == 13
     execute return_sval Lvev15  Aeigvm13
     endif
     if kindex15 == 14
     execute return_sval Lvev15  Aeigvm14
     endif
     if kindex15 == 15
     execute return_sval Lvev15  Aeigvm15
     endif
#
     endif
#
     enddo kindex15
     enddo jindex15
#
     deallocate Lvev15(*,*)
#
     endif
#
#
#    --------------end 15th iteration-----------------
#
#
#    --------------16th iteration-----------------
     if spdim == 16
#
     allocate Lvev16(*,*)
#
     do jindex16
     do kindex16
     Lvev16(kindex16,jindex16)=Svev16(kindex16,jindex16)
     enddo kindex16
     enddo jindex16
#
     do jindex16
     do kindex16
#
     if jindex16 == spdim20
#
     if kindex16 == 1
     execute return_sval Lvev16  Aeigvm1
     endif
     if kindex16 == 2
     execute return_sval Lvev16  Aeigvm2
     endif
     if kindex16 == 3
     execute return_sval Lvev16  Aeigvm3
     endif
     if kindex16 == 4
     execute return_sval Lvev16  Aeigvm4
     endif
     if kindex16 == 5
     execute return_sval Lvev16  Aeigvm5
     endif
     if kindex16 == 6
     execute return_sval Lvev16  Aeigvm6
     endif
     if kindex16 == 7
     execute return_sval Lvev16  Aeigvm7
     endif
     if kindex16 == 8
     execute return_sval Lvev16  Aeigvm8
     endif
     if kindex16 == 9
     execute return_sval Lvev16  Aeigvm9
     endif
     if kindex16 == 10
     execute return_sval Lvev16  Aeigvm10
     endif
     if kindex16 == 11
     execute return_sval Lvev16  Aeigvm11
     endif
     if kindex16 == 12
     execute return_sval Lvev16  Aeigvm12
     endif
     if kindex16 == 13
     execute return_sval Lvev16  Aeigvm13
     endif
     if kindex16 == 14
     execute return_sval Lvev16  Aeigvm14
     endif
     if kindex16 == 15
     execute return_sval Lvev16  Aeigvm15
     endif
     if kindex16 == 16
     execute return_sval Lvev16  Aeigvm16
     endif
#
     endif
#
     enddo kindex16
     enddo jindex16
#
     deallocate Lvev16(*,*)
#
     endif
#
#
#    --------------end 16th iteration-----------------
#
#
#    --------------17th iteration-----------------
     if spdim == 17
#
     allocate Lvev17(*,*)
#
     do jindex17
     do kindex17
     Lvev17(kindex17,jindex17)=Svev17(kindex17,jindex17)
     enddo kindex17
     enddo jindex17
#
     do jindex17
     do kindex17
#
     if jindex17 == spdim20
#
     if kindex17 == 1
     execute return_sval Lvev17  Aeigvm1
     endif
     if kindex17 == 2
     execute return_sval Lvev17  Aeigvm2
     endif
     if kindex17 == 3
     execute return_sval Lvev17  Aeigvm3
     endif
     if kindex17 == 4
     execute return_sval Lvev17  Aeigvm4
     endif
     if kindex17 == 5
     execute return_sval Lvev17  Aeigvm5
     endif
     if kindex17 == 6
     execute return_sval Lvev17  Aeigvm6
     endif
     if kindex17 == 7
     execute return_sval Lvev17  Aeigvm7
     endif
     if kindex17 == 8
     execute return_sval Lvev17  Aeigvm8
     endif
     if kindex17 == 9
     execute return_sval Lvev17  Aeigvm9
     endif
     if kindex17 == 10
     execute return_sval Lvev17  Aeigvm10
     endif
     if kindex17 == 11
     execute return_sval Lvev17  Aeigvm11
     endif
     if kindex17 == 12
     execute return_sval Lvev17  Aeigvm12
     endif
     if kindex17 == 13
     execute return_sval Lvev17  Aeigvm13
     endif
     if kindex17 == 14
     execute return_sval Lvev17  Aeigvm14
     endif
     if kindex17 == 15
     execute return_sval Lvev17  Aeigvm15
     endif
     if kindex17 == 16
     execute return_sval Lvev17  Aeigvm16
     endif
     if kindex17 == 17
     execute return_sval Lvev17  Aeigvm17
     endif
#
     endif
#
     enddo kindex17
     enddo jindex17
#
     deallocate Lvev17(*,*)
#
     endif
#
#
#    --------------end 17th iteration-----------------
#
#
#    --------------18th iteration-----------------
     if spdim == 18
#
     allocate Lvev18(*,*)
#
     do jindex18
     do kindex18
     Lvev18(kindex18,jindex18)=Svev18(kindex18,jindex18)
     enddo kindex18
     enddo jindex18
#
     do jindex18
     do kindex18
#
     if jindex18 == spdim20
#
     if kindex18 == 1
     execute return_sval Lvev18  Aeigvm1
     endif
     if kindex18 == 2
     execute return_sval Lvev18  Aeigvm2
     endif
     if kindex18 == 3
     execute return_sval Lvev18  Aeigvm3
     endif
     if kindex18 == 4
     execute return_sval Lvev18  Aeigvm4
     endif
     if kindex18 == 5
     execute return_sval Lvev18  Aeigvm5
     endif
     if kindex18 == 6
     execute return_sval Lvev18  Aeigvm6
     endif
     if kindex18 == 7
     execute return_sval Lvev18  Aeigvm7
     endif
     if kindex18 == 8
     execute return_sval Lvev18  Aeigvm8
     endif
     if kindex18 == 9
     execute return_sval Lvev18  Aeigvm9
     endif
     if kindex18 == 10
     execute return_sval Lvev18  Aeigvm10
     endif
     if kindex18 == 11
     execute return_sval Lvev18  Aeigvm11
     endif
     if kindex18 == 12
     execute return_sval Lvev18  Aeigvm12
     endif
     if kindex18 == 13
     execute return_sval Lvev18  Aeigvm13
     endif
     if kindex18 == 14
     execute return_sval Lvev18  Aeigvm14
     endif
     if kindex18 == 15
     execute return_sval Lvev18  Aeigvm15
     endif
     if kindex18 == 16
     execute return_sval Lvev18  Aeigvm16
     endif
     if kindex18 == 17
     execute return_sval Lvev18  Aeigvm17
     endif
     if kindex18 == 18
     execute return_sval Lvev18  Aeigvm18
     endif
#
     endif
#
     enddo kindex18
     enddo jindex18
#
     deallocate Lvev18(*,*)
#
     endif
#
#
#    --------------end 18th iteration-----------------
#
#
#    --------------19th iteration-----------------
     if spdim == 19
#
     allocate Lvev19(*,*)
#
     do jindex19
     do kindex19
     Lvev19(kindex19,jindex19)=Svev19(kindex19,jindex19)
     enddo kindex19
     enddo jindex19
#
     do jindex19
     do kindex19
#
     if jindex19 == spdim20
#
     if kindex19 == 1
     execute return_sval Lvev19  Aeigvm1
     endif
     if kindex19 == 2
     execute return_sval Lvev19  Aeigvm2
     endif
     if kindex19 == 3
     execute return_sval Lvev19  Aeigvm3
     endif
     if kindex19 == 4
     execute return_sval Lvev19  Aeigvm4
     endif
     if kindex19 == 5
     execute return_sval Lvev19  Aeigvm5
     endif
     if kindex19 == 6
     execute return_sval Lvev19  Aeigvm6
     endif
     if kindex19 == 7
     execute return_sval Lvev19  Aeigvm7
     endif
     if kindex19 == 8
     execute return_sval Lvev19  Aeigvm8
     endif
     if kindex19 == 9
     execute return_sval Lvev19  Aeigvm9
     endif
     if kindex19 == 10
     execute return_sval Lvev19  Aeigvm10
     endif
     if kindex19 == 11
     execute return_sval Lvev19  Aeigvm11
     endif
     if kindex19 == 12
     execute return_sval Lvev19  Aeigvm12
     endif
     if kindex19 == 13
     execute return_sval Lvev19  Aeigvm13
     endif
     if kindex19 == 14
     execute return_sval Lvev19  Aeigvm14
     endif
     if kindex19 == 15
     execute return_sval Lvev19  Aeigvm15
     endif
     if kindex19 == 16
     execute return_sval Lvev19  Aeigvm16
     endif
     if kindex19 == 17
     execute return_sval Lvev19  Aeigvm17
     endif
     if kindex19 == 18
     execute return_sval Lvev19  Aeigvm18
     endif
     if kindex19 == 19
     execute return_sval Lvev19  Aeigvm19
     endif
#
     endif
#
     enddo kindex19
     enddo jindex19
#
     deallocate Lvev19(*,*)
#
     endif
#
#
#    --------------end 19th iteration-----------------
#
#
#    --------------20th iteration-----------------
     if spdim == 20
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     do jindex20
     do kindex20
#
     if jindex20 == spdim20
#
     if kindex20 == 1
     execute return_sval Lvev20  Aeigvm1
     endif
     if kindex20 == 2
     execute return_sval Lvev20  Aeigvm2
     endif
     if kindex20 == 3
     execute return_sval Lvev20  Aeigvm3
     endif
     if kindex20 == 4
     execute return_sval Lvev20  Aeigvm4
     endif
     if kindex20 == 5
     execute return_sval Lvev20  Aeigvm5
     endif
     if kindex20 == 6
     execute return_sval Lvev20  Aeigvm6
     endif
     if kindex20 == 7
     execute return_sval Lvev20  Aeigvm7
     endif
     if kindex20 == 8
     execute return_sval Lvev20  Aeigvm8
     endif
     if kindex20 == 9
     execute return_sval Lvev20  Aeigvm9
     endif
     if kindex20 == 10
     execute return_sval Lvev20  Aeigvm10
     endif
     if kindex20 == 11
     execute return_sval Lvev20  Aeigvm11
     endif
     if kindex20 == 12
     execute return_sval Lvev20  Aeigvm12
     endif
     if kindex20 == 13
     execute return_sval Lvev20  Aeigvm13
     endif
     if kindex20 == 14
     execute return_sval Lvev20  Aeigvm14
     endif
     if kindex20 == 15
     execute return_sval Lvev20  Aeigvm15
     endif
     if kindex20 == 16
     execute return_sval Lvev20  Aeigvm16
     endif
     if kindex20 == 17
     execute return_sval Lvev20  Aeigvm17
     endif
     if kindex20 == 18
     execute return_sval Lvev20  Aeigvm18
     endif
     if kindex20 == 19
     execute return_sval Lvev20  Aeigvm19
     endif
     if kindex20 == 20
     execute return_sval Lvev20  Aeigvm20
     endif
#
     endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
     endif
#
#
#    --------------end 20th iteration-----------------
#
#
#
      endif
#
      enddo spdim20
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
# ----------- normalize chosen eigenvector
#
#
       sqr=0.0
#
     etemp=Aeigvm1*Aeigvm1
     sqr+=etemp
     etemp=Aeigvm2*Aeigvm2
     sqr+=etemp
     etemp=Aeigvm3*Aeigvm3
     sqr+=etemp
     etemp=Aeigvm4*Aeigvm4
     sqr+=etemp
     etemp=Aeigvm5*Aeigvm5
     sqr+=etemp
     etemp=Aeigvm6*Aeigvm6
     sqr+=etemp
     etemp=Aeigvm7*Aeigvm7
     sqr+=etemp
     etemp=Aeigvm8*Aeigvm8
     sqr+=etemp
     etemp=Aeigvm9*Aeigvm9
     sqr+=etemp
     etemp=Aeigvm10*Aeigvm10
     sqr+=etemp
     etemp=Aeigvm11*Aeigvm11
     sqr+=etemp
     etemp=Aeigvm12*Aeigvm12
     sqr+=etemp
     etemp=Aeigvm13*Aeigvm13
     sqr+=etemp
     etemp=Aeigvm14*Aeigvm14
     sqr+=etemp
     etemp=Aeigvm15*Aeigvm15
     sqr+=etemp
     etemp=Aeigvm16*Aeigvm16
     sqr+=etemp
     etemp=Aeigvm17*Aeigvm17
     sqr+=etemp
     etemp=Aeigvm18*Aeigvm18
     sqr+=etemp
     etemp=Aeigvm19*Aeigvm19
     sqr+=etemp
     etemp=Aeigvm20*Aeigvm20
     sqr+=etemp
#
     exponent=0.5
      execute square_root sqr exponent
      sqr2=1.0/sqr
#
     Aeigvm1*=sqr2
     Aeigvm2*=sqr2
     Aeigvm3*=sqr2
     Aeigvm4*=sqr2
     Aeigvm5*=sqr2
     Aeigvm6*=sqr2
     Aeigvm7*=sqr2
     Aeigvm8*=sqr2
     Aeigvm9*=sqr2
     Aeigvm10*=sqr2
     Aeigvm11*=sqr2
     Aeigvm12*=sqr2
     Aeigvm13*=sqr2
     Aeigvm14*=sqr2
     Aeigvm15*=sqr2
     Aeigvm16*=sqr2
     Aeigvm17*=sqr2
     Aeigvm18*=sqr2
     Aeigvm19*=sqr2
     Aeigvm20*=sqr2
#
#     execute print_scalar Aeig1
#     execute print_scalar Aeig2
#     execute print_scalar Aeig3
#     execute print_scalar Aeig4
#     execute print_scalar Aeig5
#     execute print_scalar Aeig6
#     execute print_scalar Aeig7
#     execute print_scalar Aeig8
#     execute print_scalar Aeig9
#     execute print_scalar Aeig10
#     execute print_scalar Aeig11
#     execute print_scalar Aeig12
#     execute print_scalar Aeig13
#     execute print_scalar Aeig14
#     execute print_scalar Aeig15
#     execute print_scalar Aeig16
#     execute print_scalar Aeig17
#     execute print_scalar Aeig18
#     execute print_scalar Aeig19
#     execute print_scalar Aeig20
#
     endif
#
     ENDPROC SELVEC
#
     PROC RESID
#    ---------- 
#
     omegam=omega
     omegam*=-1.0
#
# -----------------------------------------------------------------
#
      PARDO a, i
#
           get VCACT1A(a,i)
           get VCHACT1A(a,i)
           get VCONV1A(a,i)
#
           tai(a,i)=VCACT1A(a,i)
           tai(a,i)*=omega
           tai(a,i)*=-1.0
           tai(a,i)+=VCHACT1A(a,i)
#
           t1ai(a,i)=VCONV1A(a,i)
           t1ai(a,i)*=-1.0
           t11ai(a,i)=omega
           t1ai(a,i)+=t11ai(a,i)
           execute apply_den2 tai t1ai
#
            DO j21
               if j21 > spdim
                  taiS(a,i,j21)     = tai(a,i)
                  PUT VC1A(a,i,j21) = taiS(a,i,j21)
                  exit
               ENDIF
            ENDDO j21
#
      ENDPARDO a, i
#
# -----------------------------------------------------------------
#
      execute sip_barrier
#
     ENDPROC RESID
#    ------------- 
#
     PROC VECLINCOMB_1
#    ----------------- 
#
# -----------------------------------------------------------------
      DO k20
         if k20 == 1
            Aeig(k20,k20) = Aeigvm1
         endif
         if k20 == 2
            Aeig(k20,k20) = Aeigvm2
         endif
         if k20 == 3
            Aeig(k20,k20) = Aeigvm3
         endif
         if k20 == 4
            Aeig(k20,k20) = Aeigvm4
         endif
         if k20 == 5
            Aeig(k20,k20) = Aeigvm5
         endif
         if k20 == 6
            Aeig(k20,k20) = Aeigvm6
         endif
         if k20 == 7
            Aeig(k20,k20) = Aeigvm7
         endif
         if k20 == 8
            Aeig(k20,k20) = Aeigvm8
         endif
         if k20 == 9
            Aeig(k20,k20) = Aeigvm9
         endif
         if k20 == 10
            Aeig(k20,k20) = Aeigvm10
         endif
         if k20 == 11
            Aeig(k20,k20) = Aeigvm11
         endif
         if k20 == 12
            Aeig(k20,k20) = Aeigvm12
         endif
         if k20 == 13
            Aeig(k20,k20) = Aeigvm13
         endif
         if k20 == 14
            Aeig(k20,k20) = Aeigvm14
         endif
         if k20 == 15
            Aeig(k20,k20) = Aeigvm15
         endif
         if k20 == 16
            Aeig(k20,k20) = Aeigvm16
         endif
         if k20 == 17
            Aeig(k20,k20) = Aeigvm17
         endif
         if k20 == 18
            Aeig(k20,k20) = Aeigvm18
         endif
         if k20 == 19
            Aeig(k20,k20) = Aeigvm19
         endif
         if k20 == 20
            Aeig(k20,k20) = Aeigvm20
         endif
      ENDDO k20
#
      execute sip_barrier
#
# -----------------------------------------------------------------
#
      if spdim > 1 
      PARDO a, i
            tai(a,i) = 0.0 
            DO k21 
               if k21 <= spdim 
                  GET                 VC1A(a,i,k21)  
                  t1ai(a,i)         = VC1A(a,i,k21) 
                  DO k20 
                     if k20 == k21 
                        t20(k20,k20)      = Aeig(k20,k20) 
                        execute return_sval t20 temp3 
                     endif 
                  ENDDO k20 
                  t1ai(a,i)        *= temp3  
                  tai(a,i)         += t1ai(a,i) 
               endif 
            ENDDO k21 
            PUT VCACT1A(a,i) = tai(a,i)
      ENDPARDO a, i
      endif 
#
      execute sip_barrier
#
      if spdim >= 2
         call copy_ACT_to_E
      endif
#
     ENDPROC VECLINCOMB_1
#    -------------------- 
#
     PROC VECLINCOMB_2
#    ----------------- 
#
# -----------------------------------------------------------------
#
      if spdim > 1 
      PARDO a, i
            tai(a,i) = 0.0 
            DO k20 
               if k20 <= spdim 
                  GET                 VCH1A(a,i,k20)  
                  t1ai(a,i)         = VCH1A(a,i,k20) 
                  t20(k20,k20)      = Aeig(k20,k20) 
                  execute return_sval t20 temp3 
                  t1ai(a,i)        *= temp3  
                  tai(a,i)         += t1ai(a,i) 
               endif 
            ENDDO k20 
            PUT VCHACT1A(a,i) = tai(a,i)
      ENDPARDO a, i
      endif 
#
      execute sip_barrier
#
     ENDPROC VECLINCOMB_2
#    -------------------- 
#
     PROC SQUAREVCACT
#    ---------------- 
#
     etemp1=0.0
     etemp2=0.0
#
     square=0.0
     sum1=0.0
     sum2=0.0
#
     PARDO a, i
           get         VCACT1A(a,i)
           tai(a,i)  = VCACT1A(a,i)
           t2ai(a,i) = tai(a,i)
           etemp     = tai(a,i)*t2ai(a,i)
           sum1     += etemp
     ENDPARDO a, i
#
     etemp1 = sum1 + sum2
     EXECUTE SIP_BARRIER
#
    collective square += etemp1
#
    ENDPROC SQUAREVCACT
#   ------------------- 
#
     PROC SQUAREVCHACT
#    ----------------- 
#
     etemp1=0.0
     etemp2=0.0
     square=0.0
     sum1=0.0
     sum2=0.0
#
     PARDO a, i
           get         VCHACT1A(a,i)
           tai(a,i)  = VCHACT1A(a,i)
           t2ai(a,i) = tai(a,i)
           etemp     = tai(a,i)*t2ai(a,i)
           sum1     += etemp
     ENDPARDO a, i
#
     EXECUTE SIP_BARRIER
#
     collective etemp1+=sum1
     collective etemp2+=sum2
#
     square+=etemp1
     square+=etemp2
#
     EXECUTE SIP_BARRIER
#
     ENDPROC SQUAREVCHACT
#    ---------------------
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--start of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
      PROC ENDWRITE
#
     PARDO a, i
#
     GET VCE1A(a,i)
     tai(a,i)=VCE1A(a,i)
#     execute dump_block tai
#     execute print_scalar iroot
#
     if iroot == 1.0
     put VCEND1A1(a,i)=tai(a,i)
     endif
     if iroot == 2.0
     put VCEND1A2(a,i)=tai(a,i)
     endif
     if iroot == 3.0
     put VCEND1A3(a,i)=tai(a,i)
     endif
     if iroot == 4.0
     put VCEND1A4(a,i)=tai(a,i)
     endif
     if iroot == 5.0
     put VCEND1A5(a,i)=tai(a,i)
     endif
     if iroot == 6.0
     put VCEND1A6(a,i)=tai(a,i)
     endif
     if iroot == 7.0
     put VCEND1A7(a,i)=tai(a,i)
     endif
     if iroot == 8.0
     put VCEND1A8(a,i)=tai(a,i)
     endif
     if iroot == 9.0
     put VCEND1A9(a,i)=tai(a,i)
     endif
     if iroot == 10.0
     put VCEND1A10(a,i)=tai(a,i)
     endif
     if iroot == 11.0
     put VCEND1A11(a,i)=tai(a,i)
     endif
     if iroot == 12.0
     put VCEND1A12(a,i)=tai(a,i)
     endif
#
     ENDPARDO a, i
#
#
     execute sip_barrier
     execute server_barrier
#
      ENDPROC ENDWRITE
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
     PROC SCALEVCACT
#    --------------- 
#
     PARDO a, i
           get                 VCACT1A(a,i)
           tai(a,i)          = VCACT1A(a,i)
           tai(a,i)         *= mult
           put VCHACT1A(a,i) = tai(a,i)
     ENDPARDO a, i
#
     execute sip_barrier
#
     ENDPROC SCALEVCACT
#    ------------------ 
#
     PROC SCALEVCACT_2
#    ----------------- 
#
     PARDO a, i 
           get         VCHACT1A(a,i)
           tai(a,i)  = VCHACT1A(a,i)
           tai(a,i) *= mult
           DO k21 
              if k21 > spdim 
                 PUT VC1A(a,i,k21) = tai(a,i) 
                 exit 
              endif 
           ENDDO k21 
     ENDPARDO a, i 
#
     ENDPROC SCALEVCACT_2
#    -------------------- 
#
     PROC ORTCOEFS
#    ------------- 
#
      PARDO a, i
            GET VCHACT1A(a,i)
            DO k21
               if k21 <= spdim
                  GET                  VC1A(a,i,k21)
                  tai(a,i)           = VC1A(a,i,k21)
                  etemp              = VCHACT1A(a,i)*tai(a,i)
                  etemp             *= -1.0
                  t1(k21,k21)        = etemp
                  PUT orth(k21,k21) += t1(k21,k21)
               endif
            ENDDO k21
      ENDPARDO a, i
#
      execute sip_barrier 
#
      ENDPROC ORTCOEFS
#     ----------------
#
     PROC VECCONSTR
#    -------------- 
#
      PARDO a, i
            GET        VCHACT1A(a,i)
            tai(a,i) = VCHACT1A(a,i)
            DO k21
               if k21 <= spdim
                  GET         VC1A(a,i,k21)
                  GET         orth(k21,k21)
                  t1ai(a,i) = VC1A(a,i,k21)
#
                  t1(k21,k21)       = orth(k21,k21)
                  execute return_sval t1 fact
                  t1ai(a,i)*= fact
                  tai(a,i) += t1ai(a,i)
#
               endif
            ENDDO k21
#
            PUT VCACT1A(a,i) = tai(a,i)
#
            t2ai(a,i)        = tai(a,i)
            etemp            = tai(a,i)*t2ai(a,i)
            sum1            += etemp
      ENDPARDO a, i
#
      execute sip_barrier
#
# -------- rewrite vector to spdim+1 record ---------
#
      PARDO a, i 
            GET VCACT1A(a,i) 
            DO k21 
               if k21 > spdim 
                  PUT VC1A(a,i,k21) = VCACT1A(a,i) 
                  exit 
               endif 
            ENDDO k21 
      ENDPARDO a, i 
#
      execute sip_barrier
#
     ENDPROC VECCONSTR
#    -----------------
#
     PROC REZYDUUM
#    ------------- 
#
#   ------copy vector to VCactual
#
     call copy_toVCactual_2
#
#   ---------------normalize vector-----------     
     call SQUAREVCACT
#
     exponent=0.5
     execute square_root square exponent
     residuum=square
     mult=1.0/square
##     execute norm_fac square exponent
##     residuum=exponent
##     mult=square
#
     ENDPROC REZYDUUM
#    ---------------- 
#
     PROC ORTHOGON
#    ------------- 
#
     create orth 
     execute sip_barrier
     call ORTCOEFS
     execute sip_barrier
#
     call VECCONSTR
     execute sip_barrier
#
     call copy_toVCHactual_2
     execute sip_barrier
#
     call SQUAREVCHACT
#
#     exponent=0.5
#     execute square_root square exponent
#     mult=1.0/square
     execute norm_fac square exponent
     mult=square
#
     call SCALEVCACT_2
#
     execute sip_barrier
     delete orth 
#
     ENDPROC ORTHOGON
#    ---------------- 
#
     PROC CONVER
#    ----------- 
#
# -----prepare f_aa diagonal = Sdaa
#
     PARDO a, a1
#     GET HBAR_aa(a,a1)
           Saa(a,a1)      = fock_a(a,a1)
           execute return_diagonal Saa Sdaa
           taa(a,a1)      = Sdaa(a,a1)
           put DDaa(a,a1) = taa(a,a1)
     ENDPARDO a, a1
#
# -----prepare f_ii diagonal = Sdii
#
     PARDO i, i1
#     GET HBAR_ii(i1,i)
           Sii(i1,i)      = fock_a(i1,i)
           execute return_diagonal Sii Sdii
           tii(i1,i)      = Sdii(i1,i)
           put DDii(i1,i) = tii(i1,i)
     ENDPARDO i, i1
#
# -----prepare f_bb diagonal = DDbb
#
     PARDO b, b1
#     GET HBAR_bb(b,b1)
           Sbb(b,b1)      = fock_a(b,b1)
           execute return_diagonal Sbb Sdbb
           tbb(b,b1)      = Sdbb(b,b1)
           put DDbb(b,b1) = tbb(b,b1)
     ENDPARDO b, b1
#
# -----prepare f_jj diagonal = DDjj
#
     PARDO j, j1
#     GET HBAR_jj(j1,j)
           Sjj(j1,j)      = fock_a(j1,j)
           execute return_diagonal Sjj Sdjj
           tjj(j1,j)      = Sdjj(j1,j)
           put DDjj(j1,j) = tjj(j1,j)
     ENDPARDO j, j1
#
# -----prepare Hbar_aiai diagonal
#
     PARDO a, i
#
           tai(a,i) = 0.0
#
           do a1
           do i1
#
#     REQUEST HBAR_AJIB_aaaa(i1,a1,a,i) i
               REQUEST             Viaai(i1,a1,a,i) i
              #REQUEST             Vaaii(a,a1,i1,i) i
#
              #Tiaai(i1,a1,a,i)  = Vaaii(a,a1,i1,i)
               Tiaai(i1,a1,a,i)  = Viaai(i1,a1,a,i)
              #Tiaai(i1,a1,a,i) *= -1.0
#
               Taaii(a,a1,i,i1)  = Tiaai(i1,a1,a,i)
               execute return_diagonal4 Taaii
               tia(i1,a1)        = 1.0
               t1ai(a,i)         = Taaii(a,a1,i,i1)*tia(i1,a1)
               tai(a,i)         += t1ai(a,i)
#
           enddo i1
           enddo a1
#
           PUT VCONV1A(a,i) = tai(a,i)
#
     ENDPARDO a, i
#
# -----prepare Hbar_bjbj diagonal
#
     PARDO b, j
#
           tbj(b,j) = 0.0
#
           do b1
           do j1
#
#     REQUEST HBAR_AJIB_bbbb(j1,b1,b,j) j
               REQUEST             Vjbbj(j1,b1,b,j) j
              #REQUEST             Vbbjj(b,b1,j1,j) j
#
              #Tjbbj(j1,b1,b,j)  = Vbbjj(b,b1,j1,j)
               Tjbbj(j1,b1,b,j)  = Vjbbj(j1,b1,b,j)
              #Tjbbj(j1,b1,b,j) *= -1.0
#
               Tbbjj(b,b1,j,j1)  = Tjbbj(j1,b1,b,j)
               execute return_diagonal4 Tbbjj
               tjb(j1,b1)        = 1.0
               t1bj(b,j)         = Tbbjj(b,b1,j,j1)*tjb(j1,b1)
               tbj(b,j)         += t1bj(b,j)
#
           enddo j1
           enddo b1
#
           PUT VCONV1B(b,j) = tbj(b,j)
#
     ENDPARDO b, j
#
     execute sip_barrier
#
# ---------compute T(a,i)=F(a,a)-f(i,i)-v(a,i,a,i)
#
     PARDO a, i
#
           tai(a,i) = 0.0
#
           do a1
#
              get         DDaa(a,a1)
              tia(i,a1) = 1.0
              taa(a1,a) = DDaa(a,a1)
#
              t2ai(a,i) = tia(i,a1)*taa(a1,a)
              tai(a,i) += t2ai(a,i)
#
           enddo a1
#
           do i1
#
              get         DDii(i1,i)
              t2ia(i1,a)= 1.0
              tii(i,i1) = DDii(i1,i)
#
              t2ai(a,i) = tii(i,i1)*t2ia(i1,a)
              t2ai(a,i)*= -1.0
              tai(a,i) += t2ai(a,i)
#
           enddo i1
#
           PUT VCONV1A(a,i)+=tai(a,i)
#
     ENDPARDO a, i
#
# ---------compute T(b,j)=F(b,b)-f(j,j)
#
     PARDO b, j
#
           tbj(b,j)=0.0
#
           do b1
#
              get         DDbb(b,b1)
              tjb(j,b1) = 1.0
              tbb(b1,b) = DDbb(b,b1)
              t2bj(b,j) = tjb(j,b1)*tbb(b1,b)
              tbj(b,j) += t2bj(b,j)
#
           enddo b1
#
           do j1
#
              get         DDjj(j1,j)
              t2jb(j1,b)= 1.0
              tjj(j,j1) = DDjj(j1,j)
              t2bj(b,j) = tjj(j,j1)*t2jb(j1,b)
              t2bj(b,j)*= -1.0
              tbj(b,j) += t2bj(b,j)
#
           enddo j1
#
           PUT VCONV1B(b,j) += tbj(b,j)
#
     ENDPARDO b, j
#
     execute sip_barrier
#
     ENDPROC CONVER
#    -------------- 
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--start of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
       PROC AEIGCANC
#
#
        if spdim20 == 1
        Aeig1 = 1000000.0
        endif
        if spdim20 == 2
        Aeig2 = 1000000.0
        endif
        if spdim20 == 3
        Aeig3 = 1000000.0
        endif
        if spdim20 == 4
        Aeig4 = 1000000.0
        endif
        if spdim20 == 5
        Aeig5 = 1000000.0
        endif
        if spdim20 == 6
        Aeig6 = 1000000.0
        endif
        if spdim20 == 7
        Aeig7 = 1000000.0
        endif
        if spdim20 == 8
        Aeig8 = 1000000.0
        endif
        if spdim20 == 9
        Aeig9 = 1000000.0
        endif
        if spdim20 == 10
        Aeig10 = 1000000.0
        endif
        if spdim20 == 11
        Aeig11 = 1000000.0
        endif
        if spdim20 == 12
        Aeig12 = 1000000.0
        endif
        if spdim20 == 13
        Aeig13 = 1000000.0
        endif
        if spdim20 == 14
        Aeig14 = 1000000.0
        endif
        if spdim20 == 15
        Aeig15 = 1000000.0
        endif
        if spdim20 == 16
        Aeig16 = 1000000.0
        endif
        if spdim20 == 17
        Aeig17 = 1000000.0
        endif
        if spdim20 == 18
        Aeig18 = 1000000.0
        endif
        if spdim20 == 19
        Aeig19 = 1000000.0
        endif
        if spdim20 == 20
        Aeig20 = 1000000.0
        endif
#
#
       ENDPROC AEIGCANC
#
#
       PROC AEIGCANCX
#
#
        if egvmax == 1.0
        Aeig1 = 1000000.0
        endif
        if egvmax == 2.0
        Aeig2 = 1000000.0
        endif
        if egvmax == 3.0
        Aeig3 = 1000000.0
        endif
        if egvmax == 4.0
        Aeig4 = 1000000.0
        endif
        if egvmax == 5.0
        Aeig5 = 1000000.0
        endif
        if egvmax == 6.0
        Aeig6 = 1000000.0
        endif
        if egvmax == 7.0
        Aeig7 = 1000000.0
        endif
        if egvmax == 8.0
        Aeig8 = 1000000.0
        endif
        if egvmax == 9.0
        Aeig9 = 1000000.0
        endif
        if egvmax == 10.0
        Aeig10 = 1000000.0
        endif
        if egvmax == 11.0
        Aeig11 = 1000000.0
        endif
        if egvmax == 12.0
        Aeig12 = 1000000.0
        endif
        if egvmax == 13.0
        Aeig13 = 1000000.0
        endif
        if egvmax == 14.0
        Aeig14 = 1000000.0
        endif
        if egvmax == 15.0
        Aeig15 = 1000000.0
        endif
        if egvmax == 16.0
        Aeig16 = 1000000.0
        endif
        if egvmax == 17.0
        Aeig17 = 1000000.0
        endif
        if egvmax == 18.0
        Aeig18 = 1000000.0
        endif
        if egvmax == 19.0
        Aeig19 = 1000000.0
        endif
        if egvmax == 20.0
        Aeig20 = 1000000.0
        endif
#
#
       ENDPROC AEIGCANCX
#
#
       PROC DRAWVEC1
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     do jindex20
     do kindex20
#
        if jindex20 == spdim20
#
        if kindex20 == 1
        execute return_sval Lvev20  V1_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V1_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V1_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V1_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V1_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V1_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V1_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V1_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V1_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V1_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V1_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V1_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V1_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V1_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V1_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V1_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V1_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V1_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V1_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V1_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVEC1
#
#
       PROC DRAWVEC2
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     do jindex20
     do kindex20
#
        if jindex20 == spdim20
#
        if kindex20 == 1
        execute return_sval Lvev20  V2_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V2_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V2_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V2_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V2_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V2_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V2_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V2_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V2_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V2_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V2_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V2_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V2_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V2_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V2_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V2_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V2_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V2_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V2_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V2_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVEC2
#
#
       PROC DRAWVEC3
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     do jindex20
     do kindex20
#
        if jindex20 == spdim20
#
        if kindex20 == 1
        execute return_sval Lvev20  V3_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V3_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V3_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V3_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V3_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V3_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V3_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V3_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V3_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V3_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V3_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V3_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V3_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V3_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V3_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V3_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V3_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V3_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V3_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V3_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVEC3
#
#
       PROC DRAWVEC4
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     do jindex20
     do kindex20
#
        if jindex20 == spdim20
#
        if kindex20 == 1
        execute return_sval Lvev20  V4_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V4_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V4_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V4_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V4_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V4_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V4_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V4_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V4_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V4_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V4_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V4_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V4_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V4_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V4_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V4_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V4_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V4_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V4_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V4_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVEC4
#
#
       PROC DRAWVEC5
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     do jindex20
     do kindex20
#
        if jindex20 == spdim20
#
        if kindex20 == 1
        execute return_sval Lvev20  V5_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V5_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V5_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V5_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V5_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V5_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V5_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V5_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V5_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V5_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V5_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V5_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V5_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V5_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V5_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V5_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V5_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V5_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V5_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V5_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVEC5
#
#
       PROC DRAWVEC6
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     do jindex20
     do kindex20
#
        if jindex20 == spdim20
#
        if kindex20 == 1
        execute return_sval Lvev20  V6_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V6_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V6_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V6_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V6_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V6_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V6_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V6_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V6_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V6_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V6_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V6_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V6_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V6_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V6_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V6_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V6_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V6_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V6_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V6_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVEC6
#
#
       PROC DRAWVEC7
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     do jindex20
     do kindex20
#
        if jindex20 == spdim20
#
        if kindex20 == 1
        execute return_sval Lvev20  V7_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V7_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V7_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V7_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V7_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V7_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V7_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V7_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V7_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V7_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V7_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V7_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V7_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V7_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V7_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V7_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V7_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V7_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V7_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V7_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVEC7
#
#
       PROC DRAWVEC8
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     do jindex20
     do kindex20
#
        if jindex20 == spdim20
#
        if kindex20 == 1
        execute return_sval Lvev20  V8_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V8_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V8_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V8_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V8_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V8_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V8_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V8_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V8_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V8_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V8_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V8_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V8_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V8_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V8_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V8_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V8_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V8_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V8_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V8_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVEC8
#
#
       PROC DRAWVEC9
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     do jindex20
     do kindex20
#
        if jindex20 == spdim20
#
        if kindex20 == 1
        execute return_sval Lvev20  V9_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V9_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V9_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V9_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V9_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V9_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V9_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V9_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V9_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V9_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V9_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V9_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V9_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V9_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V9_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V9_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V9_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V9_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V9_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V9_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVEC9
#
#
       PROC DRAWVEC10
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     do jindex20
     do kindex20
#
        if jindex20 == spdim20
#
        if kindex20 == 1
        execute return_sval Lvev20  V10_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V10_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V10_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V10_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V10_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V10_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V10_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V10_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V10_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V10_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V10_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V10_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V10_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V10_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V10_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V10_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V10_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V10_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V10_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V10_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVEC10
#
#
       PROC DRAWVEC11
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     do jindex20
     do kindex20
#
        if jindex20 == spdim20
#
        if kindex20 == 1
        execute return_sval Lvev20  V11_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V11_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V11_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V11_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V11_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V11_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V11_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V11_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V11_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V11_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V11_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V11_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V11_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V11_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V11_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V11_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V11_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V11_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V11_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V11_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVEC11
#
#
       PROC DRAWVEC12
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     do jindex20
     do kindex20
#
        if jindex20 == spdim20
#
        if kindex20 == 1
        execute return_sval Lvev20  V12_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V12_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V12_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V12_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V12_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V12_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V12_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V12_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V12_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V12_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V12_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V12_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V12_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V12_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V12_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V12_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V12_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V12_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V12_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V12_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVEC12
#
#
#
       PROC DRAWVECX1
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     xcount=0.0
     do jindex20
#
     xcount+=1.0
#
     do kindex20
#
        if xcount == egvmax
#
        if kindex20 == 1
        execute return_sval Lvev20  V1_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V1_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V1_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V1_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V1_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V1_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V1_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V1_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V1_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V1_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V1_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V1_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V1_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V1_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V1_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V1_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V1_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V1_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V1_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V1_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVECX1
#
#
       PROC DRAWVECX2
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     xcount=0.0
     do jindex20
#
     xcount+=1.0
#
     do kindex20
#
        if xcount == egvmax
#
        if kindex20 == 1
        execute return_sval Lvev20  V2_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V2_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V2_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V2_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V2_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V2_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V2_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V2_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V2_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V2_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V2_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V2_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V2_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V2_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V2_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V2_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V2_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V2_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V2_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V2_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVECX2
#
#
       PROC DRAWVECX3
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     xcount=0.0
     do jindex20
#
     xcount+=1.0
#
     do kindex20
#
        if xcount == egvmax
#
        if kindex20 == 1
        execute return_sval Lvev20  V3_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V3_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V3_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V3_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V3_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V3_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V3_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V3_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V3_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V3_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V3_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V3_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V3_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V3_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V3_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V3_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V3_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V3_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V3_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V3_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVECX3
#
#
       PROC DRAWVECX4
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     xcount=0.0
     do jindex20
#
     xcount+=1.0
#
     do kindex20
#
        if xcount == egvmax
#
        if kindex20 == 1
        execute return_sval Lvev20  V4_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V4_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V4_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V4_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V4_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V4_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V4_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V4_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V4_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V4_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V4_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V4_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V4_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V4_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V4_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V4_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V4_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V4_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V4_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V4_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVECX4
#
#
       PROC DRAWVECX5
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     xcount=0.0
     do jindex20
#
     xcount+=1.0
#
     do kindex20
#
        if xcount == egvmax
#
        if kindex20 == 1
        execute return_sval Lvev20  V5_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V5_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V5_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V5_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V5_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V5_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V5_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V5_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V5_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V5_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V5_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V5_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V5_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V5_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V5_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V5_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V5_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V5_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V5_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V5_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVECX5
#
#
       PROC DRAWVECX6
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     xcount=0.0
     do jindex20
#
     xcount+=1.0
#
     do kindex20
#
        if xcount == egvmax
#
        if kindex20 == 1
        execute return_sval Lvev20  V6_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V6_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V6_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V6_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V6_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V6_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V6_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V6_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V6_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V6_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V6_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V6_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V6_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V6_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V6_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V6_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V6_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V6_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V6_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V6_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVECX6
#
#
       PROC DRAWVECX7
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     xcount=0.0
     do jindex20
#
     xcount+=1.0
#
     do kindex20
#
        if xcount == egvmax
#
        if kindex20 == 1
        execute return_sval Lvev20  V7_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V7_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V7_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V7_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V7_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V7_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V7_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V7_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V7_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V7_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V7_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V7_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V7_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V7_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V7_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V7_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V7_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V7_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V7_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V7_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVECX7
#
#
       PROC DRAWVECX8
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     xcount=0.0
     do jindex20
#
     xcount+=1.0
#
     do kindex20
#
        if xcount == egvmax
#
        if kindex20 == 1
        execute return_sval Lvev20  V8_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V8_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V8_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V8_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V8_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V8_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V8_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V8_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V8_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V8_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V8_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V8_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V8_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V8_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V8_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V8_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V8_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V8_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V8_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V8_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVECX8
#
#
       PROC DRAWVECX9
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     xcount=0.0
     do jindex20
#
     xcount+=1.0
#
     do kindex20
#
        if xcount == egvmax
#
        if kindex20 == 1
        execute return_sval Lvev20  V9_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V9_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V9_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V9_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V9_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V9_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V9_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V9_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V9_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V9_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V9_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V9_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V9_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V9_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V9_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V9_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V9_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V9_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V9_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V9_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVECX9
#
#
       PROC DRAWVECX10
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     xcount=0.0
     do jindex20
#
     xcount+=1.0
#
     do kindex20
#
        if xcount == egvmax
#
        if kindex20 == 1
        execute return_sval Lvev20  V10_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V10_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V10_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V10_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V10_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V10_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V10_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V10_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V10_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V10_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V10_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V10_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V10_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V10_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V10_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V10_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V10_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V10_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V10_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V10_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVECX10
#
#
       PROC DRAWVECX11
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     xcount=0.0
     do jindex20
#
     xcount+=1.0
#
     do kindex20
#
        if xcount == egvmax
#
        if kindex20 == 1
        execute return_sval Lvev20  V11_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V11_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V11_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V11_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V11_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V11_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V11_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V11_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V11_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V11_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V11_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V11_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V11_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V11_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V11_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V11_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V11_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V11_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V11_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V11_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVECX11
#
#
       PROC DRAWVECX12
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     xcount=0.0
     do jindex20
#
     xcount+=1.0
#
     do kindex20
#
        if xcount == egvmax
#
        if kindex20 == 1
        execute return_sval Lvev20  V12_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V12_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V12_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V12_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V12_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V12_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V12_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V12_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V12_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V12_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V12_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V12_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V12_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V12_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V12_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V12_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V12_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V12_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V12_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V12_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
#
       ENDPROC DRAWVECX12
#
#
#
       PROC FNDVECS
#
     lcount=0.0
     icount=1.0
#
#
# ----------------find current one -----------
#
     do spdim2
#
     if icount == imax
#
     lcount+=1.0
#
     allocate Lvev20(*,*)
#
     do jindex20
     do kindex20
     Lvev20(kindex20,jindex20)=Svev20(kindex20,jindex20)
     MYvev(kindex20,jindex20)=Svev20(kindex20,jindex20)
     enddo kindex20
     enddo jindex20
#
     do jindex20
     do kindex20
#
        if jindex20 == spdim2
#
        if kindex20 == 1
        execute return_sval Lvev20  V1_1
        endif
        if kindex20 == 2
        execute return_sval Lvev20  V1_2
        endif
        if kindex20 == 3
        execute return_sval Lvev20  V1_3
        endif
        if kindex20 == 4
        execute return_sval Lvev20  V1_4
        endif
        if kindex20 == 5
        execute return_sval Lvev20  V1_5
        endif
        if kindex20 == 6
        execute return_sval Lvev20  V1_6
        endif
        if kindex20 == 7
        execute return_sval Lvev20  V1_7
        endif
        if kindex20 == 8
        execute return_sval Lvev20  V1_8
        endif
        if kindex20 == 9
        execute return_sval Lvev20  V1_9
        endif
        if kindex20 == 10
        execute return_sval Lvev20  V1_10
        endif
        if kindex20 == 11
        execute return_sval Lvev20  V1_11
        endif
        if kindex20 == 12
        execute return_sval Lvev20  V1_12
        endif
        if kindex20 == 13
        execute return_sval Lvev20  V1_13
        endif
        if kindex20 == 14
        execute return_sval Lvev20  V1_14
        endif
        if kindex20 == 15
        execute return_sval Lvev20  V1_15
        endif
        if kindex20 == 16
        execute return_sval Lvev20  V1_16
        endif
        if kindex20 == 17
        execute return_sval Lvev20  V1_17
        endif
        if kindex20 == 18
        execute return_sval Lvev20  V1_18
        endif
        if kindex20 == 19
        execute return_sval Lvev20  V1_19
        endif
        if kindex20 == 20
        execute return_sval Lvev20  V1_20
        endif
#
        endif
#
     enddo kindex20
     enddo jindex20
#
     deallocate Lvev20(*,*)
#
        if spdim2 == 1
        Aeig1 = 1000000.0
        endif
        if spdim2 == 2
        Aeig2 = 1000000.0
        endif
        if spdim2 == 3
        Aeig3 = 1000000.0
        endif
        if spdim2 == 4
        Aeig4 = 1000000.0
        endif
        if spdim2 == 5
        Aeig5 = 1000000.0
        endif
        if spdim2 == 6
        Aeig6 = 1000000.0
        endif
        if spdim2 == 7
        Aeig7 = 1000000.0
        endif
        if spdim2 == 8
        Aeig8 = 1000000.0
        endif
        if spdim2 == 9
        Aeig9 = 1000000.0
        endif
        if spdim2 == 10
        Aeig10 = 1000000.0
        endif
        if spdim2 == 11
        Aeig11 = 1000000.0
        endif
        if spdim2 == 12
        Aeig12 = 1000000.0
        endif
        if spdim2 == 13
        Aeig13 = 1000000.0
        endif
        if spdim2 == 14
        Aeig14 = 1000000.0
        endif
        if spdim2 == 15
        Aeig15 = 1000000.0
        endif
        if spdim2 == 16
        Aeig16 = 1000000.0
        endif
        if spdim2 == 17
        Aeig17 = 1000000.0
        endif
        if spdim2 == 18
        Aeig18 = 1000000.0
        endif
        if spdim2 == 19
        Aeig19 = 1000000.0
        endif
        if spdim2 == 20
        Aeig20 = 1000000.0
        endif
#
     exit
#
     endif
#
     icount+=1.0
#
     enddo spdim2
#
#
#
# ----------cancel eigenvalues below threshold---
#
        do spdim20
#
      if spdim20 == 1
#
      aeigtemp=Aeig1
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig1 = 12345.6
      endif
#
      endif
#
      if spdim20 == 2
#
      aeigtemp=Aeig2
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig2 = 12345.6
      endif
#
      endif
#
      if spdim20 == 3
#
      aeigtemp=Aeig3
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig3 = 12345.6
      endif
#
      endif
#
      if spdim20 == 4
#
      aeigtemp=Aeig4
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig4 = 12345.6
      endif
#
      endif
#
      if spdim20 == 5
#
      aeigtemp=Aeig5
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig5 = 12345.6
      endif
#
      endif
#
      if spdim20 == 6
#
      aeigtemp=Aeig6
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig6 = 12345.6
      endif
#
      endif
#
      if spdim20 == 7
#
      aeigtemp=Aeig7
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig7 = 12345.6
      endif
#
      endif
#
      if spdim20 == 8
#
      aeigtemp=Aeig8
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig8 = 12345.6
      endif
#
      endif
#
      if spdim20 == 9
#
      aeigtemp=Aeig9
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig9 = 12345.6
      endif
#
      endif
#
      if spdim20 == 10
#
      aeigtemp=Aeig10
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig10 = 12345.6
      endif
#
      endif
#
      if spdim20 == 11
#
      aeigtemp=Aeig11
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig11 = 12345.6
      endif
#
      endif
#
      if spdim20 == 12
#
      aeigtemp=Aeig12
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig12 = 12345.6
      endif
#
      endif
#
      if spdim20 == 13
#
      aeigtemp=Aeig13
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig13 = 12345.6
      endif
#
      endif
#
      if spdim20 == 14
#
      aeigtemp=Aeig14
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig14 = 12345.6
      endif
#
      endif
#
      if spdim20 == 15
#
      aeigtemp=Aeig15
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig15 = 12345.6
      endif
#
      endif
#
      if spdim20 == 16
#
      aeigtemp=Aeig16
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig16 = 12345.6
      endif
#
      endif
#
      if spdim20 == 17
#
      aeigtemp=Aeig17
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig17 = 12345.6
      endif
#
      endif
#
      if spdim20 == 18
#
      aeigtemp=Aeig18
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig18 = 12345.6
      endif
#
      endif
#
      if spdim20 == 19
#
      aeigtemp=Aeig19
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig19 = 12345.6
      endif
#
      endif
#
      if spdim20 == 20
#
      aeigtemp=Aeig20
#
      if aeigtemp < 0.0
      aeigtemp*=-1.0
      endif
#
      if aeigtemp < eomthresh
      Aeig20 = 12345.6
      endif
#
      endif
#
        enddo spdim20
#
# ----------------find previous roots -----------
#
#
        if root1 < 1000.0
#
        lcount+=1.0
#
        do spdim20
#
      if spdim20 == 1
#
      ediff = root1 - Aeig1
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 2
#
      ediff = root1 - Aeig2
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 3
#
      ediff = root1 - Aeig3
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 4
#
      ediff = root1 - Aeig4
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 5
#
      ediff = root1 - Aeig5
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 6
#
      ediff = root1 - Aeig6
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 7
#
      ediff = root1 - Aeig7
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 8
#
      ediff = root1 - Aeig8
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 9
#
      ediff = root1 - Aeig9
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 10
#
      ediff = root1 - Aeig10
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 11
#
      ediff = root1 - Aeig11
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 12
#
      ediff = root1 - Aeig12
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 13
#
      ediff = root1 - Aeig13
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 14
#
      ediff = root1 - Aeig14
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 15
#
      ediff = root1 - Aeig15
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 16
#
      ediff = root1 - Aeig16
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 17
#
      ediff = root1 - Aeig17
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 18
#
      ediff = root1 - Aeig18
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 19
#
      ediff = root1 - Aeig19
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 20
#
      ediff = root1 - Aeig20
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC2
#
      call AEIGCANC
#
#
      endif
#
      endif
#
        enddo spdim20
#
      endif
#
#
        if root2 < 1000.0
#
        lcount+=1.0
#
        do spdim20
#
      if spdim20 == 1
#
      ediff = root2 - Aeig1
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 2
#
      ediff = root2 - Aeig2
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 3
#
      ediff = root2 - Aeig3
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 4
#
      ediff = root2 - Aeig4
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 5
#
      ediff = root2 - Aeig5
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 6
#
      ediff = root2 - Aeig6
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 7
#
      ediff = root2 - Aeig7
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 8
#
      ediff = root2 - Aeig8
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 9
#
      ediff = root2 - Aeig9
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 10
#
      ediff = root2 - Aeig10
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 11
#
      ediff = root2 - Aeig11
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 12
#
      ediff = root2 - Aeig12
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 13
#
      ediff = root2 - Aeig13
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 14
#
      ediff = root2 - Aeig14
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 15
#
      ediff = root2 - Aeig15
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 16
#
      ediff = root2 - Aeig16
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 17
#
      ediff = root2 - Aeig17
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 18
#
      ediff = root2 - Aeig18
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 19
#
      ediff = root2 - Aeig19
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 20
#
      ediff = root2 - Aeig20
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC3
#
      call AEIGCANC
#
#
      endif
#
      endif
#
        enddo spdim20
#
      endif
#
#
        if root3 < 1000.0
#
        lcount+=1.0
#
        do spdim20
#
      if spdim20 == 1
#
      ediff = root3 - Aeig1
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 2
#
      ediff = root3 - Aeig2
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 3
#
      ediff = root3 - Aeig3
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 4
#
      ediff = root3 - Aeig4
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 5
#
      ediff = root3 - Aeig5
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 6
#
      ediff = root3 - Aeig6
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 7
#
      ediff = root3 - Aeig7
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 8
#
      ediff = root3 - Aeig8
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 9
#
      ediff = root3 - Aeig9
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 10
#
      ediff = root3 - Aeig10
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 11
#
      ediff = root3 - Aeig11
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 12
#
      ediff = root3 - Aeig12
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 13
#
      ediff = root3 - Aeig13
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 14
#
      ediff = root3 - Aeig14
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 15
#
      ediff = root3 - Aeig15
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 16
#
      ediff = root3 - Aeig16
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 17
#
      ediff = root3 - Aeig17
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 18
#
      ediff = root3 - Aeig18
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 19
#
      ediff = root3 - Aeig19
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 20
#
      ediff = root3 - Aeig20
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC4
#
      call AEIGCANC
#
#
      endif
#
      endif
#
        enddo spdim20
#
      endif
#
#
        if root4 < 1000.0
#
        lcount+=1.0
#
        do spdim20
#
      if spdim20 == 1
#
      ediff = root4 - Aeig1
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 2
#
      ediff = root4 - Aeig2
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 3
#
      ediff = root4 - Aeig3
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 4
#
      ediff = root4 - Aeig4
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 5
#
      ediff = root4 - Aeig5
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 6
#
      ediff = root4 - Aeig6
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 7
#
      ediff = root4 - Aeig7
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 8
#
      ediff = root4 - Aeig8
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 9
#
      ediff = root4 - Aeig9
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 10
#
      ediff = root4 - Aeig10
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 11
#
      ediff = root4 - Aeig11
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 12
#
      ediff = root4 - Aeig12
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 13
#
      ediff = root4 - Aeig13
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 14
#
      ediff = root4 - Aeig14
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 15
#
      ediff = root4 - Aeig15
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 16
#
      ediff = root4 - Aeig16
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 17
#
      ediff = root4 - Aeig17
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 18
#
      ediff = root4 - Aeig18
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 19
#
      ediff = root4 - Aeig19
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 20
#
      ediff = root4 - Aeig20
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC5
#
      call AEIGCANC
#
#
      endif
#
      endif
#
        enddo spdim20
#
      endif
#
#
        if root5 < 1000.0
#
        lcount+=1.0
#
        do spdim20
#
      if spdim20 == 1
#
      ediff = root5 - Aeig1
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 2
#
      ediff = root5 - Aeig2
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 3
#
      ediff = root5 - Aeig3
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 4
#
      ediff = root5 - Aeig4
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 5
#
      ediff = root5 - Aeig5
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 6
#
      ediff = root5 - Aeig6
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 7
#
      ediff = root5 - Aeig7
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 8
#
      ediff = root5 - Aeig8
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 9
#
      ediff = root5 - Aeig9
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 10
#
      ediff = root5 - Aeig10
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 11
#
      ediff = root5 - Aeig11
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 12
#
      ediff = root5 - Aeig12
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 13
#
      ediff = root5 - Aeig13
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 14
#
      ediff = root5 - Aeig14
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 15
#
      ediff = root5 - Aeig15
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 16
#
      ediff = root5 - Aeig16
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 17
#
      ediff = root5 - Aeig17
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 18
#
      ediff = root5 - Aeig18
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 19
#
      ediff = root5 - Aeig19
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 20
#
      ediff = root5 - Aeig20
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC6
#
      call AEIGCANC
#
#
      endif
#
      endif
#
        enddo spdim20
#
      endif
#
#
        if root6 < 1000.0
#
        lcount+=1.0
#
        do spdim20
#
      if spdim20 == 1
#
      ediff = root6 - Aeig1
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 2
#
      ediff = root6 - Aeig2
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 3
#
      ediff = root6 - Aeig3
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 4
#
      ediff = root6 - Aeig4
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 5
#
      ediff = root6 - Aeig5
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 6
#
      ediff = root6 - Aeig6
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 7
#
      ediff = root6 - Aeig7
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 8
#
      ediff = root6 - Aeig8
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 9
#
      ediff = root6 - Aeig9
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 10
#
      ediff = root6 - Aeig10
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 11
#
      ediff = root6 - Aeig11
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 12
#
      ediff = root6 - Aeig12
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 13
#
      ediff = root6 - Aeig13
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 14
#
      ediff = root6 - Aeig14
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 15
#
      ediff = root6 - Aeig15
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 16
#
      ediff = root6 - Aeig16
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 17
#
      ediff = root6 - Aeig17
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 18
#
      ediff = root6 - Aeig18
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 19
#
      ediff = root6 - Aeig19
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 20
#
      ediff = root6 - Aeig20
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC7
#
      call AEIGCANC
#
#
      endif
#
      endif
#
        enddo spdim20
#
      endif
#
#
        if root7 < 1000.0
#
        lcount+=1.0
#
        do spdim20
#
      if spdim20 == 1
#
      ediff = root7 - Aeig1
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 2
#
      ediff = root7 - Aeig2
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 3
#
      ediff = root7 - Aeig3
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 4
#
      ediff = root7 - Aeig4
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 5
#
      ediff = root7 - Aeig5
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 6
#
      ediff = root7 - Aeig6
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 7
#
      ediff = root7 - Aeig7
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 8
#
      ediff = root7 - Aeig8
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 9
#
      ediff = root7 - Aeig9
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 10
#
      ediff = root7 - Aeig10
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 11
#
      ediff = root7 - Aeig11
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 12
#
      ediff = root7 - Aeig12
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 13
#
      ediff = root7 - Aeig13
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 14
#
      ediff = root7 - Aeig14
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 15
#
      ediff = root7 - Aeig15
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 16
#
      ediff = root7 - Aeig16
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 17
#
      ediff = root7 - Aeig17
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 18
#
      ediff = root7 - Aeig18
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 19
#
      ediff = root7 - Aeig19
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 20
#
      ediff = root7 - Aeig20
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC8
#
      call AEIGCANC
#
#
      endif
#
      endif
#
        enddo spdim20
#
      endif
#
#
        if root8 < 1000.0
#
        lcount+=1.0
#
        do spdim20
#
      if spdim20 == 1
#
      ediff = root8 - Aeig1
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 2
#
      ediff = root8 - Aeig2
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 3
#
      ediff = root8 - Aeig3
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 4
#
      ediff = root8 - Aeig4
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 5
#
      ediff = root8 - Aeig5
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 6
#
      ediff = root8 - Aeig6
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 7
#
      ediff = root8 - Aeig7
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 8
#
      ediff = root8 - Aeig8
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 9
#
      ediff = root8 - Aeig9
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 10
#
      ediff = root8 - Aeig10
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 11
#
      ediff = root8 - Aeig11
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 12
#
      ediff = root8 - Aeig12
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 13
#
      ediff = root8 - Aeig13
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 14
#
      ediff = root8 - Aeig14
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 15
#
      ediff = root8 - Aeig15
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 16
#
      ediff = root8 - Aeig16
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 17
#
      ediff = root8 - Aeig17
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 18
#
      ediff = root8 - Aeig18
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 19
#
      ediff = root8 - Aeig19
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 20
#
      ediff = root8 - Aeig20
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC9
#
      call AEIGCANC
#
#
      endif
#
      endif
#
        enddo spdim20
#
      endif
#
#
        if root9 < 1000.0
#
        lcount+=1.0
#
        do spdim20
#
      if spdim20 == 1
#
      ediff = root9 - Aeig1
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 2
#
      ediff = root9 - Aeig2
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 3
#
      ediff = root9 - Aeig3
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 4
#
      ediff = root9 - Aeig4
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 5
#
      ediff = root9 - Aeig5
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 6
#
      ediff = root9 - Aeig6
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 7
#
      ediff = root9 - Aeig7
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 8
#
      ediff = root9 - Aeig8
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 9
#
      ediff = root9 - Aeig9
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 10
#
      ediff = root9 - Aeig10
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 11
#
      ediff = root9 - Aeig11
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 12
#
      ediff = root9 - Aeig12
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 13
#
      ediff = root9 - Aeig13
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 14
#
      ediff = root9 - Aeig14
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 15
#
      ediff = root9 - Aeig15
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 16
#
      ediff = root9 - Aeig16
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 17
#
      ediff = root9 - Aeig17
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 18
#
      ediff = root9 - Aeig18
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 19
#
      ediff = root9 - Aeig19
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 20
#
      ediff = root9 - Aeig20
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC10
#
      call AEIGCANC
#
#
      endif
#
      endif
#
        enddo spdim20
#
      endif
#
#
        if root10 < 1000.0
#
        lcount+=1.0
#
        do spdim20
#
      if spdim20 == 1
#
      ediff = root10 - Aeig1
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 2
#
      ediff = root10 - Aeig2
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 3
#
      ediff = root10 - Aeig3
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 4
#
      ediff = root10 - Aeig4
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 5
#
      ediff = root10 - Aeig5
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 6
#
      ediff = root10 - Aeig6
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 7
#
      ediff = root10 - Aeig7
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 8
#
      ediff = root10 - Aeig8
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 9
#
      ediff = root10 - Aeig9
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 10
#
      ediff = root10 - Aeig10
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 11
#
      ediff = root10 - Aeig11
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 12
#
      ediff = root10 - Aeig12
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 13
#
      ediff = root10 - Aeig13
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 14
#
      ediff = root10 - Aeig14
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 15
#
      ediff = root10 - Aeig15
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 16
#
      ediff = root10 - Aeig16
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 17
#
      ediff = root10 - Aeig17
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 18
#
      ediff = root10 - Aeig18
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 19
#
      ediff = root10 - Aeig19
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 20
#
      ediff = root10 - Aeig20
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC11
#
      call AEIGCANC
#
#
      endif
#
      endif
#
        enddo spdim20
#
      endif
#
#
        if root11 < 1000.0
#
        lcount+=1.0
#
        do spdim20
#
      if spdim20 == 1
#
      ediff = root11 - Aeig1
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 2
#
      ediff = root11 - Aeig2
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 3
#
      ediff = root11 - Aeig3
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 4
#
      ediff = root11 - Aeig4
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 5
#
      ediff = root11 - Aeig5
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 6
#
      ediff = root11 - Aeig6
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 7
#
      ediff = root11 - Aeig7
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 8
#
      ediff = root11 - Aeig8
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 9
#
      ediff = root11 - Aeig9
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 10
#
      ediff = root11 - Aeig10
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 11
#
      ediff = root11 - Aeig11
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 12
#
      ediff = root11 - Aeig12
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 13
#
      ediff = root11 - Aeig13
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 14
#
      ediff = root11 - Aeig14
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 15
#
      ediff = root11 - Aeig15
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 16
#
      ediff = root11 - Aeig16
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 17
#
      ediff = root11 - Aeig17
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 18
#
      ediff = root11 - Aeig18
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 19
#
      ediff = root11 - Aeig19
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
      if spdim20 == 20
#
      ediff = root11 - Aeig20
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < 0.00001
#
#
      call DRAWVEC12
#
      call AEIGCANC
#
#
      endif
#
      endif
#
        enddo spdim20
#
      endif
#
#
# ----------------find close to current -----------
#
     do spdim2
#
     lcount+=1.0
#
     if lcount > 12.0
     exit
     endif
#
      emax=100000.0
#
      icount=0.0
#
      do spdim20
#
      icount+=1.0
#
      if spdim20 == 1
      ediff=omega-Aeig1
      endif
      if spdim20 == 2
      ediff=omega-Aeig2
      endif
      if spdim20 == 3
      ediff=omega-Aeig3
      endif
      if spdim20 == 4
      ediff=omega-Aeig4
      endif
      if spdim20 == 5
      ediff=omega-Aeig5
      endif
      if spdim20 == 6
      ediff=omega-Aeig6
      endif
      if spdim20 == 7
      ediff=omega-Aeig7
      endif
      if spdim20 == 8
      ediff=omega-Aeig8
      endif
      if spdim20 == 9
      ediff=omega-Aeig9
      endif
      if spdim20 == 10
      ediff=omega-Aeig10
      endif
      if spdim20 == 11
      ediff=omega-Aeig11
      endif
      if spdim20 == 12
      ediff=omega-Aeig12
      endif
      if spdim20 == 13
      ediff=omega-Aeig13
      endif
      if spdim20 == 14
      ediff=omega-Aeig14
      endif
      if spdim20 == 15
      ediff=omega-Aeig15
      endif
      if spdim20 == 16
      ediff=omega-Aeig16
      endif
      if spdim20 == 17
      ediff=omega-Aeig17
      endif
      if spdim20 == 18
      ediff=omega-Aeig18
      endif
      if spdim20 == 19
      ediff=omega-Aeig19
      endif
      if spdim20 == 20
      ediff=omega-Aeig20
      endif
#
      if ediff < 0.0
      ediff*=-1.0
      endif
      if ediff < emax
      emax=ediff
      egvmax=icount
      endif
#
      enddo spdim20
#
      if egvmax == 1.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 2.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 3.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 4.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 5.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 6.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 7.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 8.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 9.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 10.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 11.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 12.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 13.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 14.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 15.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 16.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 17.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 18.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 19.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
      if egvmax == 20.0
#
      if lcount == 2.0
      call DRAWVECX2
      endif
      if lcount == 3.0
      call DRAWVECX3
      endif
      if lcount == 4.0
      call DRAWVECX4
      endif
      if lcount == 5.0
      call DRAWVECX5
      endif
      if lcount == 6.0
      call DRAWVECX6
      endif
      if lcount == 7.0
      call DRAWVECX7
      endif
      if lcount == 8.0
      call DRAWVECX8
      endif
      if lcount == 9.0
      call DRAWVECX9
      endif
      if lcount == 10.0
      call DRAWVECX10
      endif
      if lcount == 11.0
      call DRAWVECX11
      endif
      if lcount == 12.0
      call DRAWVECX12
      endif
      call AEIGCANCX
#
      endif
#
     enddo spdim2
#
     ENDPROC FNDVECS
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
     PROC GSCHMIDT
#
#
#------2 vectors -------------------------------
#
     etemp2_1=V2_1
     etemp2_2=V2_2
     etemp2_3=V2_3
     etemp2_4=V2_4
     etemp2_5=V2_5
     etemp2_6=V2_6
     etemp2_7=V2_7
     etemp2_8=V2_8
     etemp2_9=V2_9
     etemp2_10=V2_10
     etemp2_11=V2_11
     etemp2_12=V2_12
     etemp2_13=V2_13
     etemp2_14=V2_14
     etemp2_15=V2_15
     etemp2_16=V2_16
     etemp2_17=V2_17
     etemp2_18=V2_18
     etemp2_19=V2_19
     etemp2_20=V2_20
#
     sqr=0.0
     etemp=V1_1*etemp2_1
     sqr+=etemp
     etemp=V1_2*etemp2_2
     sqr+=etemp
     etemp=V1_3*etemp2_3
     sqr+=etemp
     etemp=V1_4*etemp2_4
     sqr+=etemp
     etemp=V1_5*etemp2_5
     sqr+=etemp
     etemp=V1_6*etemp2_6
     sqr+=etemp
     etemp=V1_7*etemp2_7
     sqr+=etemp
     etemp=V1_8*etemp2_8
     sqr+=etemp
     etemp=V1_9*etemp2_9
     sqr+=etemp
     etemp=V1_10*etemp2_10
     sqr+=etemp
     etemp=V1_11*etemp2_11
     sqr+=etemp
     etemp=V1_12*etemp2_12
     sqr+=etemp
     etemp=V1_13*etemp2_13
     sqr+=etemp
     etemp=V1_14*etemp2_14
     sqr+=etemp
     etemp=V1_15*etemp2_15
     sqr+=etemp
     etemp=V1_16*etemp2_16
     sqr+=etemp
     etemp=V1_17*etemp2_17
     sqr+=etemp
     etemp=V1_18*etemp2_18
     sqr+=etemp
     etemp=V1_19*etemp2_19
     sqr+=etemp
     etemp=V1_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V1_1*sqr
     Vtemp_2=V1_2*sqr
     Vtemp_3=V1_3*sqr
     Vtemp_4=V1_4*sqr
     Vtemp_5=V1_5*sqr
     Vtemp_6=V1_6*sqr
     Vtemp_7=V1_7*sqr
     Vtemp_8=V1_8*sqr
     Vtemp_9=V1_9*sqr
     Vtemp_10=V1_10*sqr
     Vtemp_11=V1_11*sqr
     Vtemp_12=V1_12*sqr
     Vtemp_13=V1_13*sqr
     Vtemp_14=V1_14*sqr
     Vtemp_15=V1_15*sqr
     Vtemp_16=V1_16*sqr
     Vtemp_17=V1_17*sqr
     Vtemp_18=V1_18*sqr
     Vtemp_19=V1_19*sqr
     Vtemp_20=V1_20*sqr
#
     V2_1+=Vtemp_1
     V2_2+=Vtemp_2
     V2_3+=Vtemp_3
     V2_4+=Vtemp_4
     V2_5+=Vtemp_5
     V2_6+=Vtemp_6
     V2_7+=Vtemp_7
     V2_8+=Vtemp_8
     V2_9+=Vtemp_9
     V2_10+=Vtemp_10
     V2_11+=Vtemp_11
     V2_12+=Vtemp_12
     V2_13+=Vtemp_13
     V2_14+=Vtemp_14
     V2_15+=Vtemp_15
     V2_16+=Vtemp_16
     V2_17+=Vtemp_17
     V2_18+=Vtemp_18
     V2_19+=Vtemp_19
     V2_20+=Vtemp_20
#
#
     Vtemp_1=V2_1
     Vtemp_2=V2_2
     Vtemp_3=V2_3
     Vtemp_4=V2_4
     Vtemp_5=V2_5
     Vtemp_6=V2_6
     Vtemp_7=V2_7
     Vtemp_8=V2_8
     Vtemp_9=V2_9
     Vtemp_10=V2_10
     Vtemp_11=V2_11
     Vtemp_12=V2_12
     Vtemp_13=V2_13
     vtemp_14=V2_14
     Vtemp_15=V2_15
     Vtemp_16=V2_16
     Vtemp_17=V2_17
     Vtemp_18=V2_18
     Vtemp_19=V2_19
     Vtemp_20=V2_20
#
     sqr=0.0
#
     etemp=V2_1*Vtemp_1
     sqr+=etemp
     etemp=V2_2*Vtemp_2
     sqr+=etemp
     etemp=V2_3*Vtemp_3
     sqr+=etemp
     etemp=V2_4*Vtemp_4
     sqr+=etemp
     etemp=V2_5*Vtemp_5
     sqr+=etemp
     etemp=V2_6*Vtemp_6
     sqr+=etemp
     etemp=V2_7*Vtemp_7
     sqr+=etemp
     etemp=V2_8*Vtemp_8
     sqr+=etemp
     etemp=V2_9*Vtemp_9
     sqr+=etemp
     etemp=V2_10*Vtemp_10
     sqr+=etemp
     etemp=V2_11*Vtemp_11
     sqr+=etemp
     etemp=V2_12*Vtemp_12
     sqr+=etemp
     etemp=V2_13*Vtemp_13
     sqr+=etemp
     etemp=V2_14*Vtemp_14
     sqr+=etemp
     etemp=V2_15*Vtemp_15
     sqr+=etemp
     etemp=V2_16*Vtemp_16
     sqr+=etemp
     etemp=V2_17*Vtemp_17
     sqr+=etemp
     etemp=V2_18*Vtemp_18
     sqr+=etemp
     etemp=V2_19*Vtemp_19
     sqr+=etemp
     etemp=V2_20*Vtemp_20
     sqr+=etemp
#
       exponent=0.5
       execute square_root sqr exponent
       sqr2=1.0/sqr
#
     V2_1*=sqr2
     V2_2*=sqr2
     V2_3*=sqr2
     V2_4*=sqr2
     V2_5*=sqr2
     V2_6*=sqr2
     V2_7*=sqr2
     V2_8*=sqr2
     V2_9*=sqr2
     V2_10*=sqr2
     V2_11*=sqr2
     V2_12*=sqr2
     V2_13*=sqr2
     V2_14*=sqr2
     V2_15*=sqr2
     V2_16*=sqr2
     V2_17*=sqr2
     V2_18*=sqr2
     V2_19*=sqr2
     V2_20*=sqr2
#
#------3 vectors -------------------------------
#
     etemp2_1=V3_1
     etemp2_2=V3_2
     etemp2_3=V3_3
     etemp2_4=V3_4
     etemp2_5=V3_5
     etemp2_6=V3_6
     etemp2_7=V3_7
     etemp2_8=V3_8
     etemp2_9=V3_9
     etemp2_10=V3_10
     etemp2_11=V3_11
     etemp2_12=V3_12
     etemp2_13=V3_13
     etemp2_14=V3_14
     etemp2_15=V3_15
     etemp2_16=V3_16
     etemp2_17=V3_17
     etemp2_18=V3_18
     etemp2_19=V3_19
     etemp2_20=V3_20
#
     sqr=0.0
     etemp=V1_1*etemp2_1
     sqr+=etemp
     etemp=V1_2*etemp2_2
     sqr+=etemp
     etemp=V1_3*etemp2_3
     sqr+=etemp
     etemp=V1_4*etemp2_4
     sqr+=etemp
     etemp=V1_5*etemp2_5
     sqr+=etemp
     etemp=V1_6*etemp2_6
     sqr+=etemp
     etemp=V1_7*etemp2_7
     sqr+=etemp
     etemp=V1_8*etemp2_8
     sqr+=etemp
     etemp=V1_9*etemp2_9
     sqr+=etemp
     etemp=V1_10*etemp2_10
     sqr+=etemp
     etemp=V1_11*etemp2_11
     sqr+=etemp
     etemp=V1_12*etemp2_12
     sqr+=etemp
     etemp=V1_13*etemp2_13
     sqr+=etemp
     etemp=V1_14*etemp2_14
     sqr+=etemp
     etemp=V1_15*etemp2_15
     sqr+=etemp
     etemp=V1_16*etemp2_16
     sqr+=etemp
     etemp=V1_17*etemp2_17
     sqr+=etemp
     etemp=V1_18*etemp2_18
     sqr+=etemp
     etemp=V1_19*etemp2_19
     sqr+=etemp
     etemp=V1_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V1_1*sqr
     Vtemp_2=V1_2*sqr
     Vtemp_3=V1_3*sqr
     Vtemp_4=V1_4*sqr
     Vtemp_5=V1_5*sqr
     Vtemp_6=V1_6*sqr
     Vtemp_7=V1_7*sqr
     Vtemp_8=V1_8*sqr
     Vtemp_9=V1_9*sqr
     Vtemp_10=V1_10*sqr
     Vtemp_11=V1_11*sqr
     Vtemp_12=V1_12*sqr
     Vtemp_13=V1_13*sqr
     Vtemp_14=V1_14*sqr
     Vtemp_15=V1_15*sqr
     Vtemp_16=V1_16*sqr
     Vtemp_17=V1_17*sqr
     Vtemp_18=V1_18*sqr
     Vtemp_19=V1_19*sqr
     Vtemp_20=V1_20*sqr
#
     V3_1+=Vtemp_1
     V3_2+=Vtemp_2
     V3_3+=Vtemp_3
     V3_4+=Vtemp_4
     V3_5+=Vtemp_5
     V3_6+=Vtemp_6
     V3_7+=Vtemp_7
     V3_8+=Vtemp_8
     V3_9+=Vtemp_9
     V3_10+=Vtemp_10
     V3_11+=Vtemp_11
     V3_12+=Vtemp_12
     V3_13+=Vtemp_13
     V3_14+=Vtemp_14
     V3_15+=Vtemp_15
     V3_16+=Vtemp_16
     V3_17+=Vtemp_17
     V3_18+=Vtemp_18
     V3_19+=Vtemp_19
     V3_20+=Vtemp_20
#
#
     etemp2_1=V3_1
     etemp2_2=V3_2
     etemp2_3=V3_3
     etemp2_4=V3_4
     etemp2_5=V3_5
     etemp2_6=V3_6
     etemp2_7=V3_7
     etemp2_8=V3_8
     etemp2_9=V3_9
     etemp2_10=V3_10
     etemp2_11=V3_11
     etemp2_12=V3_12
     etemp2_13=V3_13
     etemp2_14=V3_14
     etemp2_15=V3_15
     etemp2_16=V3_16
     etemp2_17=V3_17
     etemp2_18=V3_18
     etemp2_19=V3_19
     etemp2_20=V3_20
#
     sqr=0.0
     etemp=V2_1*etemp2_1
     sqr+=etemp
     etemp=V2_2*etemp2_2
     sqr+=etemp
     etemp=V2_3*etemp2_3
     sqr+=etemp
     etemp=V2_4*etemp2_4
     sqr+=etemp
     etemp=V2_5*etemp2_5
     sqr+=etemp
     etemp=V2_6*etemp2_6
     sqr+=etemp
     etemp=V2_7*etemp2_7
     sqr+=etemp
     etemp=V2_8*etemp2_8
     sqr+=etemp
     etemp=V2_9*etemp2_9
     sqr+=etemp
     etemp=V2_10*etemp2_10
     sqr+=etemp
     etemp=V2_11*etemp2_11
     sqr+=etemp
     etemp=V2_12*etemp2_12
     sqr+=etemp
     etemp=V2_13*etemp2_13
     sqr+=etemp
     etemp=V2_14*etemp2_14
     sqr+=etemp
     etemp=V2_15*etemp2_15
     sqr+=etemp
     etemp=V2_16*etemp2_16
     sqr+=etemp
     etemp=V2_17*etemp2_17
     sqr+=etemp
     etemp=V2_18*etemp2_18
     sqr+=etemp
     etemp=V2_19*etemp2_19
     sqr+=etemp
     etemp=V2_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V2_1*sqr
     Vtemp_2=V2_2*sqr
     Vtemp_3=V2_3*sqr
     Vtemp_4=V2_4*sqr
     Vtemp_5=V2_5*sqr
     Vtemp_6=V2_6*sqr
     Vtemp_7=V2_7*sqr
     Vtemp_8=V2_8*sqr
     Vtemp_9=V2_9*sqr
     Vtemp_10=V2_10*sqr
     Vtemp_11=V2_11*sqr
     Vtemp_12=V2_12*sqr
     Vtemp_13=V2_13*sqr
     Vtemp_14=V2_14*sqr
     Vtemp_15=V2_15*sqr
     Vtemp_16=V2_16*sqr
     Vtemp_17=V2_17*sqr
     Vtemp_18=V2_18*sqr
     Vtemp_19=V2_19*sqr
     Vtemp_20=V2_20*sqr
#
     V3_1+=Vtemp_1
     V3_2+=Vtemp_2
     V3_3+=Vtemp_3
     V3_4+=Vtemp_4
     V3_5+=Vtemp_5
     V3_6+=Vtemp_6
     V3_7+=Vtemp_7
     V3_8+=Vtemp_8
     V3_9+=Vtemp_9
     V3_10+=Vtemp_10
     V3_11+=Vtemp_11
     V3_12+=Vtemp_12
     V3_13+=Vtemp_13
     V3_14+=Vtemp_14
     V3_15+=Vtemp_15
     V3_16+=Vtemp_16
     V3_17+=Vtemp_17
     V3_18+=Vtemp_18
     V3_19+=Vtemp_19
     V3_20+=Vtemp_20
#
#
     Vtemp_1=V3_1
     Vtemp_2=V3_2
     Vtemp_3=V3_3
     Vtemp_4=V3_4
     Vtemp_5=V3_5
     Vtemp_6=V3_6
     Vtemp_7=V3_7
     Vtemp_8=V3_8
     Vtemp_9=V3_9
     Vtemp_10=V3_10
     Vtemp_11=V3_11
     Vtemp_12=V3_12
     Vtemp_13=V3_13
     Vtemp_14=V3_14
     Vtemp_15=V3_15
     Vtemp_16=V3_16
     Vtemp_17=V3_17
     Vtemp_18=V3_18
     Vtemp_19=V3_19
     Vtemp_20=V3_20
#
     sqr=0.0
#
     etemp=V3_1*Vtemp_1
     sqr+=etemp
     etemp=V3_2*Vtemp_2
     sqr+=etemp
     etemp=V3_3*Vtemp_3
     sqr+=etemp
     etemp=V3_4*Vtemp_4
     sqr+=etemp
     etemp=V3_5*Vtemp_5
     sqr+=etemp
     etemp=V3_6*Vtemp_6
     sqr+=etemp
     etemp=V3_7*Vtemp_7
     sqr+=etemp
     etemp=V3_8*Vtemp_8
     sqr+=etemp
     etemp=V3_9*Vtemp_9
     sqr+=etemp
     etemp=V3_10*Vtemp_10
     sqr+=etemp
     etemp=V3_11*Vtemp_11
     sqr+=etemp
     etemp=V3_12*Vtemp_12
     sqr+=etemp
     etemp=V3_13*Vtemp_13
     sqr+=etemp
     etemp=V3_14*Vtemp_14
     sqr+=etemp
     etemp=V3_15*Vtemp_15
     sqr+=etemp
     etemp=V3_16*Vtemp_16
     sqr+=etemp
     etemp=V3_17*Vtemp_17
     sqr+=etemp
     etemp=V3_18*Vtemp_18
     sqr+=etemp
     etemp=V3_19*Vtemp_19
     sqr+=etemp
     etemp=V3_20*Vtemp_20
     sqr+=etemp
#
       exponent=0.5
       execute square_root sqr exponent
       sqr2=1.0/sqr
#
     V3_1*=sqr2
     V3_2*=sqr2
     V3_3*=sqr2
     V3_4*=sqr2
     V3_5*=sqr2
     V3_6*=sqr2
     V3_7*=sqr2
     V3_8*=sqr2
     V3_9*=sqr2
     V3_10*=sqr2
     V3_11*=sqr2
     V3_12*=sqr2
     V3_13*=sqr2
     V3_14*=sqr2
     V3_15*=sqr2
     V3_16*=sqr2
     V3_17*=sqr2
     V3_18*=sqr2
     V3_19*=sqr2
     V3_20*=sqr2
#
#------4 vectors -------------------------------
#
     etemp2_1=V4_1
     etemp2_2=V4_2
     etemp2_3=V4_3
     etemp2_4=V4_4
     etemp2_5=V4_5
     etemp2_6=V4_6
     etemp2_7=V4_7
     etemp2_8=V4_8
     etemp2_9=V4_9
     etemp2_10=V4_10
     etemp2_11=V4_11
     etemp2_12=V4_12
     etemp2_13=V4_13
     etemp2_14=V4_14
     etemp2_15=V4_15
     etemp2_16=V4_16
     etemp2_17=V4_17
     etemp2_18=V4_18
     etemp2_19=V4_19
     etemp2_20=V4_20
#
     sqr=0.0
     etemp=V1_1*etemp2_1
     sqr+=etemp
     etemp=V1_2*etemp2_2
     sqr+=etemp
     etemp=V1_3*etemp2_3
     sqr+=etemp
     etemp=V1_4*etemp2_4
     sqr+=etemp
     etemp=V1_5*etemp2_5
     sqr+=etemp
     etemp=V1_6*etemp2_6
     sqr+=etemp
     etemp=V1_7*etemp2_7
     sqr+=etemp
     etemp=V1_8*etemp2_8
     sqr+=etemp
     etemp=V1_9*etemp2_9
     sqr+=etemp
     etemp=V1_10*etemp2_10
     sqr+=etemp
     etemp=V1_11*etemp2_11
     sqr+=etemp
     etemp=V1_12*etemp2_12
     sqr+=etemp
     etemp=V1_13*etemp2_13
     sqr+=etemp
     etemp=V1_14*etemp2_14
     sqr+=etemp
     etemp=V1_15*etemp2_15
     sqr+=etemp
     etemp=V1_16*etemp2_16
     sqr+=etemp
     etemp=V1_17*etemp2_17
     sqr+=etemp
     etemp=V1_18*etemp2_18
     sqr+=etemp
     etemp=V1_19*etemp2_19
     sqr+=etemp
     etemp=V1_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V1_1*sqr
     Vtemp_2=V1_2*sqr
     Vtemp_3=V1_3*sqr
     Vtemp_4=V1_4*sqr
     Vtemp_5=V1_5*sqr
     Vtemp_6=V1_6*sqr
     Vtemp_7=V1_7*sqr
     Vtemp_8=V1_8*sqr
     Vtemp_9=V1_9*sqr
     Vtemp_10=V1_10*sqr
     Vtemp_11=V1_11*sqr
     Vtemp_12=V1_12*sqr
     Vtemp_13=V1_13*sqr
     Vtemp_14=V1_14*sqr
     Vtemp_15=V1_15*sqr
     Vtemp_16=V1_16*sqr
     Vtemp_17=V1_17*sqr
     Vtemp_18=V1_18*sqr
     Vtemp_19=V1_19*sqr
     Vtemp_20=V1_20*sqr
#
     V4_1+=Vtemp_1
     V4_2+=Vtemp_2
     V4_3+=Vtemp_3
     V4_4+=Vtemp_4
     V4_5+=Vtemp_5
     V4_6+=Vtemp_6
     V4_7+=Vtemp_7
     V4_8+=Vtemp_8
     V4_9+=Vtemp_9
     V4_10+=Vtemp_10
     V4_11+=Vtemp_11
     V4_12+=Vtemp_12
     V4_13+=Vtemp_13
     V4_14+=Vtemp_14
     V4_15+=Vtemp_15
     V4_16+=Vtemp_16
     V4_17+=Vtemp_17
     V4_18+=Vtemp_18
     V4_19+=Vtemp_19
     V4_20+=Vtemp_20
#
#
     etemp2_1=V4_1
     etemp2_2=V4_2
     etemp2_3=V4_3
     etemp2_4=V4_4
     etemp2_5=V4_5
     etemp2_6=V4_6
     etemp2_7=V4_7
     etemp2_8=V4_8
     etemp2_9=V4_9
     etemp2_10=V4_10
     etemp2_11=V4_11
     etemp2_12=V4_12
     etemp2_13=V4_13
     etemp2_14=V4_14
     etemp2_15=V4_15
     etemp2_16=V4_16
     etemp2_17=V4_17
     etemp2_18=V4_18
     etemp2_19=V4_19
     etemp2_20=V4_20
#
     sqr=0.0
     etemp=V2_1*etemp2_1
     sqr+=etemp
     etemp=V2_2*etemp2_2
     sqr+=etemp
     etemp=V2_3*etemp2_3
     sqr+=etemp
     etemp=V2_4*etemp2_4
     sqr+=etemp
     etemp=V2_5*etemp2_5
     sqr+=etemp
     etemp=V2_6*etemp2_6
     sqr+=etemp
     etemp=V2_7*etemp2_7
     sqr+=etemp
     etemp=V2_8*etemp2_8
     sqr+=etemp
     etemp=V2_9*etemp2_9
     sqr+=etemp
     etemp=V2_10*etemp2_10
     sqr+=etemp
     etemp=V2_11*etemp2_11
     sqr+=etemp
     etemp=V2_12*etemp2_12
     sqr+=etemp
     etemp=V2_13*etemp2_13
     sqr+=etemp
     etemp=V2_14*etemp2_14
     sqr+=etemp
     etemp=V2_15*etemp2_15
     sqr+=etemp
     etemp=V2_16*etemp2_16
     sqr+=etemp
     etemp=V2_17*etemp2_17
     sqr+=etemp
     etemp=V2_18*etemp2_18
     sqr+=etemp
     etemp=V2_19*etemp2_19
     sqr+=etemp
     etemp=V2_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V2_1*sqr
     Vtemp_2=V2_2*sqr
     Vtemp_3=V2_3*sqr
     Vtemp_4=V2_4*sqr
     Vtemp_5=V2_5*sqr
     Vtemp_6=V2_6*sqr
     Vtemp_7=V2_7*sqr
     Vtemp_8=V2_8*sqr
     Vtemp_9=V2_9*sqr
     Vtemp_10=V2_10*sqr
     Vtemp_11=V2_11*sqr
     Vtemp_12=V2_12*sqr
     Vtemp_13=V2_13*sqr
     Vtemp_14=V2_14*sqr
     Vtemp_15=V2_15*sqr
     Vtemp_16=V2_16*sqr
     Vtemp_17=V2_17*sqr
     Vtemp_18=V2_18*sqr
     Vtemp_19=V2_19*sqr
     Vtemp_20=V2_20*sqr
#
     V4_1+=Vtemp_1
     V4_2+=Vtemp_2
     V4_3+=Vtemp_3
     V4_4+=Vtemp_4
     V4_5+=Vtemp_5
     V4_6+=Vtemp_6
     V4_7+=Vtemp_7
     V4_8+=Vtemp_8
     V4_9+=Vtemp_9
     V4_10+=Vtemp_10
     V4_11+=Vtemp_11
     V4_12+=Vtemp_12
     V4_13+=Vtemp_13
     V4_14+=Vtemp_14
     V4_15+=Vtemp_15
     V4_16+=Vtemp_16
     V4_17+=Vtemp_17
     V4_18+=Vtemp_18
     V4_19+=Vtemp_19
     V4_20+=Vtemp_20
#
#
     etemp2_1=V4_1
     etemp2_2=V4_2
     etemp2_3=V4_3
     etemp2_4=V4_4
     etemp2_5=V4_5
     etemp2_6=V4_6
     etemp2_7=V4_7
     etemp2_8=V4_8
     etemp2_9=V4_9
     etemp2_10=V4_10
     etemp2_11=V4_11
     etemp2_12=V4_12
     etemp2_13=V4_13
     etemp2_14=V4_14
     etemp2_15=V4_15
     etemp2_16=V4_16
     etemp2_17=V4_17
     etemp2_18=V4_18
     etemp2_19=V4_19
     etemp2_20=V4_20
#
     sqr=0.0
     etemp=V3_1*etemp2_1
     sqr+=etemp
     etemp=V3_2*etemp2_2
     sqr+=etemp
     etemp=V3_3*etemp2_3
     sqr+=etemp
     etemp=V3_4*etemp2_4
     sqr+=etemp
     etemp=V3_5*etemp2_5
     sqr+=etemp
     etemp=V3_6*etemp2_6
     sqr+=etemp
     etemp=V3_7*etemp2_7
     sqr+=etemp
     etemp=V3_8*etemp2_8
     sqr+=etemp
     etemp=V3_9*etemp2_9
     sqr+=etemp
     etemp=V3_10*etemp2_10
     sqr+=etemp
     etemp=V3_11*etemp2_11
     sqr+=etemp
     etemp=V3_12*etemp2_12
     sqr+=etemp
     etemp=V3_13*etemp2_13
     sqr+=etemp
     etemp=V3_14*etemp2_14
     sqr+=etemp
     etemp=V3_15*etemp2_15
     sqr+=etemp
     etemp=V3_16*etemp2_16
     sqr+=etemp
     etemp=V3_17*etemp2_17
     sqr+=etemp
     etemp=V3_18*etemp2_18
     sqr+=etemp
     etemp=V3_19*etemp2_19
     sqr+=etemp
     etemp=V3_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V3_1*sqr
     Vtemp_2=V3_2*sqr
     Vtemp_3=V3_3*sqr
     Vtemp_4=V3_4*sqr
     Vtemp_5=V3_5*sqr
     Vtemp_6=V3_6*sqr
     Vtemp_7=V3_7*sqr
     Vtemp_8=V3_8*sqr
     Vtemp_9=V3_9*sqr
     Vtemp_10=V3_10*sqr
     Vtemp_11=V3_11*sqr
     Vtemp_12=V3_12*sqr
     Vtemp_13=V3_13*sqr
     Vtemp_14=V3_14*sqr
     Vtemp_15=V3_15*sqr
     Vtemp_16=V3_16*sqr
     Vtemp_17=V3_17*sqr
     Vtemp_18=V3_18*sqr
     Vtemp_19=V3_19*sqr
     Vtemp_20=V3_20*sqr
#
     V4_1+=Vtemp_1
     V4_2+=Vtemp_2
     V4_3+=Vtemp_3
     V4_4+=Vtemp_4
     V4_5+=Vtemp_5
     V4_6+=Vtemp_6
     V4_7+=Vtemp_7
     V4_8+=Vtemp_8
     V4_9+=Vtemp_9
     V4_10+=Vtemp_10
     V4_11+=Vtemp_11
     V4_12+=Vtemp_12
     V4_13+=Vtemp_13
     V4_14+=Vtemp_14
     V4_15+=Vtemp_15
     V4_16+=Vtemp_16
     V4_17+=Vtemp_17
     V4_18+=Vtemp_18
     V4_19+=Vtemp_19
     V4_20+=Vtemp_20
#
#
     Vtemp_1=V4_1
     Vtemp_2=V4_2
     Vtemp_3=V4_3
     Vtemp_4=V4_4
     Vtemp_5=V4_5
     Vtemp_6=V4_6
     Vtemp_7=V4_7
     Vtemp_8=V4_8
     Vtemp_9=V4_9
     Vtemp_10=V4_10
     Vtemp_11=V4_11
     Vtemp_12=V4_12
     Vtemp_13=V4_13
     Vtemp_14=V4_14
     Vtemp_15=V4_15
     Vtemp_16=V4_16
     Vtemp_17=V4_17
     Vtemp_18=V4_18
     Vtemp_19=V4_19
     Vtemp_20=V4_20
#
     sqr=0.0
#
     etemp=V4_1*Vtemp_1
     sqr+=etemp
     etemp=V4_2*Vtemp_2
     sqr+=etemp
     etemp=V4_3*Vtemp_3
     sqr+=etemp
     etemp=V4_4*Vtemp_4
     sqr+=etemp
     etemp=V4_5*Vtemp_5
     sqr+=etemp
     etemp=V4_6*Vtemp_6
     sqr+=etemp
     etemp=V4_7*Vtemp_7
     sqr+=etemp
     etemp=V4_8*Vtemp_8
     sqr+=etemp
     etemp=V4_9*Vtemp_9
     sqr+=etemp
     etemp=V4_10*Vtemp_10
     sqr+=etemp
     etemp=V4_11*Vtemp_11
     sqr+=etemp
     etemp=V4_12*Vtemp_12
     sqr+=etemp
     etemp=V4_13*Vtemp_13
     sqr+=etemp
     etemp=V4_14*Vtemp_14
     sqr+=etemp
     etemp=V4_15*Vtemp_15
     sqr+=etemp
     etemp=V4_16*Vtemp_16
     sqr+=etemp
     etemp=V4_17*Vtemp_17
     sqr+=etemp
     etemp=V4_18*Vtemp_18
     sqr+=etemp
     etemp=V4_19*Vtemp_19
     sqr+=etemp
     etemp=V4_20*Vtemp_20
     sqr+=etemp
#
       exponent=0.5
       execute square_root sqr exponent
       sqr2=1.0/sqr
#
     V4_1*=sqr2
     V4_2*=sqr2
     V4_3*=sqr2
     V4_4*=sqr2
     V4_5*=sqr2
     V4_6*=sqr2
     V4_7*=sqr2
     V4_8*=sqr2
     V4_9*=sqr2
     V4_10*=sqr2
     V4_11*=sqr2
     V4_12*=sqr2
     V4_13*=sqr2
     V4_14*=sqr2
     V4_15*=sqr2
     V4_16*=sqr2
     V4_17*=sqr2
     V4_18*=sqr2
     V4_19*=sqr2
     V4_20*=sqr2
#
#------5 vectors -------------------------------
#
     etemp2_1=V5_1
     etemp2_2=V5_2
     etemp2_3=V5_3
     etemp2_4=V5_4
     etemp2_5=V5_5
     etemp2_6=V5_6
     etemp2_7=V5_7
     etemp2_8=V5_8
     etemp2_9=V5_9
     etemp2_10=V5_10
     etemp2_11=V5_11
     etemp2_12=V5_12
     etemp2_13=V5_13
     etemp2_14=V5_14
     etemp2_15=V5_15
     etemp2_16=V5_16
     etemp2_17=V5_17
     etemp2_18=V5_18
     etemp2_19=V5_19
     etemp2_20=V5_20
#
     sqr=0.0
     etemp=V1_1*etemp2_1
     sqr+=etemp
     etemp=V1_2*etemp2_2
     sqr+=etemp
     etemp=V1_3*etemp2_3
     sqr+=etemp
     etemp=V1_4*etemp2_4
     sqr+=etemp
     etemp=V1_5*etemp2_5
     sqr+=etemp
     etemp=V1_6*etemp2_6
     sqr+=etemp
     etemp=V1_7*etemp2_7
     sqr+=etemp
     etemp=V1_8*etemp2_8
     sqr+=etemp
     etemp=V1_9*etemp2_9
     sqr+=etemp
     etemp=V1_10*etemp2_10
     sqr+=etemp
     etemp=V1_11*etemp2_11
     sqr+=etemp
     etemp=V1_12*etemp2_12
     sqr+=etemp
     etemp=V1_13*etemp2_13
     sqr+=etemp
     etemp=V1_14*etemp2_14
     sqr+=etemp
     etemp=V1_15*etemp2_15
     sqr+=etemp
     etemp=V1_16*etemp2_16
     sqr+=etemp
     etemp=V1_17*etemp2_17
     sqr+=etemp
     etemp=V1_18*etemp2_18
     sqr+=etemp
     etemp=V1_19*etemp2_19
     sqr+=etemp
     etemp=V1_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V1_1*sqr
     Vtemp_2=V1_2*sqr
     Vtemp_3=V1_3*sqr
     Vtemp_4=V1_4*sqr
     Vtemp_5=V1_5*sqr
     Vtemp_6=V1_6*sqr
     Vtemp_7=V1_7*sqr
     Vtemp_8=V1_8*sqr
     Vtemp_9=V1_9*sqr
     Vtemp_10=V1_10*sqr
     Vtemp_11=V1_11*sqr
     Vtemp_12=V1_12*sqr
     Vtemp_13=V1_13*sqr
     Vtemp_14=V1_14*sqr
     Vtemp_15=V1_15*sqr
     Vtemp_16=V1_16*sqr
     Vtemp_17=V1_17*sqr
     Vtemp_18=V1_18*sqr
     Vtemp_19=V1_19*sqr
     Vtemp_20=V1_20*sqr
#
     V5_1+=Vtemp_1
     V5_2+=Vtemp_2
     V5_3+=Vtemp_3
     V5_4+=Vtemp_4
     V5_5+=Vtemp_5
     V5_6+=Vtemp_6
     V5_7+=Vtemp_7
     V5_8+=Vtemp_8
     V5_9+=Vtemp_9
     V5_10+=Vtemp_10
     V5_11+=Vtemp_11
     V5_12+=Vtemp_12
     V5_13+=Vtemp_13
     V5_14+=Vtemp_14
     V5_15+=Vtemp_15
     V5_16+=Vtemp_16
     V5_17+=Vtemp_17
     V5_18+=Vtemp_18
     V5_19+=Vtemp_19
     V5_20+=Vtemp_20
#
#
     etemp2_1=V5_1
     etemp2_2=V5_2
     etemp2_3=V5_3
     etemp2_4=V5_4
     etemp2_5=V5_5
     etemp2_6=V5_6
     etemp2_7=V5_7
     etemp2_8=V5_8
     etemp2_9=V5_9
     etemp2_10=V5_10
     etemp2_11=V5_11
     etemp2_12=V5_12
     etemp2_13=V5_13
     etemp2_14=V5_14
     etemp2_15=V5_15
     etemp2_16=V5_16
     etemp2_17=V5_17
     etemp2_18=V5_18
     etemp2_19=V5_19
     etemp2_20=V5_20
#
     sqr=0.0
     etemp=V2_1*etemp2_1
     sqr+=etemp
     etemp=V2_2*etemp2_2
     sqr+=etemp
     etemp=V2_3*etemp2_3
     sqr+=etemp
     etemp=V2_4*etemp2_4
     sqr+=etemp
     etemp=V2_5*etemp2_5
     sqr+=etemp
     etemp=V2_6*etemp2_6
     sqr+=etemp
     etemp=V2_7*etemp2_7
     sqr+=etemp
     etemp=V2_8*etemp2_8
     sqr+=etemp
     etemp=V2_9*etemp2_9
     sqr+=etemp
     etemp=V2_10*etemp2_10
     sqr+=etemp
     etemp=V2_11*etemp2_11
     sqr+=etemp
     etemp=V2_12*etemp2_12
     sqr+=etemp
     etemp=V2_13*etemp2_13
     sqr+=etemp
     etemp=V2_14*etemp2_14
     sqr+=etemp
     etemp=V2_15*etemp2_15
     sqr+=etemp
     etemp=V2_16*etemp2_16
     sqr+=etemp
     etemp=V2_17*etemp2_17
     sqr+=etemp
     etemp=V2_18*etemp2_18
     sqr+=etemp
     etemp=V2_19*etemp2_19
     sqr+=etemp
     etemp=V2_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V2_1*sqr
     Vtemp_2=V2_2*sqr
     Vtemp_3=V2_3*sqr
     Vtemp_4=V2_4*sqr
     Vtemp_5=V2_5*sqr
     Vtemp_6=V2_6*sqr
     Vtemp_7=V2_7*sqr
     Vtemp_8=V2_8*sqr
     Vtemp_9=V2_9*sqr
     Vtemp_10=V2_10*sqr
     Vtemp_11=V2_11*sqr
     Vtemp_12=V2_12*sqr
     Vtemp_13=V2_13*sqr
     Vtemp_14=V2_14*sqr
     Vtemp_15=V2_15*sqr
     Vtemp_16=V2_16*sqr
     Vtemp_17=V2_17*sqr
     Vtemp_18=V2_18*sqr
     Vtemp_19=V2_19*sqr
     Vtemp_20=V2_20*sqr
#
     V5_1+=Vtemp_1
     V5_2+=Vtemp_2
     V5_3+=Vtemp_3
     V5_4+=Vtemp_4
     V5_5+=Vtemp_5
     V5_6+=Vtemp_6
     V5_7+=Vtemp_7
     V5_8+=Vtemp_8
     V5_9+=Vtemp_9
     V5_10+=Vtemp_10
     V5_11+=Vtemp_11
     V5_12+=Vtemp_12
     V5_13+=Vtemp_13
     V5_14+=Vtemp_14
     V5_15+=Vtemp_15
     V5_16+=Vtemp_16
     V5_17+=Vtemp_17
     V5_18+=Vtemp_18
     V5_19+=Vtemp_19
     V5_20+=Vtemp_20
#
#
     etemp2_1=V5_1
     etemp2_2=V5_2
     etemp2_3=V5_3
     etemp2_4=V5_4
     etemp2_5=V5_5
     etemp2_6=V5_6
     etemp2_7=V5_7
     etemp2_8=V5_8
     etemp2_9=V5_9
     etemp2_10=V5_10
     etemp2_11=V5_11
     etemp2_12=V5_12
     etemp2_13=V5_13
     etemp2_14=V5_14
     etemp2_15=V5_15
     etemp2_16=V5_16
     etemp2_17=V5_17
     etemp2_18=V5_18
     etemp2_19=V5_19
     etemp2_20=V5_20
#
     sqr=0.0
     etemp=V3_1*etemp2_1
     sqr+=etemp
     etemp=V3_2*etemp2_2
     sqr+=etemp
     etemp=V3_3*etemp2_3
     sqr+=etemp
     etemp=V3_4*etemp2_4
     sqr+=etemp
     etemp=V3_5*etemp2_5
     sqr+=etemp
     etemp=V3_6*etemp2_6
     sqr+=etemp
     etemp=V3_7*etemp2_7
     sqr+=etemp
     etemp=V3_8*etemp2_8
     sqr+=etemp
     etemp=V3_9*etemp2_9
     sqr+=etemp
     etemp=V3_10*etemp2_10
     sqr+=etemp
     etemp=V3_11*etemp2_11
     sqr+=etemp
     etemp=V3_12*etemp2_12
     sqr+=etemp
     etemp=V3_13*etemp2_13
     sqr+=etemp
     etemp=V3_14*etemp2_14
     sqr+=etemp
     etemp=V3_15*etemp2_15
     sqr+=etemp
     etemp=V3_16*etemp2_16
     sqr+=etemp
     etemp=V3_17*etemp2_17
     sqr+=etemp
     etemp=V3_18*etemp2_18
     sqr+=etemp
     etemp=V3_19*etemp2_19
     sqr+=etemp
     etemp=V3_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V3_1*sqr
     Vtemp_2=V3_2*sqr
     Vtemp_3=V3_3*sqr
     Vtemp_4=V3_4*sqr
     Vtemp_5=V3_5*sqr
     Vtemp_6=V3_6*sqr
     Vtemp_7=V3_7*sqr
     Vtemp_8=V3_8*sqr
     Vtemp_9=V3_9*sqr
     Vtemp_10=V3_10*sqr
     Vtemp_11=V3_11*sqr
     Vtemp_12=V3_12*sqr
     Vtemp_13=V3_13*sqr
     Vtemp_14=V3_14*sqr
     Vtemp_15=V3_15*sqr
     Vtemp_16=V3_16*sqr
     Vtemp_17=V3_17*sqr
     Vtemp_18=V3_18*sqr
     Vtemp_19=V3_19*sqr
     Vtemp_20=V3_20*sqr
#
     V5_1+=Vtemp_1
     V5_2+=Vtemp_2
     V5_3+=Vtemp_3
     V5_4+=Vtemp_4
     V5_5+=Vtemp_5
     V5_6+=Vtemp_6
     V5_7+=Vtemp_7
     V5_8+=Vtemp_8
     V5_9+=Vtemp_9
     V5_10+=Vtemp_10
     V5_11+=Vtemp_11
     V5_12+=Vtemp_12
     V5_13+=Vtemp_13
     V5_14+=Vtemp_14
     V5_15+=Vtemp_15
     V5_16+=Vtemp_16
     V5_17+=Vtemp_17
     V5_18+=Vtemp_18
     V5_19+=Vtemp_19
     V5_20+=Vtemp_20
#
#
     etemp2_1=V5_1
     etemp2_2=V5_2
     etemp2_3=V5_3
     etemp2_4=V5_4
     etemp2_5=V5_5
     etemp2_6=V5_6
     etemp2_7=V5_7
     etemp2_8=V5_8
     etemp2_9=V5_9
     etemp2_10=V5_10
     etemp2_11=V5_11
     etemp2_12=V5_12
     etemp2_13=V5_13
     etemp2_14=V5_14
     etemp2_15=V5_15
     etemp2_16=V5_16
     etemp2_17=V5_17
     etemp2_18=V5_18
     etemp2_19=V5_19
     etemp2_20=V5_20
#
     sqr=0.0
     etemp=V4_1*etemp2_1
     sqr+=etemp
     etemp=V4_2*etemp2_2
     sqr+=etemp
     etemp=V4_3*etemp2_3
     sqr+=etemp
     etemp=V4_4*etemp2_4
     sqr+=etemp
     etemp=V4_5*etemp2_5
     sqr+=etemp
     etemp=V4_6*etemp2_6
     sqr+=etemp
     etemp=V4_7*etemp2_7
     sqr+=etemp
     etemp=V4_8*etemp2_8
     sqr+=etemp
     etemp=V4_9*etemp2_9
     sqr+=etemp
     etemp=V4_10*etemp2_10
     sqr+=etemp
     etemp=V4_11*etemp2_11
     sqr+=etemp
     etemp=V4_12*etemp2_12
     sqr+=etemp
     etemp=V4_13*etemp2_13
     sqr+=etemp
     etemp=V4_14*etemp2_14
     sqr+=etemp
     etemp=V4_15*etemp2_15
     sqr+=etemp
     etemp=V4_16*etemp2_16
     sqr+=etemp
     etemp=V4_17*etemp2_17
     sqr+=etemp
     etemp=V4_18*etemp2_18
     sqr+=etemp
     etemp=V4_19*etemp2_19
     sqr+=etemp
     etemp=V4_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V4_1*sqr
     Vtemp_2=V4_2*sqr
     Vtemp_3=V4_3*sqr
     Vtemp_4=V4_4*sqr
     Vtemp_5=V4_5*sqr
     Vtemp_6=V4_6*sqr
     Vtemp_7=V4_7*sqr
     Vtemp_8=V4_8*sqr
     Vtemp_9=V4_9*sqr
     Vtemp_10=V4_10*sqr
     Vtemp_11=V4_11*sqr
     Vtemp_12=V4_12*sqr
     Vtemp_13=V4_13*sqr
     Vtemp_14=V4_14*sqr
     Vtemp_15=V4_15*sqr
     Vtemp_16=V4_16*sqr
     Vtemp_17=V4_17*sqr
     Vtemp_18=V4_18*sqr
     Vtemp_19=V4_19*sqr
     Vtemp_20=V4_20*sqr
#
     V5_1+=Vtemp_1
     V5_2+=Vtemp_2
     V5_3+=Vtemp_3
     V5_4+=Vtemp_4
     V5_5+=Vtemp_5
     V5_6+=Vtemp_6
     V5_7+=Vtemp_7
     V5_8+=Vtemp_8
     V5_9+=Vtemp_9
     V5_10+=Vtemp_10
     V5_11+=Vtemp_11
     V5_12+=Vtemp_12
     V5_13+=Vtemp_13
     V5_14+=Vtemp_14
     V5_15+=Vtemp_15
     V5_16+=Vtemp_16
     V5_17+=Vtemp_17
     V5_18+=Vtemp_18
     V5_19+=Vtemp_19
     V5_20+=Vtemp_20
#
#
     Vtemp_1=V5_1
     Vtemp_2=V5_2
     Vtemp_3=V5_3
     Vtemp_4=V5_4
     Vtemp_5=V5_5
     Vtemp_6=V5_6
     Vtemp_7=V5_7
     Vtemp_8=V5_8
     Vtemp_9=V5_9
     Vtemp_10=V5_10
     Vtemp_11=V5_11
     Vtemp_12=V5_12
     Vtemp_13=V5_13
     Vtemp_14=V5_14
     Vtemp_15=V5_15
     Vtemp_16=V5_16
     Vtemp_17=V5_17
     Vtemp_18=V5_18
     Vtemp_19=V5_19
     Vtemp_20=V5_20
#
     sqr=0.0
#
     etemp=V5_1*Vtemp_1
     sqr+=etemp
     etemp=V5_2*Vtemp_2
     sqr+=etemp
     etemp=V5_3*Vtemp_3
     sqr+=etemp
     etemp=V5_4*Vtemp_4
     sqr+=etemp
     etemp=V5_5*Vtemp_5
     sqr+=etemp
     etemp=V5_6*Vtemp_6
     sqr+=etemp
     etemp=V5_7*Vtemp_7
     sqr+=etemp
     etemp=V5_8*Vtemp_8
     sqr+=etemp
     etemp=V5_9*Vtemp_9
     sqr+=etemp
     etemp=V5_10*Vtemp_10
     sqr+=etemp
     etemp=V5_11*Vtemp_11
     sqr+=etemp
     etemp=V5_12*Vtemp_12
     sqr+=etemp
     etemp=V5_13*Vtemp_13
     sqr+=etemp
     etemp=V5_14*Vtemp_14
     sqr+=etemp
     etemp=V5_15*Vtemp_15
     sqr+=etemp
     etemp=V5_16*Vtemp_16
     sqr+=etemp
     etemp=V5_17*Vtemp_17
     sqr+=etemp
     etemp=V5_18*Vtemp_18
     sqr+=etemp
     etemp=V5_19*Vtemp_19
     sqr+=etemp
     etemp=V5_20*Vtemp_20
     sqr+=etemp
#
       exponent=0.5
       execute square_root sqr exponent
       sqr2=1.0/sqr
#
     V5_1*=sqr2
     V5_2*=sqr2
     V5_3*=sqr2
     V5_4*=sqr2
     V5_5*=sqr2
     V5_6*=sqr2
     V5_7*=sqr2
     V5_8*=sqr2
     V5_9*=sqr2
     V5_10*=sqr2
     V5_11*=sqr2
     V5_12*=sqr2
     V5_13*=sqr2
     V5_14*=sqr2
     V5_15*=sqr2
     V5_16*=sqr2
     V5_17*=sqr2
     V5_18*=sqr2
     V5_19*=sqr2
     V5_20*=sqr2
#
#------6 vectors -------------------------------
#
     etemp2_1=V6_1
     etemp2_2=V6_2
     etemp2_3=V6_3
     etemp2_4=V6_4
     etemp2_5=V6_5
     etemp2_6=V6_6
     etemp2_7=V6_7
     etemp2_8=V6_8
     etemp2_9=V6_9
     etemp2_10=V6_10
     etemp2_11=V6_11
     etemp2_12=V6_12
     etemp2_13=V6_13
     etemp2_14=V6_14
     etemp2_15=V6_15
     etemp2_16=V6_16
     etemp2_17=V6_17
     etemp2_18=V6_18
     etemp2_19=V6_19
     etemp2_20=V6_20
#
     sqr=0.0
     etemp=V1_1*etemp2_1
     sqr+=etemp
     etemp=V1_2*etemp2_2
     sqr+=etemp
     etemp=V1_3*etemp2_3
     sqr+=etemp
     etemp=V1_4*etemp2_4
     sqr+=etemp
     etemp=V1_5*etemp2_5
     sqr+=etemp
     etemp=V1_6*etemp2_6
     sqr+=etemp
     etemp=V1_7*etemp2_7
     sqr+=etemp
     etemp=V1_8*etemp2_8
     sqr+=etemp
     etemp=V1_9*etemp2_9
     sqr+=etemp
     etemp=V1_10*etemp2_10
     sqr+=etemp
     etemp=V1_11*etemp2_11
     sqr+=etemp
     etemp=V1_12*etemp2_12
     sqr+=etemp
     etemp=V1_13*etemp2_13
     sqr+=etemp
     etemp=V1_14*etemp2_14
     sqr+=etemp
     etemp=V1_15*etemp2_15
     sqr+=etemp
     etemp=V1_16*etemp2_16
     sqr+=etemp
     etemp=V1_17*etemp2_17
     sqr+=etemp
     etemp=V1_18*etemp2_18
     sqr+=etemp
     etemp=V1_19*etemp2_19
     sqr+=etemp
     etemp=V1_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V1_1*sqr
     Vtemp_2=V1_2*sqr
     Vtemp_3=V1_3*sqr
     Vtemp_4=V1_4*sqr
     Vtemp_5=V1_5*sqr
     Vtemp_6=V1_6*sqr
     Vtemp_7=V1_7*sqr
     Vtemp_8=V1_8*sqr
     Vtemp_9=V1_9*sqr
     Vtemp_10=V1_10*sqr
     Vtemp_11=V1_11*sqr
     Vtemp_12=V1_12*sqr
     Vtemp_13=V1_13*sqr
     Vtemp_14=V1_14*sqr
     Vtemp_15=V1_15*sqr
     Vtemp_16=V1_16*sqr
     Vtemp_17=V1_17*sqr
     Vtemp_18=V1_18*sqr
     Vtemp_19=V1_19*sqr
     Vtemp_20=V1_20*sqr
#
     V6_1+=Vtemp_1
     V6_2+=Vtemp_2
     V6_3+=Vtemp_3
     V6_4+=Vtemp_4
     V6_5+=Vtemp_5
     V6_6+=Vtemp_6
     V6_7+=Vtemp_7
     V6_8+=Vtemp_8
     V6_9+=Vtemp_9
     V6_10+=Vtemp_10
     V6_11+=Vtemp_11
     V6_12+=Vtemp_12
     V6_13+=Vtemp_13
     V6_14+=Vtemp_14
     V6_15+=Vtemp_15
     V6_16+=Vtemp_16
     V6_17+=Vtemp_17
     V6_18+=Vtemp_18
     V6_19+=Vtemp_19
     V6_20+=Vtemp_20
#
#
     etemp2_1=V6_1
     etemp2_2=V6_2
     etemp2_3=V6_3
     etemp2_4=V6_4
     etemp2_5=V6_5
     etemp2_6=V6_6
     etemp2_7=V6_7
     etemp2_8=V6_8
     etemp2_9=V6_9
     etemp2_10=V6_10
     etemp2_11=V6_11
     etemp2_12=V6_12
     etemp2_13=V6_13
     etemp2_14=V6_14
     etemp2_15=V6_15
     etemp2_16=V6_16
     etemp2_17=V6_17
     etemp2_18=V6_18
     etemp2_19=V6_19
     etemp2_20=V6_20
#
     sqr=0.0
     etemp=V2_1*etemp2_1
     sqr+=etemp
     etemp=V2_2*etemp2_2
     sqr+=etemp
     etemp=V2_3*etemp2_3
     sqr+=etemp
     etemp=V2_4*etemp2_4
     sqr+=etemp
     etemp=V2_5*etemp2_5
     sqr+=etemp
     etemp=V2_6*etemp2_6
     sqr+=etemp
     etemp=V2_7*etemp2_7
     sqr+=etemp
     etemp=V2_8*etemp2_8
     sqr+=etemp
     etemp=V2_9*etemp2_9
     sqr+=etemp
     etemp=V2_10*etemp2_10
     sqr+=etemp
     etemp=V2_11*etemp2_11
     sqr+=etemp
     etemp=V2_12*etemp2_12
     sqr+=etemp
     etemp=V2_13*etemp2_13
     sqr+=etemp
     etemp=V2_14*etemp2_14
     sqr+=etemp
     etemp=V2_15*etemp2_15
     sqr+=etemp
     etemp=V2_16*etemp2_16
     sqr+=etemp
     etemp=V2_17*etemp2_17
     sqr+=etemp
     etemp=V2_18*etemp2_18
     sqr+=etemp
     etemp=V2_19*etemp2_19
     sqr+=etemp
     etemp=V2_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V2_1*sqr
     Vtemp_2=V2_2*sqr
     Vtemp_3=V2_3*sqr
     Vtemp_4=V2_4*sqr
     Vtemp_5=V2_5*sqr
     Vtemp_6=V2_6*sqr
     Vtemp_7=V2_7*sqr
     Vtemp_8=V2_8*sqr
     Vtemp_9=V2_9*sqr
     Vtemp_10=V2_10*sqr
     Vtemp_11=V2_11*sqr
     Vtemp_12=V2_12*sqr
     Vtemp_13=V2_13*sqr
     Vtemp_14=V2_14*sqr
     Vtemp_15=V2_15*sqr
     Vtemp_16=V2_16*sqr
     Vtemp_17=V2_17*sqr
     Vtemp_18=V2_18*sqr
     Vtemp_19=V2_19*sqr
     Vtemp_20=V2_20*sqr
#
     V6_1+=Vtemp_1
     V6_2+=Vtemp_2
     V6_3+=Vtemp_3
     V6_4+=Vtemp_4
     V6_5+=Vtemp_5
     V6_6+=Vtemp_6
     V6_7+=Vtemp_7
     V6_8+=Vtemp_8
     V6_9+=Vtemp_9
     V6_10+=Vtemp_10
     V6_11+=Vtemp_11
     V6_12+=Vtemp_12
     V6_13+=Vtemp_13
     V6_14+=Vtemp_14
     V6_15+=Vtemp_15
     V6_16+=Vtemp_16
     V6_17+=Vtemp_17
     V6_18+=Vtemp_18
     V6_19+=Vtemp_19
     V6_20+=Vtemp_20
#
#
     etemp2_1=V6_1
     etemp2_2=V6_2
     etemp2_3=V6_3
     etemp2_4=V6_4
     etemp2_5=V6_5
     etemp2_6=V6_6
     etemp2_7=V6_7
     etemp2_8=V6_8
     etemp2_9=V6_9
     etemp2_10=V6_10
     etemp2_11=V6_11
     etemp2_12=V6_12
     etemp2_13=V6_13
     etemp2_14=V6_14
     etemp2_15=V6_15
     etemp2_16=V6_16
     etemp2_17=V6_17
     etemp2_18=V6_18
     etemp2_19=V6_19
     etemp2_20=V6_20
#
     sqr=0.0
     etemp=V3_1*etemp2_1
     sqr+=etemp
     etemp=V3_2*etemp2_2
     sqr+=etemp
     etemp=V3_3*etemp2_3
     sqr+=etemp
     etemp=V3_4*etemp2_4
     sqr+=etemp
     etemp=V3_5*etemp2_5
     sqr+=etemp
     etemp=V3_6*etemp2_6
     sqr+=etemp
     etemp=V3_7*etemp2_7
     sqr+=etemp
     etemp=V3_8*etemp2_8
     sqr+=etemp
     etemp=V3_9*etemp2_9
     sqr+=etemp
     etemp=V3_10*etemp2_10
     sqr+=etemp
     etemp=V3_11*etemp2_11
     sqr+=etemp
     etemp=V3_12*etemp2_12
     sqr+=etemp
     etemp=V3_13*etemp2_13
     sqr+=etemp
     etemp=V3_14*etemp2_14
     sqr+=etemp
     etemp=V3_15*etemp2_15
     sqr+=etemp
     etemp=V3_16*etemp2_16
     sqr+=etemp
     etemp=V3_17*etemp2_17
     sqr+=etemp
     etemp=V3_18*etemp2_18
     sqr+=etemp
     etemp=V3_19*etemp2_19
     sqr+=etemp
     etemp=V3_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V3_1*sqr
     Vtemp_2=V3_2*sqr
     Vtemp_3=V3_3*sqr
     Vtemp_4=V3_4*sqr
     Vtemp_5=V3_5*sqr
     Vtemp_6=V3_6*sqr
     Vtemp_7=V3_7*sqr
     Vtemp_8=V3_8*sqr
     Vtemp_9=V3_9*sqr
     Vtemp_10=V3_10*sqr
     Vtemp_11=V3_11*sqr
     Vtemp_12=V3_12*sqr
     Vtemp_13=V3_13*sqr
     Vtemp_14=V3_14*sqr
     Vtemp_15=V3_15*sqr
     Vtemp_16=V3_16*sqr
     Vtemp_17=V3_17*sqr
     Vtemp_18=V3_18*sqr
     Vtemp_19=V3_19*sqr
     Vtemp_20=V3_20*sqr
#
     V6_1+=Vtemp_1
     V6_2+=Vtemp_2
     V6_3+=Vtemp_3
     V6_4+=Vtemp_4
     V6_5+=Vtemp_5
     V6_6+=Vtemp_6
     V6_7+=Vtemp_7
     V6_8+=Vtemp_8
     V6_9+=Vtemp_9
     V6_10+=Vtemp_10
     V6_11+=Vtemp_11
     V6_12+=Vtemp_12
     V6_13+=Vtemp_13
     V6_14+=Vtemp_14
     V6_15+=Vtemp_15
     V6_16+=Vtemp_16
     V6_17+=Vtemp_17
     V6_18+=Vtemp_18
     V6_19+=Vtemp_19
     V6_20+=Vtemp_20
#
#
     etemp2_1=V6_1
     etemp2_2=V6_2
     etemp2_3=V6_3
     etemp2_4=V6_4
     etemp2_5=V6_5
     etemp2_6=V6_6
     etemp2_7=V6_7
     etemp2_8=V6_8
     etemp2_9=V6_9
     etemp2_10=V6_10
     etemp2_11=V6_11
     etemp2_12=V6_12
     etemp2_13=V6_13
     etemp2_14=V6_14
     etemp2_15=V6_15
     etemp2_16=V6_16
     etemp2_17=V6_17
     etemp2_18=V6_18
     etemp2_19=V6_19
     etemp2_20=V6_20
#
     sqr=0.0
     etemp=V4_1*etemp2_1
     sqr+=etemp
     etemp=V4_2*etemp2_2
     sqr+=etemp
     etemp=V4_3*etemp2_3
     sqr+=etemp
     etemp=V4_4*etemp2_4
     sqr+=etemp
     etemp=V4_5*etemp2_5
     sqr+=etemp
     etemp=V4_6*etemp2_6
     sqr+=etemp
     etemp=V4_7*etemp2_7
     sqr+=etemp
     etemp=V4_8*etemp2_8
     sqr+=etemp
     etemp=V4_9*etemp2_9
     sqr+=etemp
     etemp=V4_10*etemp2_10
     sqr+=etemp
     etemp=V4_11*etemp2_11
     sqr+=etemp
     etemp=V4_12*etemp2_12
     sqr+=etemp
     etemp=V4_13*etemp2_13
     sqr+=etemp
     etemp=V4_14*etemp2_14
     sqr+=etemp
     etemp=V4_15*etemp2_15
     sqr+=etemp
     etemp=V4_16*etemp2_16
     sqr+=etemp
     etemp=V4_17*etemp2_17
     sqr+=etemp
     etemp=V4_18*etemp2_18
     sqr+=etemp
     etemp=V4_19*etemp2_19
     sqr+=etemp
     etemp=V4_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V4_1*sqr
     Vtemp_2=V4_2*sqr
     Vtemp_3=V4_3*sqr
     Vtemp_4=V4_4*sqr
     Vtemp_5=V4_5*sqr
     Vtemp_6=V4_6*sqr
     Vtemp_7=V4_7*sqr
     Vtemp_8=V4_8*sqr
     Vtemp_9=V4_9*sqr
     Vtemp_10=V4_10*sqr
     Vtemp_11=V4_11*sqr
     Vtemp_12=V4_12*sqr
     Vtemp_13=V4_13*sqr
     Vtemp_14=V4_14*sqr
     Vtemp_15=V4_15*sqr
     Vtemp_16=V4_16*sqr
     Vtemp_17=V4_17*sqr
     Vtemp_18=V4_18*sqr
     Vtemp_19=V4_19*sqr
     Vtemp_20=V4_20*sqr
#
     V6_1+=Vtemp_1
     V6_2+=Vtemp_2
     V6_3+=Vtemp_3
     V6_4+=Vtemp_4
     V6_5+=Vtemp_5
     V6_6+=Vtemp_6
     V6_7+=Vtemp_7
     V6_8+=Vtemp_8
     V6_9+=Vtemp_9
     V6_10+=Vtemp_10
     V6_11+=Vtemp_11
     V6_12+=Vtemp_12
     V6_13+=Vtemp_13
     V6_14+=Vtemp_14
     V6_15+=Vtemp_15
     V6_16+=Vtemp_16
     V6_17+=Vtemp_17
     V6_18+=Vtemp_18
     V6_19+=Vtemp_19
     V6_20+=Vtemp_20
#
#
     etemp2_1=V6_1
     etemp2_2=V6_2
     etemp2_3=V6_3
     etemp2_4=V6_4
     etemp2_5=V6_5
     etemp2_6=V6_6
     etemp2_7=V6_7
     etemp2_8=V6_8
     etemp2_9=V6_9
     etemp2_10=V6_10
     etemp2_11=V6_11
     etemp2_12=V6_12
     etemp2_13=V6_13
     etemp2_14=V6_14
     etemp2_15=V6_15
     etemp2_16=V6_16
     etemp2_17=V6_17
     etemp2_18=V6_18
     etemp2_19=V6_19
     etemp2_20=V6_20
#
     sqr=0.0
     etemp=V5_1*etemp2_1
     sqr+=etemp
     etemp=V5_2*etemp2_2
     sqr+=etemp
     etemp=V5_3*etemp2_3
     sqr+=etemp
     etemp=V5_4*etemp2_4
     sqr+=etemp
     etemp=V5_5*etemp2_5
     sqr+=etemp
     etemp=V5_6*etemp2_6
     sqr+=etemp
     etemp=V5_7*etemp2_7
     sqr+=etemp
     etemp=V5_8*etemp2_8
     sqr+=etemp
     etemp=V5_9*etemp2_9
     sqr+=etemp
     etemp=V5_10*etemp2_10
     sqr+=etemp
     etemp=V5_11*etemp2_11
     sqr+=etemp
     etemp=V5_12*etemp2_12
     sqr+=etemp
     etemp=V5_13*etemp2_13
     sqr+=etemp
     etemp=V5_14*etemp2_14
     sqr+=etemp
     etemp=V5_15*etemp2_15
     sqr+=etemp
     etemp=V5_16*etemp2_16
     sqr+=etemp
     etemp=V5_17*etemp2_17
     sqr+=etemp
     etemp=V5_18*etemp2_18
     sqr+=etemp
     etemp=V5_19*etemp2_19
     sqr+=etemp
     etemp=V5_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V5_1*sqr
     Vtemp_2=V5_2*sqr
     Vtemp_3=V5_3*sqr
     Vtemp_4=V5_4*sqr
     Vtemp_5=V5_5*sqr
     Vtemp_6=V5_6*sqr
     Vtemp_7=V5_7*sqr
     Vtemp_8=V5_8*sqr
     Vtemp_9=V5_9*sqr
     Vtemp_10=V5_10*sqr
     Vtemp_11=V5_11*sqr
     Vtemp_12=V5_12*sqr
     Vtemp_13=V5_13*sqr
     Vtemp_14=V5_14*sqr
     Vtemp_15=V5_15*sqr
     Vtemp_16=V5_16*sqr
     Vtemp_17=V5_17*sqr
     Vtemp_18=V5_18*sqr
     Vtemp_19=V5_19*sqr
     Vtemp_20=V5_20*sqr
#
     V6_1+=Vtemp_1
     V6_2+=Vtemp_2
     V6_3+=Vtemp_3
     V6_4+=Vtemp_4
     V6_5+=Vtemp_5
     V6_6+=Vtemp_6
     V6_7+=Vtemp_7
     V6_8+=Vtemp_8
     V6_9+=Vtemp_9
     V6_10+=Vtemp_10
     V6_11+=Vtemp_11
     V6_12+=Vtemp_12
     V6_13+=Vtemp_13
     V6_14+=Vtemp_14
     V6_15+=Vtemp_15
     V6_16+=Vtemp_16
     V6_17+=Vtemp_17
     V6_18+=Vtemp_18
     V6_19+=Vtemp_19
     V6_20+=Vtemp_20
#
#
     Vtemp_1=V6_1
     Vtemp_2=V6_2
     Vtemp_3=V6_3
     Vtemp_4=V6_4
     Vtemp_5=V6_5
     Vtemp_6=V6_6
     Vtemp_7=V6_7
     Vtemp_8=V6_8
     Vtemp_9=V6_9
     Vtemp_10=V6_10
     Vtemp_11=V6_11
     Vtemp_12=V6_12
     Vtemp_13=V6_13
     Vtemp_14=V6_14
     Vtemp_15=V6_15
     Vtemp_16=V6_16
     Vtemp_17=V6_17
     Vtemp_18=V6_18
     Vtemp_19=V6_19
     Vtemp_20=V6_20
#
     sqr=0.0
#
     etemp=V6_1*Vtemp_1
     sqr+=etemp
     etemp=V6_2*Vtemp_2
     sqr+=etemp
     etemp=V6_3*Vtemp_3
     sqr+=etemp
     etemp=V6_4*Vtemp_4
     sqr+=etemp
     etemp=V6_5*Vtemp_5
     sqr+=etemp
     etemp=V6_6*Vtemp_6
     sqr+=etemp
     etemp=V6_7*Vtemp_7
     sqr+=etemp
     etemp=V6_8*Vtemp_8
     sqr+=etemp
     etemp=V6_9*Vtemp_9
     sqr+=etemp
     etemp=V6_10*Vtemp_10
     sqr+=etemp
     etemp=V6_11*Vtemp_11
     sqr+=etemp
     etemp=V6_12*Vtemp_12
     sqr+=etemp
     etemp=V6_13*Vtemp_13
     sqr+=etemp
     etemp=V6_14*Vtemp_14
     sqr+=etemp
     etemp=V6_15*Vtemp_15
     sqr+=etemp
     etemp=V6_16*Vtemp_16
     sqr+=etemp
     etemp=V6_17*Vtemp_17
     sqr+=etemp
     etemp=V6_18*Vtemp_18
     sqr+=etemp
     etemp=V6_19*Vtemp_19
     sqr+=etemp
     etemp=V6_20*Vtemp_20
     sqr+=etemp
#
       exponent=0.5
       execute square_root sqr exponent
       sqr2=1.0/sqr
#
     V6_1*=sqr2
     V6_2*=sqr2
     V6_3*=sqr2
     V6_4*=sqr2
     V6_5*=sqr2
     V6_6*=sqr2
     V6_7*=sqr2
     V6_8*=sqr2
     V6_9*=sqr2
     V6_10*=sqr2
     V6_11*=sqr2
     V6_12*=sqr2
     V6_13*=sqr2
     V6_14*=sqr2
     V6_15*=sqr2
     V6_16*=sqr2
     V6_17*=sqr2
     V6_18*=sqr2
     V6_19*=sqr2
     V6_20*=sqr2
#
#------7 vectors -------------------------------
#
     etemp2_1=V7_1
     etemp2_2=V7_2
     etemp2_3=V7_3
     etemp2_4=V7_4
     etemp2_5=V7_5
     etemp2_6=V7_6
     etemp2_7=V7_7
     etemp2_8=V7_8
     etemp2_9=V7_9
     etemp2_10=V7_10
     etemp2_11=V7_11
     etemp2_12=V7_12
     etemp2_13=V7_13
     etemp2_14=V7_14
     etemp2_15=V7_15
     etemp2_16=V7_16
     etemp2_17=V7_17
     etemp2_18=V7_18
     etemp2_19=V7_19
     etemp2_20=V7_20
#
     sqr=0.0
     etemp=V1_1*etemp2_1
     sqr+=etemp
     etemp=V1_2*etemp2_2
     sqr+=etemp
     etemp=V1_3*etemp2_3
     sqr+=etemp
     etemp=V1_4*etemp2_4
     sqr+=etemp
     etemp=V1_5*etemp2_5
     sqr+=etemp
     etemp=V1_6*etemp2_6
     sqr+=etemp
     etemp=V1_7*etemp2_7
     sqr+=etemp
     etemp=V1_8*etemp2_8
     sqr+=etemp
     etemp=V1_9*etemp2_9
     sqr+=etemp
     etemp=V1_10*etemp2_10
     sqr+=etemp
     etemp=V1_11*etemp2_11
     sqr+=etemp
     etemp=V1_12*etemp2_12
     sqr+=etemp
     etemp=V1_13*etemp2_13
     sqr+=etemp
     etemp=V1_14*etemp2_14
     sqr+=etemp
     etemp=V1_15*etemp2_15
     sqr+=etemp
     etemp=V1_16*etemp2_16
     sqr+=etemp
     etemp=V1_17*etemp2_17
     sqr+=etemp
     etemp=V1_18*etemp2_18
     sqr+=etemp
     etemp=V1_19*etemp2_19
     sqr+=etemp
     etemp=V1_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V1_1*sqr
     Vtemp_2=V1_2*sqr
     Vtemp_3=V1_3*sqr
     Vtemp_4=V1_4*sqr
     Vtemp_5=V1_5*sqr
     Vtemp_6=V1_6*sqr
     Vtemp_7=V1_7*sqr
     Vtemp_8=V1_8*sqr
     Vtemp_9=V1_9*sqr
     Vtemp_10=V1_10*sqr
     Vtemp_11=V1_11*sqr
     Vtemp_12=V1_12*sqr
     Vtemp_13=V1_13*sqr
     Vtemp_14=V1_14*sqr
     Vtemp_15=V1_15*sqr
     Vtemp_16=V1_16*sqr
     Vtemp_17=V1_17*sqr
     Vtemp_18=V1_18*sqr
     Vtemp_19=V1_19*sqr
     Vtemp_20=V1_20*sqr
#
     V7_1+=Vtemp_1
     V7_2+=Vtemp_2
     V7_3+=Vtemp_3
     V7_4+=Vtemp_4
     V7_5+=Vtemp_5
     V7_6+=Vtemp_6
     V7_7+=Vtemp_7
     V7_8+=Vtemp_8
     V7_9+=Vtemp_9
     V7_10+=Vtemp_10
     V7_11+=Vtemp_11
     V7_12+=Vtemp_12
     V7_13+=Vtemp_13
     V7_14+=Vtemp_14
     V7_15+=Vtemp_15
     V7_16+=Vtemp_16
     V7_17+=Vtemp_17
     V7_18+=Vtemp_18
     V7_19+=Vtemp_19
     V7_20+=Vtemp_20
#
#
     etemp2_1=V7_1
     etemp2_2=V7_2
     etemp2_3=V7_3
     etemp2_4=V7_4
     etemp2_5=V7_5
     etemp2_6=V7_6
     etemp2_7=V7_7
     etemp2_8=V7_8
     etemp2_9=V7_9
     etemp2_10=V7_10
     etemp2_11=V7_11
     etemp2_12=V7_12
     etemp2_13=V7_13
     etemp2_14=V7_14
     etemp2_15=V7_15
     etemp2_16=V7_16
     etemp2_17=V7_17
     etemp2_18=V7_18
     etemp2_19=V7_19
     etemp2_20=V7_20
#
     sqr=0.0
     etemp=V2_1*etemp2_1
     sqr+=etemp
     etemp=V2_2*etemp2_2
     sqr+=etemp
     etemp=V2_3*etemp2_3
     sqr+=etemp
     etemp=V2_4*etemp2_4
     sqr+=etemp
     etemp=V2_5*etemp2_5
     sqr+=etemp
     etemp=V2_6*etemp2_6
     sqr+=etemp
     etemp=V2_7*etemp2_7
     sqr+=etemp
     etemp=V2_8*etemp2_8
     sqr+=etemp
     etemp=V2_9*etemp2_9
     sqr+=etemp
     etemp=V2_10*etemp2_10
     sqr+=etemp
     etemp=V2_11*etemp2_11
     sqr+=etemp
     etemp=V2_12*etemp2_12
     sqr+=etemp
     etemp=V2_13*etemp2_13
     sqr+=etemp
     etemp=V2_14*etemp2_14
     sqr+=etemp
     etemp=V2_15*etemp2_15
     sqr+=etemp
     etemp=V2_16*etemp2_16
     sqr+=etemp
     etemp=V2_17*etemp2_17
     sqr+=etemp
     etemp=V2_18*etemp2_18
     sqr+=etemp
     etemp=V2_19*etemp2_19
     sqr+=etemp
     etemp=V2_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V2_1*sqr
     Vtemp_2=V2_2*sqr
     Vtemp_3=V2_3*sqr
     Vtemp_4=V2_4*sqr
     Vtemp_5=V2_5*sqr
     Vtemp_6=V2_6*sqr
     Vtemp_7=V2_7*sqr
     Vtemp_8=V2_8*sqr
     Vtemp_9=V2_9*sqr
     Vtemp_10=V2_10*sqr
     Vtemp_11=V2_11*sqr
     Vtemp_12=V2_12*sqr
     Vtemp_13=V2_13*sqr
     Vtemp_14=V2_14*sqr
     Vtemp_15=V2_15*sqr
     Vtemp_16=V2_16*sqr
     Vtemp_17=V2_17*sqr
     Vtemp_18=V2_18*sqr
     Vtemp_19=V2_19*sqr
     Vtemp_20=V2_20*sqr
#
     V7_1+=Vtemp_1
     V7_2+=Vtemp_2
     V7_3+=Vtemp_3
     V7_4+=Vtemp_4
     V7_5+=Vtemp_5
     V7_6+=Vtemp_6
     V7_7+=Vtemp_7
     V7_8+=Vtemp_8
     V7_9+=Vtemp_9
     V7_10+=Vtemp_10
     V7_11+=Vtemp_11
     V7_12+=Vtemp_12
     V7_13+=Vtemp_13
     V7_14+=Vtemp_14
     V7_15+=Vtemp_15
     V7_16+=Vtemp_16
     V7_17+=Vtemp_17
     V7_18+=Vtemp_18
     V7_19+=Vtemp_19
     V7_20+=Vtemp_20
#
#
     etemp2_1=V7_1
     etemp2_2=V7_2
     etemp2_3=V7_3
     etemp2_4=V7_4
     etemp2_5=V7_5
     etemp2_6=V7_6
     etemp2_7=V7_7
     etemp2_8=V7_8
     etemp2_9=V7_9
     etemp2_10=V7_10
     etemp2_11=V7_11
     etemp2_12=V7_12
     etemp2_13=V7_13
     etemp2_14=V7_14
     etemp2_15=V7_15
     etemp2_16=V7_16
     etemp2_17=V7_17
     etemp2_18=V7_18
     etemp2_19=V7_19
     etemp2_20=V7_20
#
     sqr=0.0
     etemp=V3_1*etemp2_1
     sqr+=etemp
     etemp=V3_2*etemp2_2
     sqr+=etemp
     etemp=V3_3*etemp2_3
     sqr+=etemp
     etemp=V3_4*etemp2_4
     sqr+=etemp
     etemp=V3_5*etemp2_5
     sqr+=etemp
     etemp=V3_6*etemp2_6
     sqr+=etemp
     etemp=V3_7*etemp2_7
     sqr+=etemp
     etemp=V3_8*etemp2_8
     sqr+=etemp
     etemp=V3_9*etemp2_9
     sqr+=etemp
     etemp=V3_10*etemp2_10
     sqr+=etemp
     etemp=V3_11*etemp2_11
     sqr+=etemp
     etemp=V3_12*etemp2_12
     sqr+=etemp
     etemp=V3_13*etemp2_13
     sqr+=etemp
     etemp=V3_14*etemp2_14
     sqr+=etemp
     etemp=V3_15*etemp2_15
     sqr+=etemp
     etemp=V3_16*etemp2_16
     sqr+=etemp
     etemp=V3_17*etemp2_17
     sqr+=etemp
     etemp=V3_18*etemp2_18
     sqr+=etemp
     etemp=V3_19*etemp2_19
     sqr+=etemp
     etemp=V3_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V3_1*sqr
     Vtemp_2=V3_2*sqr
     Vtemp_3=V3_3*sqr
     Vtemp_4=V3_4*sqr
     Vtemp_5=V3_5*sqr
     Vtemp_6=V3_6*sqr
     Vtemp_7=V3_7*sqr
     Vtemp_8=V3_8*sqr
     Vtemp_9=V3_9*sqr
     Vtemp_10=V3_10*sqr
     Vtemp_11=V3_11*sqr
     Vtemp_12=V3_12*sqr
     Vtemp_13=V3_13*sqr
     Vtemp_14=V3_14*sqr
     Vtemp_15=V3_15*sqr
     Vtemp_16=V3_16*sqr
     Vtemp_17=V3_17*sqr
     Vtemp_18=V3_18*sqr
     Vtemp_19=V3_19*sqr
     Vtemp_20=V3_20*sqr
#
     V7_1+=Vtemp_1
     V7_2+=Vtemp_2
     V7_3+=Vtemp_3
     V7_4+=Vtemp_4
     V7_5+=Vtemp_5
     V7_6+=Vtemp_6
     V7_7+=Vtemp_7
     V7_8+=Vtemp_8
     V7_9+=Vtemp_9
     V7_10+=Vtemp_10
     V7_11+=Vtemp_11
     V7_12+=Vtemp_12
     V7_13+=Vtemp_13
     V7_14+=Vtemp_14
     V7_15+=Vtemp_15
     V7_16+=Vtemp_16
     V7_17+=Vtemp_17
     V7_18+=Vtemp_18
     V7_19+=Vtemp_19
     V7_20+=Vtemp_20
#
#
     etemp2_1=V7_1
     etemp2_2=V7_2
     etemp2_3=V7_3
     etemp2_4=V7_4
     etemp2_5=V7_5
     etemp2_6=V7_6
     etemp2_7=V7_7
     etemp2_8=V7_8
     etemp2_9=V7_9
     etemp2_10=V7_10
     etemp2_11=V7_11
     etemp2_12=V7_12
     etemp2_13=V7_13
     etemp2_14=V7_14
     etemp2_15=V7_15
     etemp2_16=V7_16
     etemp2_17=V7_17
     etemp2_18=V7_18
     etemp2_19=V7_19
     etemp2_20=V7_20
#
     sqr=0.0
     etemp=V4_1*etemp2_1
     sqr+=etemp
     etemp=V4_2*etemp2_2
     sqr+=etemp
     etemp=V4_3*etemp2_3
     sqr+=etemp
     etemp=V4_4*etemp2_4
     sqr+=etemp
     etemp=V4_5*etemp2_5
     sqr+=etemp
     etemp=V4_6*etemp2_6
     sqr+=etemp
     etemp=V4_7*etemp2_7
     sqr+=etemp
     etemp=V4_8*etemp2_8
     sqr+=etemp
     etemp=V4_9*etemp2_9
     sqr+=etemp
     etemp=V4_10*etemp2_10
     sqr+=etemp
     etemp=V4_11*etemp2_11
     sqr+=etemp
     etemp=V4_12*etemp2_12
     sqr+=etemp
     etemp=V4_13*etemp2_13
     sqr+=etemp
     etemp=V4_14*etemp2_14
     sqr+=etemp
     etemp=V4_15*etemp2_15
     sqr+=etemp
     etemp=V4_16*etemp2_16
     sqr+=etemp
     etemp=V4_17*etemp2_17
     sqr+=etemp
     etemp=V4_18*etemp2_18
     sqr+=etemp
     etemp=V4_19*etemp2_19
     sqr+=etemp
     etemp=V4_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V4_1*sqr
     Vtemp_2=V4_2*sqr
     Vtemp_3=V4_3*sqr
     Vtemp_4=V4_4*sqr
     Vtemp_5=V4_5*sqr
     Vtemp_6=V4_6*sqr
     Vtemp_7=V4_7*sqr
     Vtemp_8=V4_8*sqr
     Vtemp_9=V4_9*sqr
     Vtemp_10=V4_10*sqr
     Vtemp_11=V4_11*sqr
     Vtemp_12=V4_12*sqr
     Vtemp_13=V4_13*sqr
     Vtemp_14=V4_14*sqr
     Vtemp_15=V4_15*sqr
     Vtemp_16=V4_16*sqr
     Vtemp_17=V4_17*sqr
     Vtemp_18=V4_18*sqr
     Vtemp_19=V4_19*sqr
     Vtemp_20=V4_20*sqr
#
     V7_1+=Vtemp_1
     V7_2+=Vtemp_2
     V7_3+=Vtemp_3
     V7_4+=Vtemp_4
     V7_5+=Vtemp_5
     V7_6+=Vtemp_6
     V7_7+=Vtemp_7
     V7_8+=Vtemp_8
     V7_9+=Vtemp_9
     V7_10+=Vtemp_10
     V7_11+=Vtemp_11
     V7_12+=Vtemp_12
     V7_13+=Vtemp_13
     V7_14+=Vtemp_14
     V7_15+=Vtemp_15
     V7_16+=Vtemp_16
     V7_17+=Vtemp_17
     V7_18+=Vtemp_18
     V7_19+=Vtemp_19
     V7_20+=Vtemp_20
#
#
     etemp2_1=V7_1
     etemp2_2=V7_2
     etemp2_3=V7_3
     etemp2_4=V7_4
     etemp2_5=V7_5
     etemp2_6=V7_6
     etemp2_7=V7_7
     etemp2_8=V7_8
     etemp2_9=V7_9
     etemp2_10=V7_10
     etemp2_11=V7_11
     etemp2_12=V7_12
     etemp2_13=V7_13
     etemp2_14=V7_14
     etemp2_15=V7_15
     etemp2_16=V7_16
     etemp2_17=V7_17
     etemp2_18=V7_18
     etemp2_19=V7_19
     etemp2_20=V7_20
#
     sqr=0.0
     etemp=V5_1*etemp2_1
     sqr+=etemp
     etemp=V5_2*etemp2_2
     sqr+=etemp
     etemp=V5_3*etemp2_3
     sqr+=etemp
     etemp=V5_4*etemp2_4
     sqr+=etemp
     etemp=V5_5*etemp2_5
     sqr+=etemp
     etemp=V5_6*etemp2_6
     sqr+=etemp
     etemp=V5_7*etemp2_7
     sqr+=etemp
     etemp=V5_8*etemp2_8
     sqr+=etemp
     etemp=V5_9*etemp2_9
     sqr+=etemp
     etemp=V5_10*etemp2_10
     sqr+=etemp
     etemp=V5_11*etemp2_11
     sqr+=etemp
     etemp=V5_12*etemp2_12
     sqr+=etemp
     etemp=V5_13*etemp2_13
     sqr+=etemp
     etemp=V5_14*etemp2_14
     sqr+=etemp
     etemp=V5_15*etemp2_15
     sqr+=etemp
     etemp=V5_16*etemp2_16
     sqr+=etemp
     etemp=V5_17*etemp2_17
     sqr+=etemp
     etemp=V5_18*etemp2_18
     sqr+=etemp
     etemp=V5_19*etemp2_19
     sqr+=etemp
     etemp=V5_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V5_1*sqr
     Vtemp_2=V5_2*sqr
     Vtemp_3=V5_3*sqr
     Vtemp_4=V5_4*sqr
     Vtemp_5=V5_5*sqr
     Vtemp_6=V5_6*sqr
     Vtemp_7=V5_7*sqr
     Vtemp_8=V5_8*sqr
     Vtemp_9=V5_9*sqr
     Vtemp_10=V5_10*sqr
     Vtemp_11=V5_11*sqr
     Vtemp_12=V5_12*sqr
     Vtemp_13=V5_13*sqr
     Vtemp_14=V5_14*sqr
     Vtemp_15=V5_15*sqr
     Vtemp_16=V5_16*sqr
     Vtemp_17=V5_17*sqr
     Vtemp_18=V5_18*sqr
     Vtemp_19=V5_19*sqr
     Vtemp_20=V5_20*sqr
#
     V7_1+=Vtemp_1
     V7_2+=Vtemp_2
     V7_3+=Vtemp_3
     V7_4+=Vtemp_4
     V7_5+=Vtemp_5
     V7_6+=Vtemp_6
     V7_7+=Vtemp_7
     V7_8+=Vtemp_8
     V7_9+=Vtemp_9
     V7_10+=Vtemp_10
     V7_11+=Vtemp_11
     V7_12+=Vtemp_12
     V7_13+=Vtemp_13
     V7_14+=Vtemp_14
     V7_15+=Vtemp_15
     V7_16+=Vtemp_16
     V7_17+=Vtemp_17
     V7_18+=Vtemp_18
     V7_19+=Vtemp_19
     V7_20+=Vtemp_20
#
#
     etemp2_1=V7_1
     etemp2_2=V7_2
     etemp2_3=V7_3
     etemp2_4=V7_4
     etemp2_5=V7_5
     etemp2_6=V7_6
     etemp2_7=V7_7
     etemp2_8=V7_8
     etemp2_9=V7_9
     etemp2_10=V7_10
     etemp2_11=V7_11
     etemp2_12=V7_12
     etemp2_13=V7_13
     etemp2_14=V7_14
     etemp2_15=V7_15
     etemp2_16=V7_16
     etemp2_17=V7_17
     etemp2_18=V7_18
     etemp2_19=V7_19
     etemp2_20=V7_20
#
     sqr=0.0
     etemp=V6_1*etemp2_1
     sqr+=etemp
     etemp=V6_2*etemp2_2
     sqr+=etemp
     etemp=V6_3*etemp2_3
     sqr+=etemp
     etemp=V6_4*etemp2_4
     sqr+=etemp
     etemp=V6_5*etemp2_5
     sqr+=etemp
     etemp=V6_6*etemp2_6
     sqr+=etemp
     etemp=V6_7*etemp2_7
     sqr+=etemp
     etemp=V6_8*etemp2_8
     sqr+=etemp
     etemp=V6_9*etemp2_9
     sqr+=etemp
     etemp=V6_10*etemp2_10
     sqr+=etemp
     etemp=V6_11*etemp2_11
     sqr+=etemp
     etemp=V6_12*etemp2_12
     sqr+=etemp
     etemp=V6_13*etemp2_13
     sqr+=etemp
     etemp=V6_14*etemp2_14
     sqr+=etemp
     etemp=V6_15*etemp2_15
     sqr+=etemp
     etemp=V6_16*etemp2_16
     sqr+=etemp
     etemp=V6_17*etemp2_17
     sqr+=etemp
     etemp=V6_18*etemp2_18
     sqr+=etemp
     etemp=V6_19*etemp2_19
     sqr+=etemp
     etemp=V6_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V6_1*sqr
     Vtemp_2=V6_2*sqr
     Vtemp_3=V6_3*sqr
     Vtemp_4=V6_4*sqr
     Vtemp_5=V6_5*sqr
     Vtemp_6=V6_6*sqr
     Vtemp_7=V6_7*sqr
     Vtemp_8=V6_8*sqr
     Vtemp_9=V6_9*sqr
     Vtemp_10=V6_10*sqr
     Vtemp_11=V6_11*sqr
     Vtemp_12=V6_12*sqr
     Vtemp_13=V6_13*sqr
     Vtemp_14=V6_14*sqr
     Vtemp_15=V6_15*sqr
     Vtemp_16=V6_16*sqr
     Vtemp_17=V6_17*sqr
     Vtemp_18=V6_18*sqr
     Vtemp_19=V6_19*sqr
     Vtemp_20=V6_20*sqr
#
     V7_1+=Vtemp_1
     V7_2+=Vtemp_2
     V7_3+=Vtemp_3
     V7_4+=Vtemp_4
     V7_5+=Vtemp_5
     V7_6+=Vtemp_6
     V7_7+=Vtemp_7
     V7_8+=Vtemp_8
     V7_9+=Vtemp_9
     V7_10+=Vtemp_10
     V7_11+=Vtemp_11
     V7_12+=Vtemp_12
     V7_13+=Vtemp_13
     V7_14+=Vtemp_14
     V7_15+=Vtemp_15
     V7_16+=Vtemp_16
     V7_17+=Vtemp_17
     V7_18+=Vtemp_18
     V7_19+=Vtemp_19
     V7_20+=Vtemp_20
#
#
     Vtemp_1=V7_1
     Vtemp_2=V7_2
     Vtemp_3=V7_3
     Vtemp_4=V7_4
     Vtemp_5=V7_5
     Vtemp_6=V7_6
     Vtemp_7=V7_7
     Vtemp_8=V7_8
     Vtemp_9=V7_9
     Vtemp_10=V7_10
     Vtemp_11=V7_11
     Vtemp_12=V7_12
     Vtemp_13=V7_13
     Vtemp_14=V7_14
     Vtemp_15=V7_15
     Vtemp_16=V7_16
     Vtemp_17=V7_17
     Vtemp_18=V7_18
     Vtemp_19=V7_19
     Vtemp_20=V7_20
#
     sqr=0.0
#
     etemp=V7_1*Vtemp_1
     sqr+=etemp
     etemp=V7_2*Vtemp_2
     sqr+=etemp
     etemp=V7_3*Vtemp_3
     sqr+=etemp
     etemp=V7_4*Vtemp_4
     sqr+=etemp
     etemp=V7_5*Vtemp_5
     sqr+=etemp
     etemp=V7_6*Vtemp_6
     sqr+=etemp
     etemp=V7_7*Vtemp_7
     sqr+=etemp
     etemp=V7_8*Vtemp_8
     sqr+=etemp
     etemp=V7_9*Vtemp_9
     sqr+=etemp
     etemp=V7_10*Vtemp_10
     sqr+=etemp
     etemp=V7_11*Vtemp_11
     sqr+=etemp
     etemp=V7_12*Vtemp_12
     sqr+=etemp
     etemp=V7_13*Vtemp_13
     sqr+=etemp
     etemp=V7_14*Vtemp_14
     sqr+=etemp
     etemp=V7_15*Vtemp_15
     sqr+=etemp
     etemp=V7_16*Vtemp_16
     sqr+=etemp
     etemp=V7_17*Vtemp_17
     sqr+=etemp
     etemp=V7_18*Vtemp_18
     sqr+=etemp
     etemp=V7_19*Vtemp_19
     sqr+=etemp
     etemp=V7_20*Vtemp_20
     sqr+=etemp
#
       exponent=0.5
       execute square_root sqr exponent
       sqr2=1.0/sqr
#
     V7_1*=sqr2
     V7_2*=sqr2
     V7_3*=sqr2
     V7_4*=sqr2
     V7_5*=sqr2
     V7_6*=sqr2
     V7_7*=sqr2
     V7_8*=sqr2
     V7_9*=sqr2
     V7_10*=sqr2
     V7_11*=sqr2
     V7_12*=sqr2
     V7_13*=sqr2
     V7_14*=sqr2
     V7_15*=sqr2
     V7_16*=sqr2
     V7_17*=sqr2
     V7_18*=sqr2
     V7_19*=sqr2
     V7_20*=sqr2
#
#------8 vectors -------------------------------
#
     etemp2_1=V8_1
     etemp2_2=V8_2
     etemp2_3=V8_3
     etemp2_4=V8_4
     etemp2_5=V8_5
     etemp2_6=V8_6
     etemp2_7=V8_7
     etemp2_8=V8_8
     etemp2_9=V8_9
     etemp2_10=V8_10
     etemp2_11=V8_11
     etemp2_12=V8_12
     etemp2_13=V8_13
     etemp2_14=V8_14
     etemp2_15=V8_15
     etemp2_16=V8_16
     etemp2_17=V8_17
     etemp2_18=V8_18
     etemp2_19=V8_19
     etemp2_20=V8_20
#
     sqr=0.0
     etemp=V1_1*etemp2_1
     sqr+=etemp
     etemp=V1_2*etemp2_2
     sqr+=etemp
     etemp=V1_3*etemp2_3
     sqr+=etemp
     etemp=V1_4*etemp2_4
     sqr+=etemp
     etemp=V1_5*etemp2_5
     sqr+=etemp
     etemp=V1_6*etemp2_6
     sqr+=etemp
     etemp=V1_7*etemp2_7
     sqr+=etemp
     etemp=V1_8*etemp2_8
     sqr+=etemp
     etemp=V1_9*etemp2_9
     sqr+=etemp
     etemp=V1_10*etemp2_10
     sqr+=etemp
     etemp=V1_11*etemp2_11
     sqr+=etemp
     etemp=V1_12*etemp2_12
     sqr+=etemp
     etemp=V1_13*etemp2_13
     sqr+=etemp
     etemp=V1_14*etemp2_14
     sqr+=etemp
     etemp=V1_15*etemp2_15
     sqr+=etemp
     etemp=V1_16*etemp2_16
     sqr+=etemp
     etemp=V1_17*etemp2_17
     sqr+=etemp
     etemp=V1_18*etemp2_18
     sqr+=etemp
     etemp=V1_19*etemp2_19
     sqr+=etemp
     etemp=V1_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V1_1*sqr
     Vtemp_2=V1_2*sqr
     Vtemp_3=V1_3*sqr
     Vtemp_4=V1_4*sqr
     Vtemp_5=V1_5*sqr
     Vtemp_6=V1_6*sqr
     Vtemp_7=V1_7*sqr
     Vtemp_8=V1_8*sqr
     Vtemp_9=V1_9*sqr
     Vtemp_10=V1_10*sqr
     Vtemp_11=V1_11*sqr
     Vtemp_12=V1_12*sqr
     Vtemp_13=V1_13*sqr
     Vtemp_14=V1_14*sqr
     Vtemp_15=V1_15*sqr
     Vtemp_16=V1_16*sqr
     Vtemp_17=V1_17*sqr
     Vtemp_18=V1_18*sqr
     Vtemp_19=V1_19*sqr
     Vtemp_20=V1_20*sqr
#
     V8_1+=Vtemp_1
     V8_2+=Vtemp_2
     V8_3+=Vtemp_3
     V8_4+=Vtemp_4
     V8_5+=Vtemp_5
     V8_6+=Vtemp_6
     V8_7+=Vtemp_7
     V8_8+=Vtemp_8
     V8_9+=Vtemp_9
     V8_10+=Vtemp_10
     V8_11+=Vtemp_11
     V8_12+=Vtemp_12
     V8_13+=Vtemp_13
     V8_14+=Vtemp_14
     V8_15+=Vtemp_15
     V8_16+=Vtemp_16
     V8_17+=Vtemp_17
     V8_18+=Vtemp_18
     V8_19+=Vtemp_19
     V8_20+=Vtemp_20
#
#
     etemp2_1=V8_1
     etemp2_2=V8_2
     etemp2_3=V8_3
     etemp2_4=V8_4
     etemp2_5=V8_5
     etemp2_6=V8_6
     etemp2_7=V8_7
     etemp2_8=V8_8
     etemp2_9=V8_9
     etemp2_10=V8_10
     etemp2_11=V8_11
     etemp2_12=V8_12
     etemp2_13=V8_13
     etemp2_14=V8_14
     etemp2_15=V8_15
     etemp2_16=V8_16
     etemp2_17=V8_17
     etemp2_18=V8_18
     etemp2_19=V8_19
     etemp2_20=V8_20
#
     sqr=0.0
     etemp=V2_1*etemp2_1
     sqr+=etemp
     etemp=V2_2*etemp2_2
     sqr+=etemp
     etemp=V2_3*etemp2_3
     sqr+=etemp
     etemp=V2_4*etemp2_4
     sqr+=etemp
     etemp=V2_5*etemp2_5
     sqr+=etemp
     etemp=V2_6*etemp2_6
     sqr+=etemp
     etemp=V2_7*etemp2_7
     sqr+=etemp
     etemp=V2_8*etemp2_8
     sqr+=etemp
     etemp=V2_9*etemp2_9
     sqr+=etemp
     etemp=V2_10*etemp2_10
     sqr+=etemp
     etemp=V2_11*etemp2_11
     sqr+=etemp
     etemp=V2_12*etemp2_12
     sqr+=etemp
     etemp=V2_13*etemp2_13
     sqr+=etemp
     etemp=V2_14*etemp2_14
     sqr+=etemp
     etemp=V2_15*etemp2_15
     sqr+=etemp
     etemp=V2_16*etemp2_16
     sqr+=etemp
     etemp=V2_17*etemp2_17
     sqr+=etemp
     etemp=V2_18*etemp2_18
     sqr+=etemp
     etemp=V2_19*etemp2_19
     sqr+=etemp
     etemp=V2_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V2_1*sqr
     Vtemp_2=V2_2*sqr
     Vtemp_3=V2_3*sqr
     Vtemp_4=V2_4*sqr
     Vtemp_5=V2_5*sqr
     Vtemp_6=V2_6*sqr
     Vtemp_7=V2_7*sqr
     Vtemp_8=V2_8*sqr
     Vtemp_9=V2_9*sqr
     Vtemp_10=V2_10*sqr
     Vtemp_11=V2_11*sqr
     Vtemp_12=V2_12*sqr
     Vtemp_13=V2_13*sqr
     Vtemp_14=V2_14*sqr
     Vtemp_15=V2_15*sqr
     Vtemp_16=V2_16*sqr
     Vtemp_17=V2_17*sqr
     Vtemp_18=V2_18*sqr
     Vtemp_19=V2_19*sqr
     Vtemp_20=V2_20*sqr
#
     V8_1+=Vtemp_1
     V8_2+=Vtemp_2
     V8_3+=Vtemp_3
     V8_4+=Vtemp_4
     V8_5+=Vtemp_5
     V8_6+=Vtemp_6
     V8_7+=Vtemp_7
     V8_8+=Vtemp_8
     V8_9+=Vtemp_9
     V8_10+=Vtemp_10
     V8_11+=Vtemp_11
     V8_12+=Vtemp_12
     V8_13+=Vtemp_13
     V8_14+=Vtemp_14
     V8_15+=Vtemp_15
     V8_16+=Vtemp_16
     V8_17+=Vtemp_17
     V8_18+=Vtemp_18
     V8_19+=Vtemp_19
     V8_20+=Vtemp_20
#
#
     etemp2_1=V8_1
     etemp2_2=V8_2
     etemp2_3=V8_3
     etemp2_4=V8_4
     etemp2_5=V8_5
     etemp2_6=V8_6
     etemp2_7=V8_7
     etemp2_8=V8_8
     etemp2_9=V8_9
     etemp2_10=V8_10
     etemp2_11=V8_11
     etemp2_12=V8_12
     etemp2_13=V8_13
     etemp2_14=V8_14
     etemp2_15=V8_15
     etemp2_16=V8_16
     etemp2_17=V8_17
     etemp2_18=V8_18
     etemp2_19=V8_19
     etemp2_20=V8_20
#
     sqr=0.0
     etemp=V3_1*etemp2_1
     sqr+=etemp
     etemp=V3_2*etemp2_2
     sqr+=etemp
     etemp=V3_3*etemp2_3
     sqr+=etemp
     etemp=V3_4*etemp2_4
     sqr+=etemp
     etemp=V3_5*etemp2_5
     sqr+=etemp
     etemp=V3_6*etemp2_6
     sqr+=etemp
     etemp=V3_7*etemp2_7
     sqr+=etemp
     etemp=V3_8*etemp2_8
     sqr+=etemp
     etemp=V3_9*etemp2_9
     sqr+=etemp
     etemp=V3_10*etemp2_10
     sqr+=etemp
     etemp=V3_11*etemp2_11
     sqr+=etemp
     etemp=V3_12*etemp2_12
     sqr+=etemp
     etemp=V3_13*etemp2_13
     sqr+=etemp
     etemp=V3_14*etemp2_14
     sqr+=etemp
     etemp=V3_15*etemp2_15
     sqr+=etemp
     etemp=V3_16*etemp2_16
     sqr+=etemp
     etemp=V3_17*etemp2_17
     sqr+=etemp
     etemp=V3_18*etemp2_18
     sqr+=etemp
     etemp=V3_19*etemp2_19
     sqr+=etemp
     etemp=V3_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V3_1*sqr
     Vtemp_2=V3_2*sqr
     Vtemp_3=V3_3*sqr
     Vtemp_4=V3_4*sqr
     Vtemp_5=V3_5*sqr
     Vtemp_6=V3_6*sqr
     Vtemp_7=V3_7*sqr
     Vtemp_8=V3_8*sqr
     Vtemp_9=V3_9*sqr
     Vtemp_10=V3_10*sqr
     Vtemp_11=V3_11*sqr
     Vtemp_12=V3_12*sqr
     Vtemp_13=V3_13*sqr
     Vtemp_14=V3_14*sqr
     Vtemp_15=V3_15*sqr
     Vtemp_16=V3_16*sqr
     Vtemp_17=V3_17*sqr
     Vtemp_18=V3_18*sqr
     Vtemp_19=V3_19*sqr
     Vtemp_20=V3_20*sqr
#
     V8_1+=Vtemp_1
     V8_2+=Vtemp_2
     V8_3+=Vtemp_3
     V8_4+=Vtemp_4
     V8_5+=Vtemp_5
     V8_6+=Vtemp_6
     V8_7+=Vtemp_7
     V8_8+=Vtemp_8
     V8_9+=Vtemp_9
     V8_10+=Vtemp_10
     V8_11+=Vtemp_11
     V8_12+=Vtemp_12
     V8_13+=Vtemp_13
     V8_14+=Vtemp_14
     V8_15+=Vtemp_15
     V8_16+=Vtemp_16
     V8_17+=Vtemp_17
     V8_18+=Vtemp_18
     V8_19+=Vtemp_19
     V8_20+=Vtemp_20
#
#
     etemp2_1=V8_1
     etemp2_2=V8_2
     etemp2_3=V8_3
     etemp2_4=V8_4
     etemp2_5=V8_5
     etemp2_6=V8_6
     etemp2_7=V8_7
     etemp2_8=V8_8
     etemp2_9=V8_9
     etemp2_10=V8_10
     etemp2_11=V8_11
     etemp2_12=V8_12
     etemp2_13=V8_13
     etemp2_14=V8_14
     etemp2_15=V8_15
     etemp2_16=V8_16
     etemp2_17=V8_17
     etemp2_18=V8_18
     etemp2_19=V8_19
     etemp2_20=V8_20
#
     sqr=0.0
     etemp=V4_1*etemp2_1
     sqr+=etemp
     etemp=V4_2*etemp2_2
     sqr+=etemp
     etemp=V4_3*etemp2_3
     sqr+=etemp
     etemp=V4_4*etemp2_4
     sqr+=etemp
     etemp=V4_5*etemp2_5
     sqr+=etemp
     etemp=V4_6*etemp2_6
     sqr+=etemp
     etemp=V4_7*etemp2_7
     sqr+=etemp
     etemp=V4_8*etemp2_8
     sqr+=etemp
     etemp=V4_9*etemp2_9
     sqr+=etemp
     etemp=V4_10*etemp2_10
     sqr+=etemp
     etemp=V4_11*etemp2_11
     sqr+=etemp
     etemp=V4_12*etemp2_12
     sqr+=etemp
     etemp=V4_13*etemp2_13
     sqr+=etemp
     etemp=V4_14*etemp2_14
     sqr+=etemp
     etemp=V4_15*etemp2_15
     sqr+=etemp
     etemp=V4_16*etemp2_16
     sqr+=etemp
     etemp=V4_17*etemp2_17
     sqr+=etemp
     etemp=V4_18*etemp2_18
     sqr+=etemp
     etemp=V4_19*etemp2_19
     sqr+=etemp
     etemp=V4_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V4_1*sqr
     Vtemp_2=V4_2*sqr
     Vtemp_3=V4_3*sqr
     Vtemp_4=V4_4*sqr
     Vtemp_5=V4_5*sqr
     Vtemp_6=V4_6*sqr
     Vtemp_7=V4_7*sqr
     Vtemp_8=V4_8*sqr
     Vtemp_9=V4_9*sqr
     Vtemp_10=V4_10*sqr
     Vtemp_11=V4_11*sqr
     Vtemp_12=V4_12*sqr
     Vtemp_13=V4_13*sqr
     Vtemp_14=V4_14*sqr
     Vtemp_15=V4_15*sqr
     Vtemp_16=V4_16*sqr
     Vtemp_17=V4_17*sqr
     Vtemp_18=V4_18*sqr
     Vtemp_19=V4_19*sqr
     Vtemp_20=V4_20*sqr
#
     V8_1+=Vtemp_1
     V8_2+=Vtemp_2
     V8_3+=Vtemp_3
     V8_4+=Vtemp_4
     V8_5+=Vtemp_5
     V8_6+=Vtemp_6
     V8_7+=Vtemp_7
     V8_8+=Vtemp_8
     V8_9+=Vtemp_9
     V8_10+=Vtemp_10
     V8_11+=Vtemp_11
     V8_12+=Vtemp_12
     V8_13+=Vtemp_13
     V8_14+=Vtemp_14
     V8_15+=Vtemp_15
     V8_16+=Vtemp_16
     V8_17+=Vtemp_17
     V8_18+=Vtemp_18
     V8_19+=Vtemp_19
     V8_20+=Vtemp_20
#
#
     etemp2_1=V8_1
     etemp2_2=V8_2
     etemp2_3=V8_3
     etemp2_4=V8_4
     etemp2_5=V8_5
     etemp2_6=V8_6
     etemp2_7=V8_7
     etemp2_8=V8_8
     etemp2_9=V8_9
     etemp2_10=V8_10
     etemp2_11=V8_11
     etemp2_12=V8_12
     etemp2_13=V8_13
     etemp2_14=V8_14
     etemp2_15=V8_15
     etemp2_16=V8_16
     etemp2_17=V8_17
     etemp2_18=V8_18
     etemp2_19=V8_19
     etemp2_20=V8_20
#
     sqr=0.0
     etemp=V5_1*etemp2_1
     sqr+=etemp
     etemp=V5_2*etemp2_2
     sqr+=etemp
     etemp=V5_3*etemp2_3
     sqr+=etemp
     etemp=V5_4*etemp2_4
     sqr+=etemp
     etemp=V5_5*etemp2_5
     sqr+=etemp
     etemp=V5_6*etemp2_6
     sqr+=etemp
     etemp=V5_7*etemp2_7
     sqr+=etemp
     etemp=V5_8*etemp2_8
     sqr+=etemp
     etemp=V5_9*etemp2_9
     sqr+=etemp
     etemp=V5_10*etemp2_10
     sqr+=etemp
     etemp=V5_11*etemp2_11
     sqr+=etemp
     etemp=V5_12*etemp2_12
     sqr+=etemp
     etemp=V5_13*etemp2_13
     sqr+=etemp
     etemp=V5_14*etemp2_14
     sqr+=etemp
     etemp=V5_15*etemp2_15
     sqr+=etemp
     etemp=V5_16*etemp2_16
     sqr+=etemp
     etemp=V5_17*etemp2_17
     sqr+=etemp
     etemp=V5_18*etemp2_18
     sqr+=etemp
     etemp=V5_19*etemp2_19
     sqr+=etemp
     etemp=V5_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V5_1*sqr
     Vtemp_2=V5_2*sqr
     Vtemp_3=V5_3*sqr
     Vtemp_4=V5_4*sqr
     Vtemp_5=V5_5*sqr
     Vtemp_6=V5_6*sqr
     Vtemp_7=V5_7*sqr
     Vtemp_8=V5_8*sqr
     Vtemp_9=V5_9*sqr
     Vtemp_10=V5_10*sqr
     Vtemp_11=V5_11*sqr
     Vtemp_12=V5_12*sqr
     Vtemp_13=V5_13*sqr
     Vtemp_14=V5_14*sqr
     Vtemp_15=V5_15*sqr
     Vtemp_16=V5_16*sqr
     Vtemp_17=V5_17*sqr
     Vtemp_18=V5_18*sqr
     Vtemp_19=V5_19*sqr
     Vtemp_20=V5_20*sqr
#
     V8_1+=Vtemp_1
     V8_2+=Vtemp_2
     V8_3+=Vtemp_3
     V8_4+=Vtemp_4
     V8_5+=Vtemp_5
     V8_6+=Vtemp_6
     V8_7+=Vtemp_7
     V8_8+=Vtemp_8
     V8_9+=Vtemp_9
     V8_10+=Vtemp_10
     V8_11+=Vtemp_11
     V8_12+=Vtemp_12
     V8_13+=Vtemp_13
     V8_14+=Vtemp_14
     V8_15+=Vtemp_15
     V8_16+=Vtemp_16
     V8_17+=Vtemp_17
     V8_18+=Vtemp_18
     V8_19+=Vtemp_19
     V8_20+=Vtemp_20
#
#
     etemp2_1=V8_1
     etemp2_2=V8_2
     etemp2_3=V8_3
     etemp2_4=V8_4
     etemp2_5=V8_5
     etemp2_6=V8_6
     etemp2_7=V8_7
     etemp2_8=V8_8
     etemp2_9=V8_9
     etemp2_10=V8_10
     etemp2_11=V8_11
     etemp2_12=V8_12
     etemp2_13=V8_13
     etemp2_14=V8_14
     etemp2_15=V8_15
     etemp2_16=V8_16
     etemp2_17=V8_17
     etemp2_18=V8_18
     etemp2_19=V8_19
     etemp2_20=V8_20
#
     sqr=0.0
     etemp=V6_1*etemp2_1
     sqr+=etemp
     etemp=V6_2*etemp2_2
     sqr+=etemp
     etemp=V6_3*etemp2_3
     sqr+=etemp
     etemp=V6_4*etemp2_4
     sqr+=etemp
     etemp=V6_5*etemp2_5
     sqr+=etemp
     etemp=V6_6*etemp2_6
     sqr+=etemp
     etemp=V6_7*etemp2_7
     sqr+=etemp
     etemp=V6_8*etemp2_8
     sqr+=etemp
     etemp=V6_9*etemp2_9
     sqr+=etemp
     etemp=V6_10*etemp2_10
     sqr+=etemp
     etemp=V6_11*etemp2_11
     sqr+=etemp
     etemp=V6_12*etemp2_12
     sqr+=etemp
     etemp=V6_13*etemp2_13
     sqr+=etemp
     etemp=V6_14*etemp2_14
     sqr+=etemp
     etemp=V6_15*etemp2_15
     sqr+=etemp
     etemp=V6_16*etemp2_16
     sqr+=etemp
     etemp=V6_17*etemp2_17
     sqr+=etemp
     etemp=V6_18*etemp2_18
     sqr+=etemp
     etemp=V6_19*etemp2_19
     sqr+=etemp
     etemp=V6_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V6_1*sqr
     Vtemp_2=V6_2*sqr
     Vtemp_3=V6_3*sqr
     Vtemp_4=V6_4*sqr
     Vtemp_5=V6_5*sqr
     Vtemp_6=V6_6*sqr
     Vtemp_7=V6_7*sqr
     Vtemp_8=V6_8*sqr
     Vtemp_9=V6_9*sqr
     Vtemp_10=V6_10*sqr
     Vtemp_11=V6_11*sqr
     Vtemp_12=V6_12*sqr
     Vtemp_13=V6_13*sqr
     Vtemp_14=V6_14*sqr
     Vtemp_15=V6_15*sqr
     Vtemp_16=V6_16*sqr
     Vtemp_17=V6_17*sqr
     Vtemp_18=V6_18*sqr
     Vtemp_19=V6_19*sqr
     Vtemp_20=V6_20*sqr
#
     V8_1+=Vtemp_1
     V8_2+=Vtemp_2
     V8_3+=Vtemp_3
     V8_4+=Vtemp_4
     V8_5+=Vtemp_5
     V8_6+=Vtemp_6
     V8_7+=Vtemp_7
     V8_8+=Vtemp_8
     V8_9+=Vtemp_9
     V8_10+=Vtemp_10
     V8_11+=Vtemp_11
     V8_12+=Vtemp_12
     V8_13+=Vtemp_13
     V8_14+=Vtemp_14
     V8_15+=Vtemp_15
     V8_16+=Vtemp_16
     V8_17+=Vtemp_17
     V8_18+=Vtemp_18
     V8_19+=Vtemp_19
     V8_20+=Vtemp_20
#
#
     etemp2_1=V8_1
     etemp2_2=V8_2
     etemp2_3=V8_3
     etemp2_4=V8_4
     etemp2_5=V8_5
     etemp2_6=V8_6
     etemp2_7=V8_7
     etemp2_8=V8_8
     etemp2_9=V8_9
     etemp2_10=V8_10
     etemp2_11=V8_11
     etemp2_12=V8_12
     etemp2_13=V8_13
     etemp2_14=V8_14
     etemp2_15=V8_15
     etemp2_16=V8_16
     etemp2_17=V8_17
     etemp2_18=V8_18
     etemp2_19=V8_19
     etemp2_20=V8_20
#
     sqr=0.0
     etemp=V7_1*etemp2_1
     sqr+=etemp
     etemp=V7_2*etemp2_2
     sqr+=etemp
     etemp=V7_3*etemp2_3
     sqr+=etemp
     etemp=V7_4*etemp2_4
     sqr+=etemp
     etemp=V7_5*etemp2_5
     sqr+=etemp
     etemp=V7_6*etemp2_6
     sqr+=etemp
     etemp=V7_7*etemp2_7
     sqr+=etemp
     etemp=V7_8*etemp2_8
     sqr+=etemp
     etemp=V7_9*etemp2_9
     sqr+=etemp
     etemp=V7_10*etemp2_10
     sqr+=etemp
     etemp=V7_11*etemp2_11
     sqr+=etemp
     etemp=V7_12*etemp2_12
     sqr+=etemp
     etemp=V7_13*etemp2_13
     sqr+=etemp
     etemp=V7_14*etemp2_14
     sqr+=etemp
     etemp=V7_15*etemp2_15
     sqr+=etemp
     etemp=V7_16*etemp2_16
     sqr+=etemp
     etemp=V7_17*etemp2_17
     sqr+=etemp
     etemp=V7_18*etemp2_18
     sqr+=etemp
     etemp=V7_19*etemp2_19
     sqr+=etemp
     etemp=V7_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V7_1*sqr
     Vtemp_2=V7_2*sqr
     Vtemp_3=V7_3*sqr
     Vtemp_4=V7_4*sqr
     Vtemp_5=V7_5*sqr
     Vtemp_6=V7_6*sqr
     Vtemp_7=V7_7*sqr
     Vtemp_8=V7_8*sqr
     Vtemp_9=V7_9*sqr
     Vtemp_10=V7_10*sqr
     Vtemp_11=V7_11*sqr
     Vtemp_12=V7_12*sqr
     Vtemp_13=V7_13*sqr
     Vtemp_14=V7_14*sqr
     Vtemp_15=V7_15*sqr
     Vtemp_16=V7_16*sqr
     Vtemp_17=V7_17*sqr
     Vtemp_18=V7_18*sqr
     Vtemp_19=V7_19*sqr
     Vtemp_20=V7_20*sqr
#
     V8_1+=Vtemp_1
     V8_2+=Vtemp_2
     V8_3+=Vtemp_3
     V8_4+=Vtemp_4
     V8_5+=Vtemp_5
     V8_6+=Vtemp_6
     V8_7+=Vtemp_7
     V8_8+=Vtemp_8
     V8_9+=Vtemp_9
     V8_10+=Vtemp_10
     V8_11+=Vtemp_11
     V8_12+=Vtemp_12
     V8_13+=Vtemp_13
     V8_14+=Vtemp_14
     V8_15+=Vtemp_15
     V8_16+=Vtemp_16
     V8_17+=Vtemp_17
     V8_18+=Vtemp_18
     V8_19+=Vtemp_19
     V8_20+=Vtemp_20
#
#
     Vtemp_1=V8_1
     Vtemp_2=V8_2
     Vtemp_3=V8_3
     Vtemp_4=V8_4
     Vtemp_5=V8_5
     Vtemp_6=V8_6
     Vtemp_7=V8_7
     Vtemp_8=V8_8
     Vtemp_9=V8_9
     Vtemp_10=V8_10
     Vtemp_11=V8_11
     Vtemp_12=V8_12
     Vtemp_13=V8_13
     Vtemp_14=V8_14
     Vtemp_15=V8_15
     Vtemp_16=V8_16
     Vtemp_17=V8_17
     Vtemp_18=V8_18
     Vtemp_19=V8_19
     Vtemp_20=V8_20
#
     sqr=0.0
#
     etemp=V8_1*Vtemp_1
     sqr+=etemp
     etemp=V8_2*Vtemp_2
     sqr+=etemp
     etemp=V8_3*Vtemp_3
     sqr+=etemp
     etemp=V8_4*Vtemp_4
     sqr+=etemp
     etemp=V8_5*Vtemp_5
     sqr+=etemp
     etemp=V8_6*Vtemp_6
     sqr+=etemp
     etemp=V8_7*Vtemp_7
     sqr+=etemp
     etemp=V8_8*Vtemp_8
     sqr+=etemp
     etemp=V8_9*Vtemp_9
     sqr+=etemp
     etemp=V8_10*Vtemp_10
     sqr+=etemp
     etemp=V8_11*Vtemp_11
     sqr+=etemp
     etemp=V8_12*Vtemp_12
     sqr+=etemp
     etemp=V8_13*Vtemp_13
     sqr+=etemp
     etemp=V8_14*Vtemp_14
     sqr+=etemp
     etemp=V8_15*Vtemp_15
     sqr+=etemp
     etemp=V8_16*Vtemp_16
     sqr+=etemp
     etemp=V8_17*Vtemp_17
     sqr+=etemp
     etemp=V8_18*Vtemp_18
     sqr+=etemp
     etemp=V8_19*Vtemp_19
     sqr+=etemp
     etemp=V8_20*Vtemp_20
     sqr+=etemp
#
       exponent=0.5
       execute square_root sqr exponent
       sqr2=1.0/sqr
#
     V8_1*=sqr2
     V8_2*=sqr2
     V8_3*=sqr2
     V8_4*=sqr2
     V8_5*=sqr2
     V8_6*=sqr2
     V8_7*=sqr2
     V8_8*=sqr2
     V8_9*=sqr2
     V8_10*=sqr2
     V8_11*=sqr2
     V8_12*=sqr2
     V8_13*=sqr2
     V8_14*=sqr2
     V8_15*=sqr2
     V8_16*=sqr2
     V8_17*=sqr2
     V8_18*=sqr2
     V8_19*=sqr2
     V8_20*=sqr2
#
#------9 vectors -------------------------------
#
     etemp2_1=V9_1
     etemp2_2=V9_2
     etemp2_3=V9_3
     etemp2_4=V9_4
     etemp2_5=V9_5
     etemp2_6=V9_6
     etemp2_7=V9_7
     etemp2_8=V9_8
     etemp2_9=V9_9
     etemp2_10=V9_10
     etemp2_11=V9_11
     etemp2_12=V9_12
     etemp2_13=V9_13
     etemp2_14=V9_14
     etemp2_15=V9_15
     etemp2_16=V9_16
     etemp2_17=V9_17
     etemp2_18=V9_18
     etemp2_19=V9_19
     etemp2_20=V9_20
#
     sqr=0.0
     etemp=V1_1*etemp2_1
     sqr+=etemp
     etemp=V1_2*etemp2_2
     sqr+=etemp
     etemp=V1_3*etemp2_3
     sqr+=etemp
     etemp=V1_4*etemp2_4
     sqr+=etemp
     etemp=V1_5*etemp2_5
     sqr+=etemp
     etemp=V1_6*etemp2_6
     sqr+=etemp
     etemp=V1_7*etemp2_7
     sqr+=etemp
     etemp=V1_8*etemp2_8
     sqr+=etemp
     etemp=V1_9*etemp2_9
     sqr+=etemp
     etemp=V1_10*etemp2_10
     sqr+=etemp
     etemp=V1_11*etemp2_11
     sqr+=etemp
     etemp=V1_12*etemp2_12
     sqr+=etemp
     etemp=V1_13*etemp2_13
     sqr+=etemp
     etemp=V1_14*etemp2_14
     sqr+=etemp
     etemp=V1_15*etemp2_15
     sqr+=etemp
     etemp=V1_16*etemp2_16
     sqr+=etemp
     etemp=V1_17*etemp2_17
     sqr+=etemp
     etemp=V1_18*etemp2_18
     sqr+=etemp
     etemp=V1_19*etemp2_19
     sqr+=etemp
     etemp=V1_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V1_1*sqr
     Vtemp_2=V1_2*sqr
     Vtemp_3=V1_3*sqr
     Vtemp_4=V1_4*sqr
     Vtemp_5=V1_5*sqr
     Vtemp_6=V1_6*sqr
     Vtemp_7=V1_7*sqr
     Vtemp_8=V1_8*sqr
     Vtemp_9=V1_9*sqr
     Vtemp_10=V1_10*sqr
     Vtemp_11=V1_11*sqr
     Vtemp_12=V1_12*sqr
     Vtemp_13=V1_13*sqr
     Vtemp_14=V1_14*sqr
     Vtemp_15=V1_15*sqr
     Vtemp_16=V1_16*sqr
     Vtemp_17=V1_17*sqr
     Vtemp_18=V1_18*sqr
     Vtemp_19=V1_19*sqr
     Vtemp_20=V1_20*sqr
#
     V9_1+=Vtemp_1
     V9_2+=Vtemp_2
     V9_3+=Vtemp_3
     V9_4+=Vtemp_4
     V9_5+=Vtemp_5
     V9_6+=Vtemp_6
     V9_7+=Vtemp_7
     V9_8+=Vtemp_8
     V9_9+=Vtemp_9
     V9_10+=Vtemp_10
     V9_11+=Vtemp_11
     V9_12+=Vtemp_12
     V9_13+=Vtemp_13
     V9_14+=Vtemp_14
     V9_15+=Vtemp_15
     V9_16+=Vtemp_16
     V9_17+=Vtemp_17
     V9_18+=Vtemp_18
     V9_19+=Vtemp_19
     V9_20+=Vtemp_20
#
#
     etemp2_1=V9_1
     etemp2_2=V9_2
     etemp2_3=V9_3
     etemp2_4=V9_4
     etemp2_5=V9_5
     etemp2_6=V9_6
     etemp2_7=V9_7
     etemp2_8=V9_8
     etemp2_9=V9_9
     etemp2_10=V9_10
     etemp2_11=V9_11
     etemp2_12=V9_12
     etemp2_13=V9_13
     etemp2_14=V9_14
     etemp2_15=V9_15
     etemp2_16=V9_16
     etemp2_17=V9_17
     etemp2_18=V9_18
     etemp2_19=V9_19
     etemp2_20=V9_20
#
     sqr=0.0
     etemp=V2_1*etemp2_1
     sqr+=etemp
     etemp=V2_2*etemp2_2
     sqr+=etemp
     etemp=V2_3*etemp2_3
     sqr+=etemp
     etemp=V2_4*etemp2_4
     sqr+=etemp
     etemp=V2_5*etemp2_5
     sqr+=etemp
     etemp=V2_6*etemp2_6
     sqr+=etemp
     etemp=V2_7*etemp2_7
     sqr+=etemp
     etemp=V2_8*etemp2_8
     sqr+=etemp
     etemp=V2_9*etemp2_9
     sqr+=etemp
     etemp=V2_10*etemp2_10
     sqr+=etemp
     etemp=V2_11*etemp2_11
     sqr+=etemp
     etemp=V2_12*etemp2_12
     sqr+=etemp
     etemp=V2_13*etemp2_13
     sqr+=etemp
     etemp=V2_14*etemp2_14
     sqr+=etemp
     etemp=V2_15*etemp2_15
     sqr+=etemp
     etemp=V2_16*etemp2_16
     sqr+=etemp
     etemp=V2_17*etemp2_17
     sqr+=etemp
     etemp=V2_18*etemp2_18
     sqr+=etemp
     etemp=V2_19*etemp2_19
     sqr+=etemp
     etemp=V2_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V2_1*sqr
     Vtemp_2=V2_2*sqr
     Vtemp_3=V2_3*sqr
     Vtemp_4=V2_4*sqr
     Vtemp_5=V2_5*sqr
     Vtemp_6=V2_6*sqr
     Vtemp_7=V2_7*sqr
     Vtemp_8=V2_8*sqr
     Vtemp_9=V2_9*sqr
     Vtemp_10=V2_10*sqr
     Vtemp_11=V2_11*sqr
     Vtemp_12=V2_12*sqr
     Vtemp_13=V2_13*sqr
     Vtemp_14=V2_14*sqr
     Vtemp_15=V2_15*sqr
     Vtemp_16=V2_16*sqr
     Vtemp_17=V2_17*sqr
     Vtemp_18=V2_18*sqr
     Vtemp_19=V2_19*sqr
     Vtemp_20=V2_20*sqr
#
     V9_1+=Vtemp_1
     V9_2+=Vtemp_2
     V9_3+=Vtemp_3
     V9_4+=Vtemp_4
     V9_5+=Vtemp_5
     V9_6+=Vtemp_6
     V9_7+=Vtemp_7
     V9_8+=Vtemp_8
     V9_9+=Vtemp_9
     V9_10+=Vtemp_10
     V9_11+=Vtemp_11
     V9_12+=Vtemp_12
     V9_13+=Vtemp_13
     V9_14+=Vtemp_14
     V9_15+=Vtemp_15
     V9_16+=Vtemp_16
     V9_17+=Vtemp_17
     V9_18+=Vtemp_18
     V9_19+=Vtemp_19
     V9_20+=Vtemp_20
#
#
     etemp2_1=V9_1
     etemp2_2=V9_2
     etemp2_3=V9_3
     etemp2_4=V9_4
     etemp2_5=V9_5
     etemp2_6=V9_6
     etemp2_7=V9_7
     etemp2_8=V9_8
     etemp2_9=V9_9
     etemp2_10=V9_10
     etemp2_11=V9_11
     etemp2_12=V9_12
     etemp2_13=V9_13
     etemp2_14=V9_14
     etemp2_15=V9_15
     etemp2_16=V9_16
     etemp2_17=V9_17
     etemp2_18=V9_18
     etemp2_19=V9_19
     etemp2_20=V9_20
#
     sqr=0.0
     etemp=V3_1*etemp2_1
     sqr+=etemp
     etemp=V3_2*etemp2_2
     sqr+=etemp
     etemp=V3_3*etemp2_3
     sqr+=etemp
     etemp=V3_4*etemp2_4
     sqr+=etemp
     etemp=V3_5*etemp2_5
     sqr+=etemp
     etemp=V3_6*etemp2_6
     sqr+=etemp
     etemp=V3_7*etemp2_7
     sqr+=etemp
     etemp=V3_8*etemp2_8
     sqr+=etemp
     etemp=V3_9*etemp2_9
     sqr+=etemp
     etemp=V3_10*etemp2_10
     sqr+=etemp
     etemp=V3_11*etemp2_11
     sqr+=etemp
     etemp=V3_12*etemp2_12
     sqr+=etemp
     etemp=V3_13*etemp2_13
     sqr+=etemp
     etemp=V3_14*etemp2_14
     sqr+=etemp
     etemp=V3_15*etemp2_15
     sqr+=etemp
     etemp=V3_16*etemp2_16
     sqr+=etemp
     etemp=V3_17*etemp2_17
     sqr+=etemp
     etemp=V3_18*etemp2_18
     sqr+=etemp
     etemp=V3_19*etemp2_19
     sqr+=etemp
     etemp=V3_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V3_1*sqr
     Vtemp_2=V3_2*sqr
     Vtemp_3=V3_3*sqr
     Vtemp_4=V3_4*sqr
     Vtemp_5=V3_5*sqr
     Vtemp_6=V3_6*sqr
     Vtemp_7=V3_7*sqr
     Vtemp_8=V3_8*sqr
     Vtemp_9=V3_9*sqr
     Vtemp_10=V3_10*sqr
     Vtemp_11=V3_11*sqr
     Vtemp_12=V3_12*sqr
     Vtemp_13=V3_13*sqr
     Vtemp_14=V3_14*sqr
     Vtemp_15=V3_15*sqr
     Vtemp_16=V3_16*sqr
     Vtemp_17=V3_17*sqr
     Vtemp_18=V3_18*sqr
     Vtemp_19=V3_19*sqr
     Vtemp_20=V3_20*sqr
#
     V9_1+=Vtemp_1
     V9_2+=Vtemp_2
     V9_3+=Vtemp_3
     V9_4+=Vtemp_4
     V9_5+=Vtemp_5
     V9_6+=Vtemp_6
     V9_7+=Vtemp_7
     V9_8+=Vtemp_8
     V9_9+=Vtemp_9
     V9_10+=Vtemp_10
     V9_11+=Vtemp_11
     V9_12+=Vtemp_12
     V9_13+=Vtemp_13
     V9_14+=Vtemp_14
     V9_15+=Vtemp_15
     V9_16+=Vtemp_16
     V9_17+=Vtemp_17
     V9_18+=Vtemp_18
     V9_19+=Vtemp_19
     V9_20+=Vtemp_20
#
#
     etemp2_1=V9_1
     etemp2_2=V9_2
     etemp2_3=V9_3
     etemp2_4=V9_4
     etemp2_5=V9_5
     etemp2_6=V9_6
     etemp2_7=V9_7
     etemp2_8=V9_8
     etemp2_9=V9_9
     etemp2_10=V9_10
     etemp2_11=V9_11
     etemp2_12=V9_12
     etemp2_13=V9_13
     etemp2_14=V9_14
     etemp2_15=V9_15
     etemp2_16=V9_16
     etemp2_17=V9_17
     etemp2_18=V9_18
     etemp2_19=V9_19
     etemp2_20=V9_20
#
     sqr=0.0
     etemp=V4_1*etemp2_1
     sqr+=etemp
     etemp=V4_2*etemp2_2
     sqr+=etemp
     etemp=V4_3*etemp2_3
     sqr+=etemp
     etemp=V4_4*etemp2_4
     sqr+=etemp
     etemp=V4_5*etemp2_5
     sqr+=etemp
     etemp=V4_6*etemp2_6
     sqr+=etemp
     etemp=V4_7*etemp2_7
     sqr+=etemp
     etemp=V4_8*etemp2_8
     sqr+=etemp
     etemp=V4_9*etemp2_9
     sqr+=etemp
     etemp=V4_10*etemp2_10
     sqr+=etemp
     etemp=V4_11*etemp2_11
     sqr+=etemp
     etemp=V4_12*etemp2_12
     sqr+=etemp
     etemp=V4_13*etemp2_13
     sqr+=etemp
     etemp=V4_14*etemp2_14
     sqr+=etemp
     etemp=V4_15*etemp2_15
     sqr+=etemp
     etemp=V4_16*etemp2_16
     sqr+=etemp
     etemp=V4_17*etemp2_17
     sqr+=etemp
     etemp=V4_18*etemp2_18
     sqr+=etemp
     etemp=V4_19*etemp2_19
     sqr+=etemp
     etemp=V4_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V4_1*sqr
     Vtemp_2=V4_2*sqr
     Vtemp_3=V4_3*sqr
     Vtemp_4=V4_4*sqr
     Vtemp_5=V4_5*sqr
     Vtemp_6=V4_6*sqr
     Vtemp_7=V4_7*sqr
     Vtemp_8=V4_8*sqr
     Vtemp_9=V4_9*sqr
     Vtemp_10=V4_10*sqr
     Vtemp_11=V4_11*sqr
     Vtemp_12=V4_12*sqr
     Vtemp_13=V4_13*sqr
     Vtemp_14=V4_14*sqr
     Vtemp_15=V4_15*sqr
     Vtemp_16=V4_16*sqr
     Vtemp_17=V4_17*sqr
     Vtemp_18=V4_18*sqr
     Vtemp_19=V4_19*sqr
     Vtemp_20=V4_20*sqr
#
     V9_1+=Vtemp_1
     V9_2+=Vtemp_2
     V9_3+=Vtemp_3
     V9_4+=Vtemp_4
     V9_5+=Vtemp_5
     V9_6+=Vtemp_6
     V9_7+=Vtemp_7
     V9_8+=Vtemp_8
     V9_9+=Vtemp_9
     V9_10+=Vtemp_10
     V9_11+=Vtemp_11
     V9_12+=Vtemp_12
     V9_13+=Vtemp_13
     V9_14+=Vtemp_14
     V9_15+=Vtemp_15
     V9_16+=Vtemp_16
     V9_17+=Vtemp_17
     V9_18+=Vtemp_18
     V9_19+=Vtemp_19
     V9_20+=Vtemp_20
#
#
     etemp2_1=V9_1
     etemp2_2=V9_2
     etemp2_3=V9_3
     etemp2_4=V9_4
     etemp2_5=V9_5
     etemp2_6=V9_6
     etemp2_7=V9_7
     etemp2_8=V9_8
     etemp2_9=V9_9
     etemp2_10=V9_10
     etemp2_11=V9_11
     etemp2_12=V9_12
     etemp2_13=V9_13
     etemp2_14=V9_14
     etemp2_15=V9_15
     etemp2_16=V9_16
     etemp2_17=V9_17
     etemp2_18=V9_18
     etemp2_19=V9_19
     etemp2_20=V9_20
#
     sqr=0.0
     etemp=V5_1*etemp2_1
     sqr+=etemp
     etemp=V5_2*etemp2_2
     sqr+=etemp
     etemp=V5_3*etemp2_3
     sqr+=etemp
     etemp=V5_4*etemp2_4
     sqr+=etemp
     etemp=V5_5*etemp2_5
     sqr+=etemp
     etemp=V5_6*etemp2_6
     sqr+=etemp
     etemp=V5_7*etemp2_7
     sqr+=etemp
     etemp=V5_8*etemp2_8
     sqr+=etemp
     etemp=V5_9*etemp2_9
     sqr+=etemp
     etemp=V5_10*etemp2_10
     sqr+=etemp
     etemp=V5_11*etemp2_11
     sqr+=etemp
     etemp=V5_12*etemp2_12
     sqr+=etemp
     etemp=V5_13*etemp2_13
     sqr+=etemp
     etemp=V5_14*etemp2_14
     sqr+=etemp
     etemp=V5_15*etemp2_15
     sqr+=etemp
     etemp=V5_16*etemp2_16
     sqr+=etemp
     etemp=V5_17*etemp2_17
     sqr+=etemp
     etemp=V5_18*etemp2_18
     sqr+=etemp
     etemp=V5_19*etemp2_19
     sqr+=etemp
     etemp=V5_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V5_1*sqr
     Vtemp_2=V5_2*sqr
     Vtemp_3=V5_3*sqr
     Vtemp_4=V5_4*sqr
     Vtemp_5=V5_5*sqr
     Vtemp_6=V5_6*sqr
     Vtemp_7=V5_7*sqr
     Vtemp_8=V5_8*sqr
     Vtemp_9=V5_9*sqr
     Vtemp_10=V5_10*sqr
     Vtemp_11=V5_11*sqr
     Vtemp_12=V5_12*sqr
     Vtemp_13=V5_13*sqr
     Vtemp_14=V5_14*sqr
     Vtemp_15=V5_15*sqr
     Vtemp_16=V5_16*sqr
     Vtemp_17=V5_17*sqr
     Vtemp_18=V5_18*sqr
     Vtemp_19=V5_19*sqr
     Vtemp_20=V5_20*sqr
#
     V9_1+=Vtemp_1
     V9_2+=Vtemp_2
     V9_3+=Vtemp_3
     V9_4+=Vtemp_4
     V9_5+=Vtemp_5
     V9_6+=Vtemp_6
     V9_7+=Vtemp_7
     V9_8+=Vtemp_8
     V9_9+=Vtemp_9
     V9_10+=Vtemp_10
     V9_11+=Vtemp_11
     V9_12+=Vtemp_12
     V9_13+=Vtemp_13
     V9_14+=Vtemp_14
     V9_15+=Vtemp_15
     V9_16+=Vtemp_16
     V9_17+=Vtemp_17
     V9_18+=Vtemp_18
     V9_19+=Vtemp_19
     V9_20+=Vtemp_20
#
#
     etemp2_1=V9_1
     etemp2_2=V9_2
     etemp2_3=V9_3
     etemp2_4=V9_4
     etemp2_5=V9_5
     etemp2_6=V9_6
     etemp2_7=V9_7
     etemp2_8=V9_8
     etemp2_9=V9_9
     etemp2_10=V9_10
     etemp2_11=V9_11
     etemp2_12=V9_12
     etemp2_13=V9_13
     etemp2_14=V9_14
     etemp2_15=V9_15
     etemp2_16=V9_16
     etemp2_17=V9_17
     etemp2_18=V9_18
     etemp2_19=V9_19
     etemp2_20=V9_20
#
     sqr=0.0
     etemp=V6_1*etemp2_1
     sqr+=etemp
     etemp=V6_2*etemp2_2
     sqr+=etemp
     etemp=V6_3*etemp2_3
     sqr+=etemp
     etemp=V6_4*etemp2_4
     sqr+=etemp
     etemp=V6_5*etemp2_5
     sqr+=etemp
     etemp=V6_6*etemp2_6
     sqr+=etemp
     etemp=V6_7*etemp2_7
     sqr+=etemp
     etemp=V6_8*etemp2_8
     sqr+=etemp
     etemp=V6_9*etemp2_9
     sqr+=etemp
     etemp=V6_10*etemp2_10
     sqr+=etemp
     etemp=V6_11*etemp2_11
     sqr+=etemp
     etemp=V6_12*etemp2_12
     sqr+=etemp
     etemp=V6_13*etemp2_13
     sqr+=etemp
     etemp=V6_14*etemp2_14
     sqr+=etemp
     etemp=V6_15*etemp2_15
     sqr+=etemp
     etemp=V6_16*etemp2_16
     sqr+=etemp
     etemp=V6_17*etemp2_17
     sqr+=etemp
     etemp=V6_18*etemp2_18
     sqr+=etemp
     etemp=V6_19*etemp2_19
     sqr+=etemp
     etemp=V6_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V6_1*sqr
     Vtemp_2=V6_2*sqr
     Vtemp_3=V6_3*sqr
     Vtemp_4=V6_4*sqr
     Vtemp_5=V6_5*sqr
     Vtemp_6=V6_6*sqr
     Vtemp_7=V6_7*sqr
     Vtemp_8=V6_8*sqr
     Vtemp_9=V6_9*sqr
     Vtemp_10=V6_10*sqr
     Vtemp_11=V6_11*sqr
     Vtemp_12=V6_12*sqr
     Vtemp_13=V6_13*sqr
     Vtemp_14=V6_14*sqr
     Vtemp_15=V6_15*sqr
     Vtemp_16=V6_16*sqr
     Vtemp_17=V6_17*sqr
     Vtemp_18=V6_18*sqr
     Vtemp_19=V6_19*sqr
     Vtemp_20=V6_20*sqr
#
     V9_1+=Vtemp_1
     V9_2+=Vtemp_2
     V9_3+=Vtemp_3
     V9_4+=Vtemp_4
     V9_5+=Vtemp_5
     V9_6+=Vtemp_6
     V9_7+=Vtemp_7
     V9_8+=Vtemp_8
     V9_9+=Vtemp_9
     V9_10+=Vtemp_10
     V9_11+=Vtemp_11
     V9_12+=Vtemp_12
     V9_13+=Vtemp_13
     V9_14+=Vtemp_14
     V9_15+=Vtemp_15
     V9_16+=Vtemp_16
     V9_17+=Vtemp_17
     V9_18+=Vtemp_18
     V9_19+=Vtemp_19
     V9_20+=Vtemp_20
#
#
     etemp2_1=V9_1
     etemp2_2=V9_2
     etemp2_3=V9_3
     etemp2_4=V9_4
     etemp2_5=V9_5
     etemp2_6=V9_6
     etemp2_7=V9_7
     etemp2_8=V9_8
     etemp2_9=V9_9
     etemp2_10=V9_10
     etemp2_11=V9_11
     etemp2_12=V9_12
     etemp2_13=V9_13
     etemp2_14=V9_14
     etemp2_15=V9_15
     etemp2_16=V9_16
     etemp2_17=V9_17
     etemp2_18=V9_18
     etemp2_19=V9_19
     etemp2_20=V9_20
#
     sqr=0.0
     etemp=V7_1*etemp2_1
     sqr+=etemp
     etemp=V7_2*etemp2_2
     sqr+=etemp
     etemp=V7_3*etemp2_3
     sqr+=etemp
     etemp=V7_4*etemp2_4
     sqr+=etemp
     etemp=V7_5*etemp2_5
     sqr+=etemp
     etemp=V7_6*etemp2_6
     sqr+=etemp
     etemp=V7_7*etemp2_7
     sqr+=etemp
     etemp=V7_8*etemp2_8
     sqr+=etemp
     etemp=V7_9*etemp2_9
     sqr+=etemp
     etemp=V7_10*etemp2_10
     sqr+=etemp
     etemp=V7_11*etemp2_11
     sqr+=etemp
     etemp=V7_12*etemp2_12
     sqr+=etemp
     etemp=V7_13*etemp2_13
     sqr+=etemp
     etemp=V7_14*etemp2_14
     sqr+=etemp
     etemp=V7_15*etemp2_15
     sqr+=etemp
     etemp=V7_16*etemp2_16
     sqr+=etemp
     etemp=V7_17*etemp2_17
     sqr+=etemp
     etemp=V7_18*etemp2_18
     sqr+=etemp
     etemp=V7_19*etemp2_19
     sqr+=etemp
     etemp=V7_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V7_1*sqr
     Vtemp_2=V7_2*sqr
     Vtemp_3=V7_3*sqr
     Vtemp_4=V7_4*sqr
     Vtemp_5=V7_5*sqr
     Vtemp_6=V7_6*sqr
     Vtemp_7=V7_7*sqr
     Vtemp_8=V7_8*sqr
     Vtemp_9=V7_9*sqr
     Vtemp_10=V7_10*sqr
     Vtemp_11=V7_11*sqr
     Vtemp_12=V7_12*sqr
     Vtemp_13=V7_13*sqr
     Vtemp_14=V7_14*sqr
     Vtemp_15=V7_15*sqr
     Vtemp_16=V7_16*sqr
     Vtemp_17=V7_17*sqr
     Vtemp_18=V7_18*sqr
     Vtemp_19=V7_19*sqr
     Vtemp_20=V7_20*sqr
#
     V9_1+=Vtemp_1
     V9_2+=Vtemp_2
     V9_3+=Vtemp_3
     V9_4+=Vtemp_4
     V9_5+=Vtemp_5
     V9_6+=Vtemp_6
     V9_7+=Vtemp_7
     V9_8+=Vtemp_8
     V9_9+=Vtemp_9
     V9_10+=Vtemp_10
     V9_11+=Vtemp_11
     V9_12+=Vtemp_12
     V9_13+=Vtemp_13
     V9_14+=Vtemp_14
     V9_15+=Vtemp_15
     V9_16+=Vtemp_16
     V9_17+=Vtemp_17
     V9_18+=Vtemp_18
     V9_19+=Vtemp_19
     V9_20+=Vtemp_20
#
#
     etemp2_1=V9_1
     etemp2_2=V9_2
     etemp2_3=V9_3
     etemp2_4=V9_4
     etemp2_5=V9_5
     etemp2_6=V9_6
     etemp2_7=V9_7
     etemp2_8=V9_8
     etemp2_9=V9_9
     etemp2_10=V9_10
     etemp2_11=V9_11
     etemp2_12=V9_12
     etemp2_13=V9_13
     etemp2_14=V9_14
     etemp2_15=V9_15
     etemp2_16=V9_16
     etemp2_17=V9_17
     etemp2_18=V9_18
     etemp2_19=V9_19
     etemp2_20=V9_20
#
     sqr=0.0
     etemp=V8_1*etemp2_1
     sqr+=etemp
     etemp=V8_2*etemp2_2
     sqr+=etemp
     etemp=V8_3*etemp2_3
     sqr+=etemp
     etemp=V8_4*etemp2_4
     sqr+=etemp
     etemp=V8_5*etemp2_5
     sqr+=etemp
     etemp=V8_6*etemp2_6
     sqr+=etemp
     etemp=V8_7*etemp2_7
     sqr+=etemp
     etemp=V8_8*etemp2_8
     sqr+=etemp
     etemp=V8_9*etemp2_9
     sqr+=etemp
     etemp=V8_10*etemp2_10
     sqr+=etemp
     etemp=V8_11*etemp2_11
     sqr+=etemp
     etemp=V8_12*etemp2_12
     sqr+=etemp
     etemp=V8_13*etemp2_13
     sqr+=etemp
     etemp=V8_14*etemp2_14
     sqr+=etemp
     etemp=V8_15*etemp2_15
     sqr+=etemp
     etemp=V8_16*etemp2_16
     sqr+=etemp
     etemp=V8_17*etemp2_17
     sqr+=etemp
     etemp=V8_18*etemp2_18
     sqr+=etemp
     etemp=V8_19*etemp2_19
     sqr+=etemp
     etemp=V8_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V8_1*sqr
     Vtemp_2=V8_2*sqr
     Vtemp_3=V8_3*sqr
     Vtemp_4=V8_4*sqr
     Vtemp_5=V8_5*sqr
     Vtemp_6=V8_6*sqr
     Vtemp_7=V8_7*sqr
     Vtemp_8=V8_8*sqr
     Vtemp_9=V8_9*sqr
     Vtemp_10=V8_10*sqr
     Vtemp_11=V8_11*sqr
     Vtemp_12=V8_12*sqr
     Vtemp_13=V8_13*sqr
     Vtemp_14=V8_14*sqr
     Vtemp_15=V8_15*sqr
     Vtemp_16=V8_16*sqr
     Vtemp_17=V8_17*sqr
     Vtemp_18=V8_18*sqr
     Vtemp_19=V8_19*sqr
     Vtemp_20=V8_20*sqr
#
     V9_1+=Vtemp_1
     V9_2+=Vtemp_2
     V9_3+=Vtemp_3
     V9_4+=Vtemp_4
     V9_5+=Vtemp_5
     V9_6+=Vtemp_6
     V9_7+=Vtemp_7
     V9_8+=Vtemp_8
     V9_9+=Vtemp_9
     V9_10+=Vtemp_10
     V9_11+=Vtemp_11
     V9_12+=Vtemp_12
     V9_13+=Vtemp_13
     V9_14+=Vtemp_14
     V9_15+=Vtemp_15
     V9_16+=Vtemp_16
     V9_17+=Vtemp_17
     V9_18+=Vtemp_18
     V9_19+=Vtemp_19
     V9_20+=Vtemp_20
#
#
     Vtemp_1=V9_1
     Vtemp_2=V9_2
     Vtemp_3=V9_3
     Vtemp_4=V9_4
     Vtemp_5=V9_5
     Vtemp_6=V9_6
     Vtemp_7=V9_7
     Vtemp_8=V9_8
     Vtemp_9=V9_9
     Vtemp_10=V9_10
     Vtemp_11=V9_11
     Vtemp_12=V9_12
     Vtemp_13=V9_13
     Vtemp_14=V9_14
     Vtemp_15=V9_15
     Vtemp_16=V9_16
     Vtemp_17=V9_17
     Vtemp_18=V9_18
     Vtemp_19=V9_19
     Vtemp_20=V9_20
#
     sqr=0.0
#
     etemp=V9_1*Vtemp_1
     sqr+=etemp
     etemp=V9_2*Vtemp_2
     sqr+=etemp
     etemp=V9_3*Vtemp_3
     sqr+=etemp
     etemp=V9_4*Vtemp_4
     sqr+=etemp
     etemp=V9_5*Vtemp_5
     sqr+=etemp
     etemp=V9_6*Vtemp_6
     sqr+=etemp
     etemp=V9_7*Vtemp_7
     sqr+=etemp
     etemp=V9_8*Vtemp_8
     sqr+=etemp
     etemp=V9_9*Vtemp_9
     sqr+=etemp
     etemp=V9_10*Vtemp_10
     sqr+=etemp
     etemp=V9_11*Vtemp_11
     sqr+=etemp
     etemp=V9_12*Vtemp_12
     sqr+=etemp
     etemp=V9_13*Vtemp_13
     sqr+=etemp
     etemp=V9_14*Vtemp_14
     sqr+=etemp
     etemp=V9_15*Vtemp_15
     sqr+=etemp
     etemp=V9_16*Vtemp_16
     sqr+=etemp
     etemp=V9_17*Vtemp_17
     sqr+=etemp
     etemp=V9_18*Vtemp_18
     sqr+=etemp
     etemp=V9_19*Vtemp_19
     sqr+=etemp
     etemp=V9_20*Vtemp_20
     sqr+=etemp
#
       exponent=0.5
       execute square_root sqr exponent
       sqr2=1.0/sqr
#
     V9_1*=sqr2
     V9_2*=sqr2
     V9_3*=sqr2
     V9_4*=sqr2
     V9_5*=sqr2
     V9_6*=sqr2
     V9_7*=sqr2
     V9_8*=sqr2
     V9_9*=sqr2
     V9_10*=sqr2
     V9_11*=sqr2
     V9_12*=sqr2
     V9_13*=sqr2
     V9_14*=sqr2
     V9_15*=sqr2
     V9_16*=sqr2
     V9_17*=sqr2
     V9_18*=sqr2
     V9_19*=sqr2
     V9_20*=sqr2
#
#------10 vectors -------------------------------
#
     etemp2_1=V10_1
     etemp2_2=V10_2
     etemp2_3=V10_3
     etemp2_4=V10_4
     etemp2_5=V10_5
     etemp2_6=V10_6
     etemp2_7=V10_7
     etemp2_8=V10_8
     etemp2_9=V10_9
     etemp2_10=V10_10
     etemp2_11=V10_11
     etemp2_12=V10_12
     etemp2_13=V10_13
     etemp2_14=V10_14
     etemp2_15=V10_15
     etemp2_16=V10_16
     etemp2_17=V10_17
     etemp2_18=V10_18
     etemp2_19=V10_19
     etemp2_20=V10_20
#
     sqr=0.0
     etemp=V1_1*etemp2_1
     sqr+=etemp
     etemp=V1_2*etemp2_2
     sqr+=etemp
     etemp=V1_3*etemp2_3
     sqr+=etemp
     etemp=V1_4*etemp2_4
     sqr+=etemp
     etemp=V1_5*etemp2_5
     sqr+=etemp
     etemp=V1_6*etemp2_6
     sqr+=etemp
     etemp=V1_7*etemp2_7
     sqr+=etemp
     etemp=V1_8*etemp2_8
     sqr+=etemp
     etemp=V1_9*etemp2_9
     sqr+=etemp
     etemp=V1_10*etemp2_10
     sqr+=etemp
     etemp=V1_11*etemp2_11
     sqr+=etemp
     etemp=V1_12*etemp2_12
     sqr+=etemp
     etemp=V1_13*etemp2_13
     sqr+=etemp
     etemp=V1_14*etemp2_14
     sqr+=etemp
     etemp=V1_15*etemp2_15
     sqr+=etemp
     etemp=V1_16*etemp2_16
     sqr+=etemp
     etemp=V1_17*etemp2_17
     sqr+=etemp
     etemp=V1_18*etemp2_18
     sqr+=etemp
     etemp=V1_19*etemp2_19
     sqr+=etemp
     etemp=V1_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V1_1*sqr
     Vtemp_2=V1_2*sqr
     Vtemp_3=V1_3*sqr
     Vtemp_4=V1_4*sqr
     Vtemp_5=V1_5*sqr
     Vtemp_6=V1_6*sqr
     Vtemp_7=V1_7*sqr
     Vtemp_8=V1_8*sqr
     Vtemp_9=V1_9*sqr
     Vtemp_10=V1_10*sqr
     Vtemp_11=V1_11*sqr
     Vtemp_12=V1_12*sqr
     Vtemp_13=V1_13*sqr
     Vtemp_14=V1_14*sqr
     Vtemp_15=V1_15*sqr
     Vtemp_16=V1_16*sqr
     Vtemp_17=V1_17*sqr
     Vtemp_18=V1_18*sqr
     Vtemp_19=V1_19*sqr
     Vtemp_20=V1_20*sqr
#
     V10_1+=Vtemp_1
     V10_2+=Vtemp_2
     V10_3+=Vtemp_3
     V10_4+=Vtemp_4
     V10_5+=Vtemp_5
     V10_6+=Vtemp_6
     V10_7+=Vtemp_7
     V10_8+=Vtemp_8
     V10_9+=Vtemp_9
     V10_10+=Vtemp_10
     V10_11+=Vtemp_11
     V10_12+=Vtemp_12
     V10_13+=Vtemp_13
     V10_14+=Vtemp_14
     V10_15+=Vtemp_15
     V10_16+=Vtemp_16
     V10_17+=Vtemp_17
     V10_18+=Vtemp_18
     V10_19+=Vtemp_19
     V10_20+=Vtemp_20
#
#
     etemp2_1=V10_1
     etemp2_2=V10_2
     etemp2_3=V10_3
     etemp2_4=V10_4
     etemp2_5=V10_5
     etemp2_6=V10_6
     etemp2_7=V10_7
     etemp2_8=V10_8
     etemp2_9=V10_9
     etemp2_10=V10_10
     etemp2_11=V10_11
     etemp2_12=V10_12
     etemp2_13=V10_13
     etemp2_14=V10_14
     etemp2_15=V10_15
     etemp2_16=V10_16
     etemp2_17=V10_17
     etemp2_18=V10_18
     etemp2_19=V10_19
     etemp2_20=V10_20
#
     sqr=0.0
     etemp=V2_1*etemp2_1
     sqr+=etemp
     etemp=V2_2*etemp2_2
     sqr+=etemp
     etemp=V2_3*etemp2_3
     sqr+=etemp
     etemp=V2_4*etemp2_4
     sqr+=etemp
     etemp=V2_5*etemp2_5
     sqr+=etemp
     etemp=V2_6*etemp2_6
     sqr+=etemp
     etemp=V2_7*etemp2_7
     sqr+=etemp
     etemp=V2_8*etemp2_8
     sqr+=etemp
     etemp=V2_9*etemp2_9
     sqr+=etemp
     etemp=V2_10*etemp2_10
     sqr+=etemp
     etemp=V2_11*etemp2_11
     sqr+=etemp
     etemp=V2_12*etemp2_12
     sqr+=etemp
     etemp=V2_13*etemp2_13
     sqr+=etemp
     etemp=V2_14*etemp2_14
     sqr+=etemp
     etemp=V2_15*etemp2_15
     sqr+=etemp
     etemp=V2_16*etemp2_16
     sqr+=etemp
     etemp=V2_17*etemp2_17
     sqr+=etemp
     etemp=V2_18*etemp2_18
     sqr+=etemp
     etemp=V2_19*etemp2_19
     sqr+=etemp
     etemp=V2_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V2_1*sqr
     Vtemp_2=V2_2*sqr
     Vtemp_3=V2_3*sqr
     Vtemp_4=V2_4*sqr
     Vtemp_5=V2_5*sqr
     Vtemp_6=V2_6*sqr
     Vtemp_7=V2_7*sqr
     Vtemp_8=V2_8*sqr
     Vtemp_9=V2_9*sqr
     Vtemp_10=V2_10*sqr
     Vtemp_11=V2_11*sqr
     Vtemp_12=V2_12*sqr
     Vtemp_13=V2_13*sqr
     Vtemp_14=V2_14*sqr
     Vtemp_15=V2_15*sqr
     Vtemp_16=V2_16*sqr
     Vtemp_17=V2_17*sqr
     Vtemp_18=V2_18*sqr
     Vtemp_19=V2_19*sqr
     Vtemp_20=V2_20*sqr
#
     V10_1+=Vtemp_1
     V10_2+=Vtemp_2
     V10_3+=Vtemp_3
     V10_4+=Vtemp_4
     V10_5+=Vtemp_5
     V10_6+=Vtemp_6
     V10_7+=Vtemp_7
     V10_8+=Vtemp_8
     V10_9+=Vtemp_9
     V10_10+=Vtemp_10
     V10_11+=Vtemp_11
     V10_12+=Vtemp_12
     V10_13+=Vtemp_13
     V10_14+=Vtemp_14
     V10_15+=Vtemp_15
     V10_16+=Vtemp_16
     V10_17+=Vtemp_17
     V10_18+=Vtemp_18
     V10_19+=Vtemp_19
     V10_20+=Vtemp_20
#
#
     etemp2_1=V10_1
     etemp2_2=V10_2
     etemp2_3=V10_3
     etemp2_4=V10_4
     etemp2_5=V10_5
     etemp2_6=V10_6
     etemp2_7=V10_7
     etemp2_8=V10_8
     etemp2_9=V10_9
     etemp2_10=V10_10
     etemp2_11=V10_11
     etemp2_12=V10_12
     etemp2_13=V10_13
     etemp2_14=V10_14
     etemp2_15=V10_15
     etemp2_16=V10_16
     etemp2_17=V10_17
     etemp2_18=V10_18
     etemp2_19=V10_19
     etemp2_20=V10_20
#
     sqr=0.0
     etemp=V3_1*etemp2_1
     sqr+=etemp
     etemp=V3_2*etemp2_2
     sqr+=etemp
     etemp=V3_3*etemp2_3
     sqr+=etemp
     etemp=V3_4*etemp2_4
     sqr+=etemp
     etemp=V3_5*etemp2_5
     sqr+=etemp
     etemp=V3_6*etemp2_6
     sqr+=etemp
     etemp=V3_7*etemp2_7
     sqr+=etemp
     etemp=V3_8*etemp2_8
     sqr+=etemp
     etemp=V3_9*etemp2_9
     sqr+=etemp
     etemp=V3_10*etemp2_10
     sqr+=etemp
     etemp=V3_11*etemp2_11
     sqr+=etemp
     etemp=V3_12*etemp2_12
     sqr+=etemp
     etemp=V3_13*etemp2_13
     sqr+=etemp
     etemp=V3_14*etemp2_14
     sqr+=etemp
     etemp=V3_15*etemp2_15
     sqr+=etemp
     etemp=V3_16*etemp2_16
     sqr+=etemp
     etemp=V3_17*etemp2_17
     sqr+=etemp
     etemp=V3_18*etemp2_18
     sqr+=etemp
     etemp=V3_19*etemp2_19
     sqr+=etemp
     etemp=V3_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V3_1*sqr
     Vtemp_2=V3_2*sqr
     Vtemp_3=V3_3*sqr
     Vtemp_4=V3_4*sqr
     Vtemp_5=V3_5*sqr
     Vtemp_6=V3_6*sqr
     Vtemp_7=V3_7*sqr
     Vtemp_8=V3_8*sqr
     Vtemp_9=V3_9*sqr
     Vtemp_10=V3_10*sqr
     Vtemp_11=V3_11*sqr
     Vtemp_12=V3_12*sqr
     Vtemp_13=V3_13*sqr
     Vtemp_14=V3_14*sqr
     Vtemp_15=V3_15*sqr
     Vtemp_16=V3_16*sqr
     Vtemp_17=V3_17*sqr
     Vtemp_18=V3_18*sqr
     Vtemp_19=V3_19*sqr
     Vtemp_20=V3_20*sqr
#
     V10_1+=Vtemp_1
     V10_2+=Vtemp_2
     V10_3+=Vtemp_3
     V10_4+=Vtemp_4
     V10_5+=Vtemp_5
     V10_6+=Vtemp_6
     V10_7+=Vtemp_7
     V10_8+=Vtemp_8
     V10_9+=Vtemp_9
     V10_10+=Vtemp_10
     V10_11+=Vtemp_11
     V10_12+=Vtemp_12
     V10_13+=Vtemp_13
     V10_14+=Vtemp_14
     V10_15+=Vtemp_15
     V10_16+=Vtemp_16
     V10_17+=Vtemp_17
     V10_18+=Vtemp_18
     V10_19+=Vtemp_19
     V10_20+=Vtemp_20
#
#
     etemp2_1=V10_1
     etemp2_2=V10_2
     etemp2_3=V10_3
     etemp2_4=V10_4
     etemp2_5=V10_5
     etemp2_6=V10_6
     etemp2_7=V10_7
     etemp2_8=V10_8
     etemp2_9=V10_9
     etemp2_10=V10_10
     etemp2_11=V10_11
     etemp2_12=V10_12
     etemp2_13=V10_13
     etemp2_14=V10_14
     etemp2_15=V10_15
     etemp2_16=V10_16
     etemp2_17=V10_17
     etemp2_18=V10_18
     etemp2_19=V10_19
     etemp2_20=V10_20
#
     sqr=0.0
     etemp=V4_1*etemp2_1
     sqr+=etemp
     etemp=V4_2*etemp2_2
     sqr+=etemp
     etemp=V4_3*etemp2_3
     sqr+=etemp
     etemp=V4_4*etemp2_4
     sqr+=etemp
     etemp=V4_5*etemp2_5
     sqr+=etemp
     etemp=V4_6*etemp2_6
     sqr+=etemp
     etemp=V4_7*etemp2_7
     sqr+=etemp
     etemp=V4_8*etemp2_8
     sqr+=etemp
     etemp=V4_9*etemp2_9
     sqr+=etemp
     etemp=V4_10*etemp2_10
     sqr+=etemp
     etemp=V4_11*etemp2_11
     sqr+=etemp
     etemp=V4_12*etemp2_12
     sqr+=etemp
     etemp=V4_13*etemp2_13
     sqr+=etemp
     etemp=V4_14*etemp2_14
     sqr+=etemp
     etemp=V4_15*etemp2_15
     sqr+=etemp
     etemp=V4_16*etemp2_16
     sqr+=etemp
     etemp=V4_17*etemp2_17
     sqr+=etemp
     etemp=V4_18*etemp2_18
     sqr+=etemp
     etemp=V4_19*etemp2_19
     sqr+=etemp
     etemp=V4_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V4_1*sqr
     Vtemp_2=V4_2*sqr
     Vtemp_3=V4_3*sqr
     Vtemp_4=V4_4*sqr
     Vtemp_5=V4_5*sqr
     Vtemp_6=V4_6*sqr
     Vtemp_7=V4_7*sqr
     Vtemp_8=V4_8*sqr
     Vtemp_9=V4_9*sqr
     Vtemp_10=V4_10*sqr
     Vtemp_11=V4_11*sqr
     Vtemp_12=V4_12*sqr
     Vtemp_13=V4_13*sqr
     Vtemp_14=V4_14*sqr
     Vtemp_15=V4_15*sqr
     Vtemp_16=V4_16*sqr
     Vtemp_17=V4_17*sqr
     Vtemp_18=V4_18*sqr
     Vtemp_19=V4_19*sqr
     Vtemp_20=V4_20*sqr
#
     V10_1+=Vtemp_1
     V10_2+=Vtemp_2
     V10_3+=Vtemp_3
     V10_4+=Vtemp_4
     V10_5+=Vtemp_5
     V10_6+=Vtemp_6
     V10_7+=Vtemp_7
     V10_8+=Vtemp_8
     V10_9+=Vtemp_9
     V10_10+=Vtemp_10
     V10_11+=Vtemp_11
     V10_12+=Vtemp_12
     V10_13+=Vtemp_13
     V10_14+=Vtemp_14
     V10_15+=Vtemp_15
     V10_16+=Vtemp_16
     V10_17+=Vtemp_17
     V10_18+=Vtemp_18
     V10_19+=Vtemp_19
     V10_20+=Vtemp_20
#
#
     etemp2_1=V10_1
     etemp2_2=V10_2
     etemp2_3=V10_3
     etemp2_4=V10_4
     etemp2_5=V10_5
     etemp2_6=V10_6
     etemp2_7=V10_7
     etemp2_8=V10_8
     etemp2_9=V10_9
     etemp2_10=V10_10
     etemp2_11=V10_11
     etemp2_12=V10_12
     etemp2_13=V10_13
     etemp2_14=V10_14
     etemp2_15=V10_15
     etemp2_16=V10_16
     etemp2_17=V10_17
     etemp2_18=V10_18
     etemp2_19=V10_19
     etemp2_20=V10_20
#
     sqr=0.0
     etemp=V5_1*etemp2_1
     sqr+=etemp
     etemp=V5_2*etemp2_2
     sqr+=etemp
     etemp=V5_3*etemp2_3
     sqr+=etemp
     etemp=V5_4*etemp2_4
     sqr+=etemp
     etemp=V5_5*etemp2_5
     sqr+=etemp
     etemp=V5_6*etemp2_6
     sqr+=etemp
     etemp=V5_7*etemp2_7
     sqr+=etemp
     etemp=V5_8*etemp2_8
     sqr+=etemp
     etemp=V5_9*etemp2_9
     sqr+=etemp
     etemp=V5_10*etemp2_10
     sqr+=etemp
     etemp=V5_11*etemp2_11
     sqr+=etemp
     etemp=V5_12*etemp2_12
     sqr+=etemp
     etemp=V5_13*etemp2_13
     sqr+=etemp
     etemp=V5_14*etemp2_14
     sqr+=etemp
     etemp=V5_15*etemp2_15
     sqr+=etemp
     etemp=V5_16*etemp2_16
     sqr+=etemp
     etemp=V5_17*etemp2_17
     sqr+=etemp
     etemp=V5_18*etemp2_18
     sqr+=etemp
     etemp=V5_19*etemp2_19
     sqr+=etemp
     etemp=V5_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V5_1*sqr
     Vtemp_2=V5_2*sqr
     Vtemp_3=V5_3*sqr
     Vtemp_4=V5_4*sqr
     Vtemp_5=V5_5*sqr
     Vtemp_6=V5_6*sqr
     Vtemp_7=V5_7*sqr
     Vtemp_8=V5_8*sqr
     Vtemp_9=V5_9*sqr
     Vtemp_10=V5_10*sqr
     Vtemp_11=V5_11*sqr
     Vtemp_12=V5_12*sqr
     Vtemp_13=V5_13*sqr
     Vtemp_14=V5_14*sqr
     Vtemp_15=V5_15*sqr
     Vtemp_16=V5_16*sqr
     Vtemp_17=V5_17*sqr
     Vtemp_18=V5_18*sqr
     Vtemp_19=V5_19*sqr
     Vtemp_20=V5_20*sqr
#
     V10_1+=Vtemp_1
     V10_2+=Vtemp_2
     V10_3+=Vtemp_3
     V10_4+=Vtemp_4
     V10_5+=Vtemp_5
     V10_6+=Vtemp_6
     V10_7+=Vtemp_7
     V10_8+=Vtemp_8
     V10_9+=Vtemp_9
     V10_10+=Vtemp_10
     V10_11+=Vtemp_11
     V10_12+=Vtemp_12
     V10_13+=Vtemp_13
     V10_14+=Vtemp_14
     V10_15+=Vtemp_15
     V10_16+=Vtemp_16
     V10_17+=Vtemp_17
     V10_18+=Vtemp_18
     V10_19+=Vtemp_19
     V10_20+=Vtemp_20
#
#
     etemp2_1=V10_1
     etemp2_2=V10_2
     etemp2_3=V10_3
     etemp2_4=V10_4
     etemp2_5=V10_5
     etemp2_6=V10_6
     etemp2_7=V10_7
     etemp2_8=V10_8
     etemp2_9=V10_9
     etemp2_10=V10_10
     etemp2_11=V10_11
     etemp2_12=V10_12
     etemp2_13=V10_13
     etemp2_14=V10_14
     etemp2_15=V10_15
     etemp2_16=V10_16
     etemp2_17=V10_17
     etemp2_18=V10_18
     etemp2_19=V10_19
     etemp2_20=V10_20
#
     sqr=0.0
     etemp=V6_1*etemp2_1
     sqr+=etemp
     etemp=V6_2*etemp2_2
     sqr+=etemp
     etemp=V6_3*etemp2_3
     sqr+=etemp
     etemp=V6_4*etemp2_4
     sqr+=etemp
     etemp=V6_5*etemp2_5
     sqr+=etemp
     etemp=V6_6*etemp2_6
     sqr+=etemp
     etemp=V6_7*etemp2_7
     sqr+=etemp
     etemp=V6_8*etemp2_8
     sqr+=etemp
     etemp=V6_9*etemp2_9
     sqr+=etemp
     etemp=V6_10*etemp2_10
     sqr+=etemp
     etemp=V6_11*etemp2_11
     sqr+=etemp
     etemp=V6_12*etemp2_12
     sqr+=etemp
     etemp=V6_13*etemp2_13
     sqr+=etemp
     etemp=V6_14*etemp2_14
     sqr+=etemp
     etemp=V6_15*etemp2_15
     sqr+=etemp
     etemp=V6_16*etemp2_16
     sqr+=etemp
     etemp=V6_17*etemp2_17
     sqr+=etemp
     etemp=V6_18*etemp2_18
     sqr+=etemp
     etemp=V6_19*etemp2_19
     sqr+=etemp
     etemp=V6_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V6_1*sqr
     Vtemp_2=V6_2*sqr
     Vtemp_3=V6_3*sqr
     Vtemp_4=V6_4*sqr
     Vtemp_5=V6_5*sqr
     Vtemp_6=V6_6*sqr
     Vtemp_7=V6_7*sqr
     Vtemp_8=V6_8*sqr
     Vtemp_9=V6_9*sqr
     Vtemp_10=V6_10*sqr
     Vtemp_11=V6_11*sqr
     Vtemp_12=V6_12*sqr
     Vtemp_13=V6_13*sqr
     Vtemp_14=V6_14*sqr
     Vtemp_15=V6_15*sqr
     Vtemp_16=V6_16*sqr
     Vtemp_17=V6_17*sqr
     Vtemp_18=V6_18*sqr
     Vtemp_19=V6_19*sqr
     Vtemp_20=V6_20*sqr
#
     V10_1+=Vtemp_1
     V10_2+=Vtemp_2
     V10_3+=Vtemp_3
     V10_4+=Vtemp_4
     V10_5+=Vtemp_5
     V10_6+=Vtemp_6
     V10_7+=Vtemp_7
     V10_8+=Vtemp_8
     V10_9+=Vtemp_9
     V10_10+=Vtemp_10
     V10_11+=Vtemp_11
     V10_12+=Vtemp_12
     V10_13+=Vtemp_13
     V10_14+=Vtemp_14
     V10_15+=Vtemp_15
     V10_16+=Vtemp_16
     V10_17+=Vtemp_17
     V10_18+=Vtemp_18
     V10_19+=Vtemp_19
     V10_20+=Vtemp_20
#
#
     etemp2_1=V10_1
     etemp2_2=V10_2
     etemp2_3=V10_3
     etemp2_4=V10_4
     etemp2_5=V10_5
     etemp2_6=V10_6
     etemp2_7=V10_7
     etemp2_8=V10_8
     etemp2_9=V10_9
     etemp2_10=V10_10
     etemp2_11=V10_11
     etemp2_12=V10_12
     etemp2_13=V10_13
     etemp2_14=V10_14
     etemp2_15=V10_15
     etemp2_16=V10_16
     etemp2_17=V10_17
     etemp2_18=V10_18
     etemp2_19=V10_19
     etemp2_20=V10_20
#
     sqr=0.0
     etemp=V7_1*etemp2_1
     sqr+=etemp
     etemp=V7_2*etemp2_2
     sqr+=etemp
     etemp=V7_3*etemp2_3
     sqr+=etemp
     etemp=V7_4*etemp2_4
     sqr+=etemp
     etemp=V7_5*etemp2_5
     sqr+=etemp
     etemp=V7_6*etemp2_6
     sqr+=etemp
     etemp=V7_7*etemp2_7
     sqr+=etemp
     etemp=V7_8*etemp2_8
     sqr+=etemp
     etemp=V7_9*etemp2_9
     sqr+=etemp
     etemp=V7_10*etemp2_10
     sqr+=etemp
     etemp=V7_11*etemp2_11
     sqr+=etemp
     etemp=V7_12*etemp2_12
     sqr+=etemp
     etemp=V7_13*etemp2_13
     sqr+=etemp
     etemp=V7_14*etemp2_14
     sqr+=etemp
     etemp=V7_15*etemp2_15
     sqr+=etemp
     etemp=V7_16*etemp2_16
     sqr+=etemp
     etemp=V7_17*etemp2_17
     sqr+=etemp
     etemp=V7_18*etemp2_18
     sqr+=etemp
     etemp=V7_19*etemp2_19
     sqr+=etemp
     etemp=V7_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V7_1*sqr
     Vtemp_2=V7_2*sqr
     Vtemp_3=V7_3*sqr
     Vtemp_4=V7_4*sqr
     Vtemp_5=V7_5*sqr
     Vtemp_6=V7_6*sqr
     Vtemp_7=V7_7*sqr
     Vtemp_8=V7_8*sqr
     Vtemp_9=V7_9*sqr
     Vtemp_10=V7_10*sqr
     Vtemp_11=V7_11*sqr
     Vtemp_12=V7_12*sqr
     Vtemp_13=V7_13*sqr
     Vtemp_14=V7_14*sqr
     Vtemp_15=V7_15*sqr
     Vtemp_16=V7_16*sqr
     Vtemp_17=V7_17*sqr
     Vtemp_18=V7_18*sqr
     Vtemp_19=V7_19*sqr
     Vtemp_20=V7_20*sqr
#
     V10_1+=Vtemp_1
     V10_2+=Vtemp_2
     V10_3+=Vtemp_3
     V10_4+=Vtemp_4
     V10_5+=Vtemp_5
     V10_6+=Vtemp_6
     V10_7+=Vtemp_7
     V10_8+=Vtemp_8
     V10_9+=Vtemp_9
     V10_10+=Vtemp_10
     V10_11+=Vtemp_11
     V10_12+=Vtemp_12
     V10_13+=Vtemp_13
     V10_14+=Vtemp_14
     V10_15+=Vtemp_15
     V10_16+=Vtemp_16
     V10_17+=Vtemp_17
     V10_18+=Vtemp_18
     V10_19+=Vtemp_19
     V10_20+=Vtemp_20
#
#
     etemp2_1=V10_1
     etemp2_2=V10_2
     etemp2_3=V10_3
     etemp2_4=V10_4
     etemp2_5=V10_5
     etemp2_6=V10_6
     etemp2_7=V10_7
     etemp2_8=V10_8
     etemp2_9=V10_9
     etemp2_10=V10_10
     etemp2_11=V10_11
     etemp2_12=V10_12
     etemp2_13=V10_13
     etemp2_14=V10_14
     etemp2_15=V10_15
     etemp2_16=V10_16
     etemp2_17=V10_17
     etemp2_18=V10_18
     etemp2_19=V10_19
     etemp2_20=V10_20
#
     sqr=0.0
     etemp=V8_1*etemp2_1
     sqr+=etemp
     etemp=V8_2*etemp2_2
     sqr+=etemp
     etemp=V8_3*etemp2_3
     sqr+=etemp
     etemp=V8_4*etemp2_4
     sqr+=etemp
     etemp=V8_5*etemp2_5
     sqr+=etemp
     etemp=V8_6*etemp2_6
     sqr+=etemp
     etemp=V8_7*etemp2_7
     sqr+=etemp
     etemp=V8_8*etemp2_8
     sqr+=etemp
     etemp=V8_9*etemp2_9
     sqr+=etemp
     etemp=V8_10*etemp2_10
     sqr+=etemp
     etemp=V8_11*etemp2_11
     sqr+=etemp
     etemp=V8_12*etemp2_12
     sqr+=etemp
     etemp=V8_13*etemp2_13
     sqr+=etemp
     etemp=V8_14*etemp2_14
     sqr+=etemp
     etemp=V8_15*etemp2_15
     sqr+=etemp
     etemp=V8_16*etemp2_16
     sqr+=etemp
     etemp=V8_17*etemp2_17
     sqr+=etemp
     etemp=V8_18*etemp2_18
     sqr+=etemp
     etemp=V8_19*etemp2_19
     sqr+=etemp
     etemp=V8_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V8_1*sqr
     Vtemp_2=V8_2*sqr
     Vtemp_3=V8_3*sqr
     Vtemp_4=V8_4*sqr
     Vtemp_5=V8_5*sqr
     Vtemp_6=V8_6*sqr
     Vtemp_7=V8_7*sqr
     Vtemp_8=V8_8*sqr
     Vtemp_9=V8_9*sqr
     Vtemp_10=V8_10*sqr
     Vtemp_11=V8_11*sqr
     Vtemp_12=V8_12*sqr
     Vtemp_13=V8_13*sqr
     Vtemp_14=V8_14*sqr
     Vtemp_15=V8_15*sqr
     Vtemp_16=V8_16*sqr
     Vtemp_17=V8_17*sqr
     Vtemp_18=V8_18*sqr
     Vtemp_19=V8_19*sqr
     Vtemp_20=V8_20*sqr
#
     V10_1+=Vtemp_1
     V10_2+=Vtemp_2
     V10_3+=Vtemp_3
     V10_4+=Vtemp_4
     V10_5+=Vtemp_5
     V10_6+=Vtemp_6
     V10_7+=Vtemp_7
     V10_8+=Vtemp_8
     V10_9+=Vtemp_9
     V10_10+=Vtemp_10
     V10_11+=Vtemp_11
     V10_12+=Vtemp_12
     V10_13+=Vtemp_13
     V10_14+=Vtemp_14
     V10_15+=Vtemp_15
     V10_16+=Vtemp_16
     V10_17+=Vtemp_17
     V10_18+=Vtemp_18
     V10_19+=Vtemp_19
     V10_20+=Vtemp_20
#
#
     etemp2_1=V10_1
     etemp2_2=V10_2
     etemp2_3=V10_3
     etemp2_4=V10_4
     etemp2_5=V10_5
     etemp2_6=V10_6
     etemp2_7=V10_7
     etemp2_8=V10_8
     etemp2_9=V10_9
     etemp2_10=V10_10
     etemp2_11=V10_11
     etemp2_12=V10_12
     etemp2_13=V10_13
     etemp2_14=V10_14
     etemp2_15=V10_15
     etemp2_16=V10_16
     etemp2_17=V10_17
     etemp2_18=V10_18
     etemp2_19=V10_19
     etemp2_20=V10_20
#
     sqr=0.0
     etemp=V9_1*etemp2_1
     sqr+=etemp
     etemp=V9_2*etemp2_2
     sqr+=etemp
     etemp=V9_3*etemp2_3
     sqr+=etemp
     etemp=V9_4*etemp2_4
     sqr+=etemp
     etemp=V9_5*etemp2_5
     sqr+=etemp
     etemp=V9_6*etemp2_6
     sqr+=etemp
     etemp=V9_7*etemp2_7
     sqr+=etemp
     etemp=V9_8*etemp2_8
     sqr+=etemp
     etemp=V9_9*etemp2_9
     sqr+=etemp
     etemp=V9_10*etemp2_10
     sqr+=etemp
     etemp=V9_11*etemp2_11
     sqr+=etemp
     etemp=V9_12*etemp2_12
     sqr+=etemp
     etemp=V9_13*etemp2_13
     sqr+=etemp
     etemp=V9_14*etemp2_14
     sqr+=etemp
     etemp=V9_15*etemp2_15
     sqr+=etemp
     etemp=V9_16*etemp2_16
     sqr+=etemp
     etemp=V9_17*etemp2_17
     sqr+=etemp
     etemp=V9_18*etemp2_18
     sqr+=etemp
     etemp=V9_19*etemp2_19
     sqr+=etemp
     etemp=V9_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V9_1*sqr
     Vtemp_2=V9_2*sqr
     Vtemp_3=V9_3*sqr
     Vtemp_4=V9_4*sqr
     Vtemp_5=V9_5*sqr
     Vtemp_6=V9_6*sqr
     Vtemp_7=V9_7*sqr
     Vtemp_8=V9_8*sqr
     Vtemp_9=V9_9*sqr
     Vtemp_10=V9_10*sqr
     Vtemp_11=V9_11*sqr
     Vtemp_12=V9_12*sqr
     Vtemp_13=V9_13*sqr
     Vtemp_14=V9_14*sqr
     Vtemp_15=V9_15*sqr
     Vtemp_16=V9_16*sqr
     Vtemp_17=V9_17*sqr
     Vtemp_18=V9_18*sqr
     Vtemp_19=V9_19*sqr
     Vtemp_20=V9_20*sqr
#
     V10_1+=Vtemp_1
     V10_2+=Vtemp_2
     V10_3+=Vtemp_3
     V10_4+=Vtemp_4
     V10_5+=Vtemp_5
     V10_6+=Vtemp_6
     V10_7+=Vtemp_7
     V10_8+=Vtemp_8
     V10_9+=Vtemp_9
     V10_10+=Vtemp_10
     V10_11+=Vtemp_11
     V10_12+=Vtemp_12
     V10_13+=Vtemp_13
     V10_14+=Vtemp_14
     V10_15+=Vtemp_15
     V10_16+=Vtemp_16
     V10_17+=Vtemp_17
     V10_18+=Vtemp_18
     V10_19+=Vtemp_19
     V10_20+=Vtemp_20
#
#
     Vtemp_1=V10_1
     Vtemp_2=V10_2
     Vtemp_3=V10_3
     Vtemp_4=V10_4
     Vtemp_5=V10_5
     Vtemp_6=V10_6
     Vtemp_7=V10_7
     Vtemp_8=V10_8
     Vtemp_9=V10_9
     Vtemp_10=V10_10
     Vtemp_11=V10_11
     Vtemp_12=V10_12
     Vtemp_13=V10_13
     Vtemp_14=V10_14
     Vtemp_15=V10_15
     Vtemp_16=V10_16
     Vtemp_17=V10_17
     Vtemp_18=V10_18
     Vtemp_19=V10_19
     Vtemp_20=V10_20
#
     sqr=0.0
#
     etemp=V10_1*Vtemp_1
     sqr+=etemp
     etemp=V10_2*Vtemp_2
     sqr+=etemp
     etemp=V10_3*Vtemp_3
     sqr+=etemp
     etemp=V10_4*Vtemp_4
     sqr+=etemp
     etemp=V10_5*Vtemp_5
     sqr+=etemp
     etemp=V10_6*Vtemp_6
     sqr+=etemp
     etemp=V10_7*Vtemp_7
     sqr+=etemp
     etemp=V10_8*Vtemp_8
     sqr+=etemp
     etemp=V10_9*Vtemp_9
     sqr+=etemp
     etemp=V10_10*Vtemp_10
     sqr+=etemp
     etemp=V10_11*Vtemp_11
     sqr+=etemp
     etemp=V10_12*Vtemp_12
     sqr+=etemp
     etemp=V10_13*Vtemp_13
     sqr+=etemp
     etemp=V10_14*Vtemp_14
     sqr+=etemp
     etemp=V10_15*Vtemp_15
     sqr+=etemp
     etemp=V10_16*Vtemp_16
     sqr+=etemp
     etemp=V10_17*Vtemp_17
     sqr+=etemp
     etemp=V10_18*Vtemp_18
     sqr+=etemp
     etemp=V10_19*Vtemp_19
     sqr+=etemp
     etemp=V10_20*Vtemp_20
     sqr+=etemp
#
       exponent=0.5
       execute square_root sqr exponent
       sqr2=1.0/sqr
#
     V10_1*=sqr2
     V10_2*=sqr2
     V10_3*=sqr2
     V10_4*=sqr2
     V10_5*=sqr2
     V10_6*=sqr2
     V10_7*=sqr2
     V10_8*=sqr2
     V10_9*=sqr2
     V10_10*=sqr2
     V10_11*=sqr2
     V10_12*=sqr2
     V10_13*=sqr2
     V10_14*=sqr2
     V10_15*=sqr2
     V10_16*=sqr2
     V10_17*=sqr2
     V10_18*=sqr2
     V10_19*=sqr2
     V10_20*=sqr2
#
#------11 vectors -------------------------------
#
     etemp2_1=V11_1
     etemp2_2=V11_2
     etemp2_3=V11_3
     etemp2_4=V11_4
     etemp2_5=V11_5
     etemp2_6=V11_6
     etemp2_7=V11_7
     etemp2_8=V11_8
     etemp2_9=V11_9
     etemp2_10=V11_10
     etemp2_11=V11_11
     etemp2_12=V11_12
     etemp2_13=V11_13
     etemp2_14=V11_14
     etemp2_15=V11_15
     etemp2_16=V11_16
     etemp2_17=V11_17
     etemp2_18=V11_18
     etemp2_19=V11_19
     etemp2_20=V11_20
#
     sqr=0.0
     etemp=V1_1*etemp2_1
     sqr+=etemp
     etemp=V1_2*etemp2_2
     sqr+=etemp
     etemp=V1_3*etemp2_3
     sqr+=etemp
     etemp=V1_4*etemp2_4
     sqr+=etemp
     etemp=V1_5*etemp2_5
     sqr+=etemp
     etemp=V1_6*etemp2_6
     sqr+=etemp
     etemp=V1_7*etemp2_7
     sqr+=etemp
     etemp=V1_8*etemp2_8
     sqr+=etemp
     etemp=V1_9*etemp2_9
     sqr+=etemp
     etemp=V1_10*etemp2_10
     sqr+=etemp
     etemp=V1_11*etemp2_11
     sqr+=etemp
     etemp=V1_12*etemp2_12
     sqr+=etemp
     etemp=V1_13*etemp2_13
     sqr+=etemp
     etemp=V1_14*etemp2_14
     sqr+=etemp
     etemp=V1_15*etemp2_15
     sqr+=etemp
     etemp=V1_16*etemp2_16
     sqr+=etemp
     etemp=V1_17*etemp2_17
     sqr+=etemp
     etemp=V1_18*etemp2_18
     sqr+=etemp
     etemp=V1_19*etemp2_19
     sqr+=etemp
     etemp=V1_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V1_1*sqr
     Vtemp_2=V1_2*sqr
     Vtemp_3=V1_3*sqr
     Vtemp_4=V1_4*sqr
     Vtemp_5=V1_5*sqr
     Vtemp_6=V1_6*sqr
     Vtemp_7=V1_7*sqr
     Vtemp_8=V1_8*sqr
     Vtemp_9=V1_9*sqr
     Vtemp_10=V1_10*sqr
     Vtemp_11=V1_11*sqr
     Vtemp_12=V1_12*sqr
     Vtemp_13=V1_13*sqr
     Vtemp_14=V1_14*sqr
     Vtemp_15=V1_15*sqr
     Vtemp_16=V1_16*sqr
     Vtemp_17=V1_17*sqr
     Vtemp_18=V1_18*sqr
     Vtemp_19=V1_19*sqr
     Vtemp_20=V1_20*sqr
#
     V11_1+=Vtemp_1
     V11_2+=Vtemp_2
     V11_3+=Vtemp_3
     V11_4+=Vtemp_4
     V11_5+=Vtemp_5
     V11_6+=Vtemp_6
     V11_7+=Vtemp_7
     V11_8+=Vtemp_8
     V11_9+=Vtemp_9
     V11_10+=Vtemp_10
     V11_11+=Vtemp_11
     V11_12+=Vtemp_12
     V11_13+=Vtemp_13
     V11_14+=Vtemp_14
     V11_15+=Vtemp_15
     V11_16+=Vtemp_16
     V11_17+=Vtemp_17
     V11_18+=Vtemp_18
     V11_19+=Vtemp_19
     V11_20+=Vtemp_20
#
#
     etemp2_1=V11_1
     etemp2_2=V11_2
     etemp2_3=V11_3
     etemp2_4=V11_4
     etemp2_5=V11_5
     etemp2_6=V11_6
     etemp2_7=V11_7
     etemp2_8=V11_8
     etemp2_9=V11_9
     etemp2_10=V11_10
     etemp2_11=V11_11
     etemp2_12=V11_12
     etemp2_13=V11_13
     etemp2_14=V11_14
     etemp2_15=V11_15
     etemp2_16=V11_16
     etemp2_17=V11_17
     etemp2_18=V11_18
     etemp2_19=V11_19
     etemp2_20=V11_20
#
     sqr=0.0
     etemp=V2_1*etemp2_1
     sqr+=etemp
     etemp=V2_2*etemp2_2
     sqr+=etemp
     etemp=V2_3*etemp2_3
     sqr+=etemp
     etemp=V2_4*etemp2_4
     sqr+=etemp
     etemp=V2_5*etemp2_5
     sqr+=etemp
     etemp=V2_6*etemp2_6
     sqr+=etemp
     etemp=V2_7*etemp2_7
     sqr+=etemp
     etemp=V2_8*etemp2_8
     sqr+=etemp
     etemp=V2_9*etemp2_9
     sqr+=etemp
     etemp=V2_10*etemp2_10
     sqr+=etemp
     etemp=V2_11*etemp2_11
     sqr+=etemp
     etemp=V2_12*etemp2_12
     sqr+=etemp
     etemp=V2_13*etemp2_13
     sqr+=etemp
     etemp=V2_14*etemp2_14
     sqr+=etemp
     etemp=V2_15*etemp2_15
     sqr+=etemp
     etemp=V2_16*etemp2_16
     sqr+=etemp
     etemp=V2_17*etemp2_17
     sqr+=etemp
     etemp=V2_18*etemp2_18
     sqr+=etemp
     etemp=V2_19*etemp2_19
     sqr+=etemp
     etemp=V2_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V2_1*sqr
     Vtemp_2=V2_2*sqr
     Vtemp_3=V2_3*sqr
     Vtemp_4=V2_4*sqr
     Vtemp_5=V2_5*sqr
     Vtemp_6=V2_6*sqr
     Vtemp_7=V2_7*sqr
     Vtemp_8=V2_8*sqr
     Vtemp_9=V2_9*sqr
     Vtemp_10=V2_10*sqr
     Vtemp_11=V2_11*sqr
     Vtemp_12=V2_12*sqr
     Vtemp_13=V2_13*sqr
     Vtemp_14=V2_14*sqr
     Vtemp_15=V2_15*sqr
     Vtemp_16=V2_16*sqr
     Vtemp_17=V2_17*sqr
     Vtemp_18=V2_18*sqr
     Vtemp_19=V2_19*sqr
     Vtemp_20=V2_20*sqr
#
     V11_1+=Vtemp_1
     V11_2+=Vtemp_2
     V11_3+=Vtemp_3
     V11_4+=Vtemp_4
     V11_5+=Vtemp_5
     V11_6+=Vtemp_6
     V11_7+=Vtemp_7
     V11_8+=Vtemp_8
     V11_9+=Vtemp_9
     V11_10+=Vtemp_10
     V11_11+=Vtemp_11
     V11_12+=Vtemp_12
     V11_13+=Vtemp_13
     V11_14+=Vtemp_14
     V11_15+=Vtemp_15
     V11_16+=Vtemp_16
     V11_17+=Vtemp_17
     V11_18+=Vtemp_18
     V11_19+=Vtemp_19
     V11_20+=Vtemp_20
#
#
     etemp2_1=V11_1
     etemp2_2=V11_2
     etemp2_3=V11_3
     etemp2_4=V11_4
     etemp2_5=V11_5
     etemp2_6=V11_6
     etemp2_7=V11_7
     etemp2_8=V11_8
     etemp2_9=V11_9
     etemp2_10=V11_10
     etemp2_11=V11_11
     etemp2_12=V11_12
     etemp2_13=V11_13
     etemp2_14=V11_14
     etemp2_15=V11_15
     etemp2_16=V11_16
     etemp2_17=V11_17
     etemp2_18=V11_18
     etemp2_19=V11_19
     etemp2_20=V11_20
#
     sqr=0.0
     etemp=V3_1*etemp2_1
     sqr+=etemp
     etemp=V3_2*etemp2_2
     sqr+=etemp
     etemp=V3_3*etemp2_3
     sqr+=etemp
     etemp=V3_4*etemp2_4
     sqr+=etemp
     etemp=V3_5*etemp2_5
     sqr+=etemp
     etemp=V3_6*etemp2_6
     sqr+=etemp
     etemp=V3_7*etemp2_7
     sqr+=etemp
     etemp=V3_8*etemp2_8
     sqr+=etemp
     etemp=V3_9*etemp2_9
     sqr+=etemp
     etemp=V3_10*etemp2_10
     sqr+=etemp
     etemp=V3_11*etemp2_11
     sqr+=etemp
     etemp=V3_12*etemp2_12
     sqr+=etemp
     etemp=V3_13*etemp2_13
     sqr+=etemp
     etemp=V3_14*etemp2_14
     sqr+=etemp
     etemp=V3_15*etemp2_15
     sqr+=etemp
     etemp=V3_16*etemp2_16
     sqr+=etemp
     etemp=V3_17*etemp2_17
     sqr+=etemp
     etemp=V3_18*etemp2_18
     sqr+=etemp
     etemp=V3_19*etemp2_19
     sqr+=etemp
     etemp=V3_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V3_1*sqr
     Vtemp_2=V3_2*sqr
     Vtemp_3=V3_3*sqr
     Vtemp_4=V3_4*sqr
     Vtemp_5=V3_5*sqr
     Vtemp_6=V3_6*sqr
     Vtemp_7=V3_7*sqr
     Vtemp_8=V3_8*sqr
     Vtemp_9=V3_9*sqr
     Vtemp_10=V3_10*sqr
     Vtemp_11=V3_11*sqr
     Vtemp_12=V3_12*sqr
     Vtemp_13=V3_13*sqr
     Vtemp_14=V3_14*sqr
     Vtemp_15=V3_15*sqr
     Vtemp_16=V3_16*sqr
     Vtemp_17=V3_17*sqr
     Vtemp_18=V3_18*sqr
     Vtemp_19=V3_19*sqr
     Vtemp_20=V3_20*sqr
#
     V11_1+=Vtemp_1
     V11_2+=Vtemp_2
     V11_3+=Vtemp_3
     V11_4+=Vtemp_4
     V11_5+=Vtemp_5
     V11_6+=Vtemp_6
     V11_7+=Vtemp_7
     V11_8+=Vtemp_8
     V11_9+=Vtemp_9
     V11_10+=Vtemp_10
     V11_11+=Vtemp_11
     V11_12+=Vtemp_12
     V11_13+=Vtemp_13
     V11_14+=Vtemp_14
     V11_15+=Vtemp_15
     V11_16+=Vtemp_16
     V11_17+=Vtemp_17
     V11_18+=Vtemp_18
     V11_19+=Vtemp_19
     V11_20+=Vtemp_20
#
#
     etemp2_1=V11_1
     etemp2_2=V11_2
     etemp2_3=V11_3
     etemp2_4=V11_4
     etemp2_5=V11_5
     etemp2_6=V11_6
     etemp2_7=V11_7
     etemp2_8=V11_8
     etemp2_9=V11_9
     etemp2_10=V11_10
     etemp2_11=V11_11
     etemp2_12=V11_12
     etemp2_13=V11_13
     etemp2_14=V11_14
     etemp2_15=V11_15
     etemp2_16=V11_16
     etemp2_17=V11_17
     etemp2_18=V11_18
     etemp2_19=V11_19
     etemp2_20=V11_20
#
     sqr=0.0
     etemp=V4_1*etemp2_1
     sqr+=etemp
     etemp=V4_2*etemp2_2
     sqr+=etemp
     etemp=V4_3*etemp2_3
     sqr+=etemp
     etemp=V4_4*etemp2_4
     sqr+=etemp
     etemp=V4_5*etemp2_5
     sqr+=etemp
     etemp=V4_6*etemp2_6
     sqr+=etemp
     etemp=V4_7*etemp2_7
     sqr+=etemp
     etemp=V4_8*etemp2_8
     sqr+=etemp
     etemp=V4_9*etemp2_9
     sqr+=etemp
     etemp=V4_10*etemp2_10
     sqr+=etemp
     etemp=V4_11*etemp2_11
     sqr+=etemp
     etemp=V4_12*etemp2_12
     sqr+=etemp
     etemp=V4_13*etemp2_13
     sqr+=etemp
     etemp=V4_14*etemp2_14
     sqr+=etemp
     etemp=V4_15*etemp2_15
     sqr+=etemp
     etemp=V4_16*etemp2_16
     sqr+=etemp
     etemp=V4_17*etemp2_17
     sqr+=etemp
     etemp=V4_18*etemp2_18
     sqr+=etemp
     etemp=V4_19*etemp2_19
     sqr+=etemp
     etemp=V4_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V4_1*sqr
     Vtemp_2=V4_2*sqr
     Vtemp_3=V4_3*sqr
     Vtemp_4=V4_4*sqr
     Vtemp_5=V4_5*sqr
     Vtemp_6=V4_6*sqr
     Vtemp_7=V4_7*sqr
     Vtemp_8=V4_8*sqr
     Vtemp_9=V4_9*sqr
     Vtemp_10=V4_10*sqr
     Vtemp_11=V4_11*sqr
     Vtemp_12=V4_12*sqr
     Vtemp_13=V4_13*sqr
     Vtemp_14=V4_14*sqr
     Vtemp_15=V4_15*sqr
     Vtemp_16=V4_16*sqr
     Vtemp_17=V4_17*sqr
     Vtemp_18=V4_18*sqr
     Vtemp_19=V4_19*sqr
     Vtemp_20=V4_20*sqr
#
     V11_1+=Vtemp_1
     V11_2+=Vtemp_2
     V11_3+=Vtemp_3
     V11_4+=Vtemp_4
     V11_5+=Vtemp_5
     V11_6+=Vtemp_6
     V11_7+=Vtemp_7
     V11_8+=Vtemp_8
     V11_9+=Vtemp_9
     V11_10+=Vtemp_10
     V11_11+=Vtemp_11
     V11_12+=Vtemp_12
     V11_13+=Vtemp_13
     V11_14+=Vtemp_14
     V11_15+=Vtemp_15
     V11_16+=Vtemp_16
     V11_17+=Vtemp_17
     V11_18+=Vtemp_18
     V11_19+=Vtemp_19
     V11_20+=Vtemp_20
#
#
     etemp2_1=V11_1
     etemp2_2=V11_2
     etemp2_3=V11_3
     etemp2_4=V11_4
     etemp2_5=V11_5
     etemp2_6=V11_6
     etemp2_7=V11_7
     etemp2_8=V11_8
     etemp2_9=V11_9
     etemp2_10=V11_10
     etemp2_11=V11_11
     etemp2_12=V11_12
     etemp2_13=V11_13
     etemp2_14=V11_14
     etemp2_15=V11_15
     etemp2_16=V11_16
     etemp2_17=V11_17
     etemp2_18=V11_18
     etemp2_19=V11_19
     etemp2_20=V11_20
#
     sqr=0.0
     etemp=V5_1*etemp2_1
     sqr+=etemp
     etemp=V5_2*etemp2_2
     sqr+=etemp
     etemp=V5_3*etemp2_3
     sqr+=etemp
     etemp=V5_4*etemp2_4
     sqr+=etemp
     etemp=V5_5*etemp2_5
     sqr+=etemp
     etemp=V5_6*etemp2_6
     sqr+=etemp
     etemp=V5_7*etemp2_7
     sqr+=etemp
     etemp=V5_8*etemp2_8
     sqr+=etemp
     etemp=V5_9*etemp2_9
     sqr+=etemp
     etemp=V5_10*etemp2_10
     sqr+=etemp
     etemp=V5_11*etemp2_11
     sqr+=etemp
     etemp=V5_12*etemp2_12
     sqr+=etemp
     etemp=V5_13*etemp2_13
     sqr+=etemp
     etemp=V5_14*etemp2_14
     sqr+=etemp
     etemp=V5_15*etemp2_15
     sqr+=etemp
     etemp=V5_16*etemp2_16
     sqr+=etemp
     etemp=V5_17*etemp2_17
     sqr+=etemp
     etemp=V5_18*etemp2_18
     sqr+=etemp
     etemp=V5_19*etemp2_19
     sqr+=etemp
     etemp=V5_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V5_1*sqr
     Vtemp_2=V5_2*sqr
     Vtemp_3=V5_3*sqr
     Vtemp_4=V5_4*sqr
     Vtemp_5=V5_5*sqr
     Vtemp_6=V5_6*sqr
     Vtemp_7=V5_7*sqr
     Vtemp_8=V5_8*sqr
     Vtemp_9=V5_9*sqr
     Vtemp_10=V5_10*sqr
     Vtemp_11=V5_11*sqr
     Vtemp_12=V5_12*sqr
     Vtemp_13=V5_13*sqr
     Vtemp_14=V5_14*sqr
     Vtemp_15=V5_15*sqr
     Vtemp_16=V5_16*sqr
     Vtemp_17=V5_17*sqr
     Vtemp_18=V5_18*sqr
     Vtemp_19=V5_19*sqr
     Vtemp_20=V5_20*sqr
#
     V11_1+=Vtemp_1
     V11_2+=Vtemp_2
     V11_3+=Vtemp_3
     V11_4+=Vtemp_4
     V11_5+=Vtemp_5
     V11_6+=Vtemp_6
     V11_7+=Vtemp_7
     V11_8+=Vtemp_8
     V11_9+=Vtemp_9
     V11_10+=Vtemp_10
     V11_11+=Vtemp_11
     V11_12+=Vtemp_12
     V11_13+=Vtemp_13
     V11_14+=Vtemp_14
     V11_15+=Vtemp_15
     V11_16+=Vtemp_16
     V11_17+=Vtemp_17
     V11_18+=Vtemp_18
     V11_19+=Vtemp_19
     V11_20+=Vtemp_20
#
#
     etemp2_1=V11_1
     etemp2_2=V11_2
     etemp2_3=V11_3
     etemp2_4=V11_4
     etemp2_5=V11_5
     etemp2_6=V11_6
     etemp2_7=V11_7
     etemp2_8=V11_8
     etemp2_9=V11_9
     etemp2_10=V11_10
     etemp2_11=V11_11
     etemp2_12=V11_12
     etemp2_13=V11_13
     etemp2_14=V11_14
     etemp2_15=V11_15
     etemp2_16=V11_16
     etemp2_17=V11_17
     etemp2_18=V11_18
     etemp2_19=V11_19
     etemp2_20=V11_20
#
     sqr=0.0
     etemp=V6_1*etemp2_1
     sqr+=etemp
     etemp=V6_2*etemp2_2
     sqr+=etemp
     etemp=V6_3*etemp2_3
     sqr+=etemp
     etemp=V6_4*etemp2_4
     sqr+=etemp
     etemp=V6_5*etemp2_5
     sqr+=etemp
     etemp=V6_6*etemp2_6
     sqr+=etemp
     etemp=V6_7*etemp2_7
     sqr+=etemp
     etemp=V6_8*etemp2_8
     sqr+=etemp
     etemp=V6_9*etemp2_9
     sqr+=etemp
     etemp=V6_10*etemp2_10
     sqr+=etemp
     etemp=V6_11*etemp2_11
     sqr+=etemp
     etemp=V6_12*etemp2_12
     sqr+=etemp
     etemp=V6_13*etemp2_13
     sqr+=etemp
     etemp=V6_14*etemp2_14
     sqr+=etemp
     etemp=V6_15*etemp2_15
     sqr+=etemp
     etemp=V6_16*etemp2_16
     sqr+=etemp
     etemp=V6_17*etemp2_17
     sqr+=etemp
     etemp=V6_18*etemp2_18
     sqr+=etemp
     etemp=V6_19*etemp2_19
     sqr+=etemp
     etemp=V6_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V6_1*sqr
     Vtemp_2=V6_2*sqr
     Vtemp_3=V6_3*sqr
     Vtemp_4=V6_4*sqr
     Vtemp_5=V6_5*sqr
     Vtemp_6=V6_6*sqr
     Vtemp_7=V6_7*sqr
     Vtemp_8=V6_8*sqr
     Vtemp_9=V6_9*sqr
     Vtemp_10=V6_10*sqr
     Vtemp_11=V6_11*sqr
     Vtemp_12=V6_12*sqr
     Vtemp_13=V6_13*sqr
     Vtemp_14=V6_14*sqr
     Vtemp_15=V6_15*sqr
     Vtemp_16=V6_16*sqr
     Vtemp_17=V6_17*sqr
     Vtemp_18=V6_18*sqr
     Vtemp_19=V6_19*sqr
     Vtemp_20=V6_20*sqr
#
     V11_1+=Vtemp_1
     V11_2+=Vtemp_2
     V11_3+=Vtemp_3
     V11_4+=Vtemp_4
     V11_5+=Vtemp_5
     V11_6+=Vtemp_6
     V11_7+=Vtemp_7
     V11_8+=Vtemp_8
     V11_9+=Vtemp_9
     V11_10+=Vtemp_10
     V11_11+=Vtemp_11
     V11_12+=Vtemp_12
     V11_13+=Vtemp_13
     V11_14+=Vtemp_14
     V11_15+=Vtemp_15
     V11_16+=Vtemp_16
     V11_17+=Vtemp_17
     V11_18+=Vtemp_18
     V11_19+=Vtemp_19
     V11_20+=Vtemp_20
#
#
     etemp2_1=V11_1
     etemp2_2=V11_2
     etemp2_3=V11_3
     etemp2_4=V11_4
     etemp2_5=V11_5
     etemp2_6=V11_6
     etemp2_7=V11_7
     etemp2_8=V11_8
     etemp2_9=V11_9
     etemp2_10=V11_10
     etemp2_11=V11_11
     etemp2_12=V11_12
     etemp2_13=V11_13
     etemp2_14=V11_14
     etemp2_15=V11_15
     etemp2_16=V11_16
     etemp2_17=V11_17
     etemp2_18=V11_18
     etemp2_19=V11_19
     etemp2_20=V11_20
#
     sqr=0.0
     etemp=V7_1*etemp2_1
     sqr+=etemp
     etemp=V7_2*etemp2_2
     sqr+=etemp
     etemp=V7_3*etemp2_3
     sqr+=etemp
     etemp=V7_4*etemp2_4
     sqr+=etemp
     etemp=V7_5*etemp2_5
     sqr+=etemp
     etemp=V7_6*etemp2_6
     sqr+=etemp
     etemp=V7_7*etemp2_7
     sqr+=etemp
     etemp=V7_8*etemp2_8
     sqr+=etemp
     etemp=V7_9*etemp2_9
     sqr+=etemp
     etemp=V7_10*etemp2_10
     sqr+=etemp
     etemp=V7_11*etemp2_11
     sqr+=etemp
     etemp=V7_12*etemp2_12
     sqr+=etemp
     etemp=V7_13*etemp2_13
     sqr+=etemp
     etemp=V7_14*etemp2_14
     sqr+=etemp
     etemp=V7_15*etemp2_15
     sqr+=etemp
     etemp=V7_16*etemp2_16
     sqr+=etemp
     etemp=V7_17*etemp2_17
     sqr+=etemp
     etemp=V7_18*etemp2_18
     sqr+=etemp
     etemp=V7_19*etemp2_19
     sqr+=etemp
     etemp=V7_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V7_1*sqr
     Vtemp_2=V7_2*sqr
     Vtemp_3=V7_3*sqr
     Vtemp_4=V7_4*sqr
     Vtemp_5=V7_5*sqr
     Vtemp_6=V7_6*sqr
     Vtemp_7=V7_7*sqr
     Vtemp_8=V7_8*sqr
     Vtemp_9=V7_9*sqr
     Vtemp_10=V7_10*sqr
     Vtemp_11=V7_11*sqr
     Vtemp_12=V7_12*sqr
     Vtemp_13=V7_13*sqr
     Vtemp_14=V7_14*sqr
     Vtemp_15=V7_15*sqr
     Vtemp_16=V7_16*sqr
     Vtemp_17=V7_17*sqr
     Vtemp_18=V7_18*sqr
     Vtemp_19=V7_19*sqr
     Vtemp_20=V7_20*sqr
#
     V11_1+=Vtemp_1
     V11_2+=Vtemp_2
     V11_3+=Vtemp_3
     V11_4+=Vtemp_4
     V11_5+=Vtemp_5
     V11_6+=Vtemp_6
     V11_7+=Vtemp_7
     V11_8+=Vtemp_8
     V11_9+=Vtemp_9
     V11_10+=Vtemp_10
     V11_11+=Vtemp_11
     V11_12+=Vtemp_12
     V11_13+=Vtemp_13
     V11_14+=Vtemp_14
     V11_15+=Vtemp_15
     V11_16+=Vtemp_16
     V11_17+=Vtemp_17
     V11_18+=Vtemp_18
     V11_19+=Vtemp_19
     V11_20+=Vtemp_20
#
#
     etemp2_1=V11_1
     etemp2_2=V11_2
     etemp2_3=V11_3
     etemp2_4=V11_4
     etemp2_5=V11_5
     etemp2_6=V11_6
     etemp2_7=V11_7
     etemp2_8=V11_8
     etemp2_9=V11_9
     etemp2_10=V11_10
     etemp2_11=V11_11
     etemp2_12=V11_12
     etemp2_13=V11_13
     etemp2_14=V11_14
     etemp2_15=V11_15
     etemp2_16=V11_16
     etemp2_17=V11_17
     etemp2_18=V11_18
     etemp2_19=V11_19
     etemp2_20=V11_20
#
     sqr=0.0
     etemp=V8_1*etemp2_1
     sqr+=etemp
     etemp=V8_2*etemp2_2
     sqr+=etemp
     etemp=V8_3*etemp2_3
     sqr+=etemp
     etemp=V8_4*etemp2_4
     sqr+=etemp
     etemp=V8_5*etemp2_5
     sqr+=etemp
     etemp=V8_6*etemp2_6
     sqr+=etemp
     etemp=V8_7*etemp2_7
     sqr+=etemp
     etemp=V8_8*etemp2_8
     sqr+=etemp
     etemp=V8_9*etemp2_9
     sqr+=etemp
     etemp=V8_10*etemp2_10
     sqr+=etemp
     etemp=V8_11*etemp2_11
     sqr+=etemp
     etemp=V8_12*etemp2_12
     sqr+=etemp
     etemp=V8_13*etemp2_13
     sqr+=etemp
     etemp=V8_14*etemp2_14
     sqr+=etemp
     etemp=V8_15*etemp2_15
     sqr+=etemp
     etemp=V8_16*etemp2_16
     sqr+=etemp
     etemp=V8_17*etemp2_17
     sqr+=etemp
     etemp=V8_18*etemp2_18
     sqr+=etemp
     etemp=V8_19*etemp2_19
     sqr+=etemp
     etemp=V8_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V8_1*sqr
     Vtemp_2=V8_2*sqr
     Vtemp_3=V8_3*sqr
     Vtemp_4=V8_4*sqr
     Vtemp_5=V8_5*sqr
     Vtemp_6=V8_6*sqr
     Vtemp_7=V8_7*sqr
     Vtemp_8=V8_8*sqr
     Vtemp_9=V8_9*sqr
     Vtemp_10=V8_10*sqr
     Vtemp_11=V8_11*sqr
     Vtemp_12=V8_12*sqr
     Vtemp_13=V8_13*sqr
     Vtemp_14=V8_14*sqr
     Vtemp_15=V8_15*sqr
     Vtemp_16=V8_16*sqr
     Vtemp_17=V8_17*sqr
     Vtemp_18=V8_18*sqr
     Vtemp_19=V8_19*sqr
     Vtemp_20=V8_20*sqr
#
     V11_1+=Vtemp_1
     V11_2+=Vtemp_2
     V11_3+=Vtemp_3
     V11_4+=Vtemp_4
     V11_5+=Vtemp_5
     V11_6+=Vtemp_6
     V11_7+=Vtemp_7
     V11_8+=Vtemp_8
     V11_9+=Vtemp_9
     V11_10+=Vtemp_10
     V11_11+=Vtemp_11
     V11_12+=Vtemp_12
     V11_13+=Vtemp_13
     V11_14+=Vtemp_14
     V11_15+=Vtemp_15
     V11_16+=Vtemp_16
     V11_17+=Vtemp_17
     V11_18+=Vtemp_18
     V11_19+=Vtemp_19
     V11_20+=Vtemp_20
#
#
     etemp2_1=V11_1
     etemp2_2=V11_2
     etemp2_3=V11_3
     etemp2_4=V11_4
     etemp2_5=V11_5
     etemp2_6=V11_6
     etemp2_7=V11_7
     etemp2_8=V11_8
     etemp2_9=V11_9
     etemp2_10=V11_10
     etemp2_11=V11_11
     etemp2_12=V11_12
     etemp2_13=V11_13
     etemp2_14=V11_14
     etemp2_15=V11_15
     etemp2_16=V11_16
     etemp2_17=V11_17
     etemp2_18=V11_18
     etemp2_19=V11_19
     etemp2_20=V11_20
#
     sqr=0.0
     etemp=V9_1*etemp2_1
     sqr+=etemp
     etemp=V9_2*etemp2_2
     sqr+=etemp
     etemp=V9_3*etemp2_3
     sqr+=etemp
     etemp=V9_4*etemp2_4
     sqr+=etemp
     etemp=V9_5*etemp2_5
     sqr+=etemp
     etemp=V9_6*etemp2_6
     sqr+=etemp
     etemp=V9_7*etemp2_7
     sqr+=etemp
     etemp=V9_8*etemp2_8
     sqr+=etemp
     etemp=V9_9*etemp2_9
     sqr+=etemp
     etemp=V9_10*etemp2_10
     sqr+=etemp
     etemp=V9_11*etemp2_11
     sqr+=etemp
     etemp=V9_12*etemp2_12
     sqr+=etemp
     etemp=V9_13*etemp2_13
     sqr+=etemp
     etemp=V9_14*etemp2_14
     sqr+=etemp
     etemp=V9_15*etemp2_15
     sqr+=etemp
     etemp=V9_16*etemp2_16
     sqr+=etemp
     etemp=V9_17*etemp2_17
     sqr+=etemp
     etemp=V9_18*etemp2_18
     sqr+=etemp
     etemp=V9_19*etemp2_19
     sqr+=etemp
     etemp=V9_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V9_1*sqr
     Vtemp_2=V9_2*sqr
     Vtemp_3=V9_3*sqr
     Vtemp_4=V9_4*sqr
     Vtemp_5=V9_5*sqr
     Vtemp_6=V9_6*sqr
     Vtemp_7=V9_7*sqr
     Vtemp_8=V9_8*sqr
     Vtemp_9=V9_9*sqr
     Vtemp_10=V9_10*sqr
     Vtemp_11=V9_11*sqr
     Vtemp_12=V9_12*sqr
     Vtemp_13=V9_13*sqr
     Vtemp_14=V9_14*sqr
     Vtemp_15=V9_15*sqr
     Vtemp_16=V9_16*sqr
     Vtemp_17=V9_17*sqr
     Vtemp_18=V9_18*sqr
     Vtemp_19=V9_19*sqr
     Vtemp_20=V9_20*sqr
#
     V11_1+=Vtemp_1
     V11_2+=Vtemp_2
     V11_3+=Vtemp_3
     V11_4+=Vtemp_4
     V11_5+=Vtemp_5
     V11_6+=Vtemp_6
     V11_7+=Vtemp_7
     V11_8+=Vtemp_8
     V11_9+=Vtemp_9
     V11_10+=Vtemp_10
     V11_11+=Vtemp_11
     V11_12+=Vtemp_12
     V11_13+=Vtemp_13
     V11_14+=Vtemp_14
     V11_15+=Vtemp_15
     V11_16+=Vtemp_16
     V11_17+=Vtemp_17
     V11_18+=Vtemp_18
     V11_19+=Vtemp_19
     V11_20+=Vtemp_20
#
#
     etemp2_1=V11_1
     etemp2_2=V11_2
     etemp2_3=V11_3
     etemp2_4=V11_4
     etemp2_5=V11_5
     etemp2_6=V11_6
     etemp2_7=V11_7
     etemp2_8=V11_8
     etemp2_9=V11_9
     etemp2_10=V11_10
     etemp2_11=V11_11
     etemp2_12=V11_12
     etemp2_13=V11_13
     etemp2_14=V11_14
     etemp2_15=V11_15
     etemp2_16=V11_16
     etemp2_17=V11_17
     etemp2_18=V11_18
     etemp2_19=V11_19
     etemp2_20=V11_20
#
     sqr=0.0
     etemp=V10_1*etemp2_1
     sqr+=etemp
     etemp=V10_2*etemp2_2
     sqr+=etemp
     etemp=V10_3*etemp2_3
     sqr+=etemp
     etemp=V10_4*etemp2_4
     sqr+=etemp
     etemp=V10_5*etemp2_5
     sqr+=etemp
     etemp=V10_6*etemp2_6
     sqr+=etemp
     etemp=V10_7*etemp2_7
     sqr+=etemp
     etemp=V10_8*etemp2_8
     sqr+=etemp
     etemp=V10_9*etemp2_9
     sqr+=etemp
     etemp=V10_10*etemp2_10
     sqr+=etemp
     etemp=V10_11*etemp2_11
     sqr+=etemp
     etemp=V10_12*etemp2_12
     sqr+=etemp
     etemp=V10_13*etemp2_13
     sqr+=etemp
     etemp=V10_14*etemp2_14
     sqr+=etemp
     etemp=V10_15*etemp2_15
     sqr+=etemp
     etemp=V10_16*etemp2_16
     sqr+=etemp
     etemp=V10_17*etemp2_17
     sqr+=etemp
     etemp=V10_18*etemp2_18
     sqr+=etemp
     etemp=V10_19*etemp2_19
     sqr+=etemp
     etemp=V10_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V10_1*sqr
     Vtemp_2=V10_2*sqr
     Vtemp_3=V10_3*sqr
     Vtemp_4=V10_4*sqr
     Vtemp_5=V10_5*sqr
     Vtemp_6=V10_6*sqr
     Vtemp_7=V10_7*sqr
     Vtemp_8=V10_8*sqr
     Vtemp_9=V10_9*sqr
     Vtemp_10=V10_10*sqr
     Vtemp_11=V10_11*sqr
     Vtemp_12=V10_12*sqr
     Vtemp_13=V10_13*sqr
     Vtemp_14=V10_14*sqr
     Vtemp_15=V10_15*sqr
     Vtemp_16=V10_16*sqr
     Vtemp_17=V10_17*sqr
     Vtemp_18=V10_18*sqr
     Vtemp_19=V10_19*sqr
     Vtemp_20=V10_20*sqr
#
     V11_1+=Vtemp_1
     V11_2+=Vtemp_2
     V11_3+=Vtemp_3
     V11_4+=Vtemp_4
     V11_5+=Vtemp_5
     V11_6+=Vtemp_6
     V11_7+=Vtemp_7
     V11_8+=Vtemp_8
     V11_9+=Vtemp_9
     V11_10+=Vtemp_10
     V11_11+=Vtemp_11
     V11_12+=Vtemp_12
     V11_13+=Vtemp_13
     V11_14+=Vtemp_14
     V11_15+=Vtemp_15
     V11_16+=Vtemp_16
     V11_17+=Vtemp_17
     V11_18+=Vtemp_18
     V11_19+=Vtemp_19
     V11_20+=Vtemp_20
#
#
     Vtemp_1=V11_1
     Vtemp_2=V11_2
     Vtemp_3=V11_3
     Vtemp_4=V11_4
     Vtemp_5=V11_5
     Vtemp_6=V11_6
     Vtemp_7=V11_7
     Vtemp_8=V11_8
     Vtemp_9=V11_9
     Vtemp_10=V11_10
     Vtemp_11=V11_11
     Vtemp_12=V11_12
     Vtemp_13=V11_13
     Vtemp_14=V11_14
     Vtemp_15=V11_15
     Vtemp_16=V11_16
     Vtemp_17=V11_17
     Vtemp_18=V11_18
     Vtemp_19=V11_19
     Vtemp_20=V11_20
#
     sqr=0.0
#
     etemp=V11_1*Vtemp_1
     sqr+=etemp
     etemp=V11_2*Vtemp_2
     sqr+=etemp
     etemp=V11_3*Vtemp_3
     sqr+=etemp
     etemp=V11_4*Vtemp_4
     sqr+=etemp
     etemp=V11_5*Vtemp_5
     sqr+=etemp
     etemp=V11_6*Vtemp_6
     sqr+=etemp
     etemp=V11_7*Vtemp_7
     sqr+=etemp
     etemp=V11_8*Vtemp_8
     sqr+=etemp
     etemp=V11_9*Vtemp_9
     sqr+=etemp
     etemp=V11_10*Vtemp_10
     sqr+=etemp
     etemp=V11_11*Vtemp_11
     sqr+=etemp
     etemp=V11_12*Vtemp_12
     sqr+=etemp
     etemp=V11_13*Vtemp_13
     sqr+=etemp
     etemp=V11_14*Vtemp_14
     sqr+=etemp
     etemp=V11_15*Vtemp_15
     sqr+=etemp
     etemp=V11_16*Vtemp_16
     sqr+=etemp
     etemp=V11_17*Vtemp_17
     sqr+=etemp
     etemp=V11_18*Vtemp_18
     sqr+=etemp
     etemp=V11_19*Vtemp_19
     sqr+=etemp
     etemp=V11_20*Vtemp_20
     sqr+=etemp
#
       exponent=0.5
       execute square_root sqr exponent
       sqr2=1.0/sqr
#
     V11_1*=sqr2
     V11_2*=sqr2
     V11_3*=sqr2
     V11_4*=sqr2
     V11_5*=sqr2
     V11_6*=sqr2
     V11_7*=sqr2
     V11_8*=sqr2
     V11_9*=sqr2
     V11_10*=sqr2
     V11_11*=sqr2
     V11_12*=sqr2
     V11_13*=sqr2
     V11_14*=sqr2
     V11_15*=sqr2
     V11_16*=sqr2
     V11_17*=sqr2
     V11_18*=sqr2
     V11_19*=sqr2
     V11_20*=sqr2
#
#------12 vectors -------------------------------
#
     etemp2_1=V12_1
     etemp2_2=V12_2
     etemp2_3=V12_3
     etemp2_4=V12_4
     etemp2_5=V12_5
     etemp2_6=V12_6
     etemp2_7=V12_7
     etemp2_8=V12_8
     etemp2_9=V12_9
     etemp2_10=V12_10
     etemp2_11=V12_11
     etemp2_12=V12_12
     etemp2_13=V12_13
     etemp2_14=V12_14
     etemp2_15=V12_15
     etemp2_16=V12_16
     etemp2_17=V12_17
     etemp2_18=V12_18
     etemp2_19=V12_19
     etemp2_20=V12_20
#
     sqr=0.0
     etemp=V1_1*etemp2_1
     sqr+=etemp
     etemp=V1_2*etemp2_2
     sqr+=etemp
     etemp=V1_3*etemp2_3
     sqr+=etemp
     etemp=V1_4*etemp2_4
     sqr+=etemp
     etemp=V1_5*etemp2_5
     sqr+=etemp
     etemp=V1_6*etemp2_6
     sqr+=etemp
     etemp=V1_7*etemp2_7
     sqr+=etemp
     etemp=V1_8*etemp2_8
     sqr+=etemp
     etemp=V1_9*etemp2_9
     sqr+=etemp
     etemp=V1_10*etemp2_10
     sqr+=etemp
     etemp=V1_11*etemp2_11
     sqr+=etemp
     etemp=V1_12*etemp2_12
     sqr+=etemp
     etemp=V1_13*etemp2_13
     sqr+=etemp
     etemp=V1_14*etemp2_14
     sqr+=etemp
     etemp=V1_15*etemp2_15
     sqr+=etemp
     etemp=V1_16*etemp2_16
     sqr+=etemp
     etemp=V1_17*etemp2_17
     sqr+=etemp
     etemp=V1_18*etemp2_18
     sqr+=etemp
     etemp=V1_19*etemp2_19
     sqr+=etemp
     etemp=V1_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V1_1*sqr
     Vtemp_2=V1_2*sqr
     Vtemp_3=V1_3*sqr
     Vtemp_4=V1_4*sqr
     Vtemp_5=V1_5*sqr
     Vtemp_6=V1_6*sqr
     Vtemp_7=V1_7*sqr
     Vtemp_8=V1_8*sqr
     Vtemp_9=V1_9*sqr
     Vtemp_10=V1_10*sqr
     Vtemp_11=V1_11*sqr
     Vtemp_12=V1_12*sqr
     Vtemp_13=V1_13*sqr
     Vtemp_14=V1_14*sqr
     Vtemp_15=V1_15*sqr
     Vtemp_16=V1_16*sqr
     Vtemp_17=V1_17*sqr
     Vtemp_18=V1_18*sqr
     Vtemp_19=V1_19*sqr
     Vtemp_20=V1_20*sqr
#
     V12_1+=Vtemp_1
     V12_2+=Vtemp_2
     V12_3+=Vtemp_3
     V12_4+=Vtemp_4
     V12_5+=Vtemp_5
     V12_6+=Vtemp_6
     V12_7+=Vtemp_7
     V12_8+=Vtemp_8
     V12_9+=Vtemp_9
     V12_10+=Vtemp_10
     V12_11+=Vtemp_11
     V12_12+=Vtemp_12
     V12_13+=Vtemp_13
     V12_14+=Vtemp_14
     V12_15+=Vtemp_15
     V12_16+=Vtemp_16
     V12_17+=Vtemp_17
     V12_18+=Vtemp_18
     V12_19+=Vtemp_19
     V12_20+=Vtemp_20
#
#
     etemp2_1=V12_1
     etemp2_2=V12_2
     etemp2_3=V12_3
     etemp2_4=V12_4
     etemp2_5=V12_5
     etemp2_6=V12_6
     etemp2_7=V12_7
     etemp2_8=V12_8
     etemp2_9=V12_9
     etemp2_10=V12_10
     etemp2_11=V12_11
     etemp2_12=V12_12
     etemp2_13=V12_13
     etemp2_14=V12_14
     etemp2_15=V12_15
     etemp2_16=V12_16
     etemp2_17=V12_17
     etemp2_18=V12_18
     etemp2_19=V12_19
     etemp2_20=V12_20
#
     sqr=0.0
     etemp=V2_1*etemp2_1
     sqr+=etemp
     etemp=V2_2*etemp2_2
     sqr+=etemp
     etemp=V2_3*etemp2_3
     sqr+=etemp
     etemp=V2_4*etemp2_4
     sqr+=etemp
     etemp=V2_5*etemp2_5
     sqr+=etemp
     etemp=V2_6*etemp2_6
     sqr+=etemp
     etemp=V2_7*etemp2_7
     sqr+=etemp
     etemp=V2_8*etemp2_8
     sqr+=etemp
     etemp=V2_9*etemp2_9
     sqr+=etemp
     etemp=V2_10*etemp2_10
     sqr+=etemp
     etemp=V2_11*etemp2_11
     sqr+=etemp
     etemp=V2_12*etemp2_12
     sqr+=etemp
     etemp=V2_13*etemp2_13
     sqr+=etemp
     etemp=V2_14*etemp2_14
     sqr+=etemp
     etemp=V2_15*etemp2_15
     sqr+=etemp
     etemp=V2_16*etemp2_16
     sqr+=etemp
     etemp=V2_17*etemp2_17
     sqr+=etemp
     etemp=V2_18*etemp2_18
     sqr+=etemp
     etemp=V2_19*etemp2_19
     sqr+=etemp
     etemp=V2_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V2_1*sqr
     Vtemp_2=V2_2*sqr
     Vtemp_3=V2_3*sqr
     Vtemp_4=V2_4*sqr
     Vtemp_5=V2_5*sqr
     Vtemp_6=V2_6*sqr
     Vtemp_7=V2_7*sqr
     Vtemp_8=V2_8*sqr
     Vtemp_9=V2_9*sqr
     Vtemp_10=V2_10*sqr
     Vtemp_11=V2_11*sqr
     Vtemp_12=V2_12*sqr
     Vtemp_13=V2_13*sqr
     Vtemp_14=V2_14*sqr
     Vtemp_15=V2_15*sqr
     Vtemp_16=V2_16*sqr
     Vtemp_17=V2_17*sqr
     Vtemp_18=V2_18*sqr
     Vtemp_19=V2_19*sqr
     Vtemp_20=V2_20*sqr
#
     V12_1+=Vtemp_1
     V12_2+=Vtemp_2
     V12_3+=Vtemp_3
     V12_4+=Vtemp_4
     V12_5+=Vtemp_5
     V12_6+=Vtemp_6
     V12_7+=Vtemp_7
     V12_8+=Vtemp_8
     V12_9+=Vtemp_9
     V12_10+=Vtemp_10
     V12_11+=Vtemp_11
     V12_12+=Vtemp_12
     V12_13+=Vtemp_13
     V12_14+=Vtemp_14
     V12_15+=Vtemp_15
     V12_16+=Vtemp_16
     V12_17+=Vtemp_17
     V12_18+=Vtemp_18
     V12_19+=Vtemp_19
     V12_20+=Vtemp_20
#
#
     etemp2_1=V12_1
     etemp2_2=V12_2
     etemp2_3=V12_3
     etemp2_4=V12_4
     etemp2_5=V12_5
     etemp2_6=V12_6
     etemp2_7=V12_7
     etemp2_8=V12_8
     etemp2_9=V12_9
     etemp2_10=V12_10
     etemp2_11=V12_11
     etemp2_12=V12_12
     etemp2_13=V12_13
     etemp2_14=V12_14
     etemp2_15=V12_15
     etemp2_16=V12_16
     etemp2_17=V12_17
     etemp2_18=V12_18
     etemp2_19=V12_19
     etemp2_20=V12_20
#
     sqr=0.0
     etemp=V3_1*etemp2_1
     sqr+=etemp
     etemp=V3_2*etemp2_2
     sqr+=etemp
     etemp=V3_3*etemp2_3
     sqr+=etemp
     etemp=V3_4*etemp2_4
     sqr+=etemp
     etemp=V3_5*etemp2_5
     sqr+=etemp
     etemp=V3_6*etemp2_6
     sqr+=etemp
     etemp=V3_7*etemp2_7
     sqr+=etemp
     etemp=V3_8*etemp2_8
     sqr+=etemp
     etemp=V3_9*etemp2_9
     sqr+=etemp
     etemp=V3_10*etemp2_10
     sqr+=etemp
     etemp=V3_11*etemp2_11
     sqr+=etemp
     etemp=V3_12*etemp2_12
     sqr+=etemp
     etemp=V3_13*etemp2_13
     sqr+=etemp
     etemp=V3_14*etemp2_14
     sqr+=etemp
     etemp=V3_15*etemp2_15
     sqr+=etemp
     etemp=V3_16*etemp2_16
     sqr+=etemp
     etemp=V3_17*etemp2_17
     sqr+=etemp
     etemp=V3_18*etemp2_18
     sqr+=etemp
     etemp=V3_19*etemp2_19
     sqr+=etemp
     etemp=V3_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V3_1*sqr
     Vtemp_2=V3_2*sqr
     Vtemp_3=V3_3*sqr
     Vtemp_4=V3_4*sqr
     Vtemp_5=V3_5*sqr
     Vtemp_6=V3_6*sqr
     Vtemp_7=V3_7*sqr
     Vtemp_8=V3_8*sqr
     Vtemp_9=V3_9*sqr
     Vtemp_10=V3_10*sqr
     Vtemp_11=V3_11*sqr
     Vtemp_12=V3_12*sqr
     Vtemp_13=V3_13*sqr
     Vtemp_14=V3_14*sqr
     Vtemp_15=V3_15*sqr
     Vtemp_16=V3_16*sqr
     Vtemp_17=V3_17*sqr
     Vtemp_18=V3_18*sqr
     Vtemp_19=V3_19*sqr
     Vtemp_20=V3_20*sqr
#
     V12_1+=Vtemp_1
     V12_2+=Vtemp_2
     V12_3+=Vtemp_3
     V12_4+=Vtemp_4
     V12_5+=Vtemp_5
     V12_6+=Vtemp_6
     V12_7+=Vtemp_7
     V12_8+=Vtemp_8
     V12_9+=Vtemp_9
     V12_10+=Vtemp_10
     V12_11+=Vtemp_11
     V12_12+=Vtemp_12
     V12_13+=Vtemp_13
     V12_14+=Vtemp_14
     V12_15+=Vtemp_15
     V12_16+=Vtemp_16
     V12_17+=Vtemp_17
     V12_18+=Vtemp_18
     V12_19+=Vtemp_19
     V12_20+=Vtemp_20
#
#
     etemp2_1=V12_1
     etemp2_2=V12_2
     etemp2_3=V12_3
     etemp2_4=V12_4
     etemp2_5=V12_5
     etemp2_6=V12_6
     etemp2_7=V12_7
     etemp2_8=V12_8
     etemp2_9=V12_9
     etemp2_10=V12_10
     etemp2_11=V12_11
     etemp2_12=V12_12
     etemp2_13=V12_13
     etemp2_14=V12_14
     etemp2_15=V12_15
     etemp2_16=V12_16
     etemp2_17=V12_17
     etemp2_18=V12_18
     etemp2_19=V12_19
     etemp2_20=V12_20
#
     sqr=0.0
     etemp=V4_1*etemp2_1
     sqr+=etemp
     etemp=V4_2*etemp2_2
     sqr+=etemp
     etemp=V4_3*etemp2_3
     sqr+=etemp
     etemp=V4_4*etemp2_4
     sqr+=etemp
     etemp=V4_5*etemp2_5
     sqr+=etemp
     etemp=V4_6*etemp2_6
     sqr+=etemp
     etemp=V4_7*etemp2_7
     sqr+=etemp
     etemp=V4_8*etemp2_8
     sqr+=etemp
     etemp=V4_9*etemp2_9
     sqr+=etemp
     etemp=V4_10*etemp2_10
     sqr+=etemp
     etemp=V4_11*etemp2_11
     sqr+=etemp
     etemp=V4_12*etemp2_12
     sqr+=etemp
     etemp=V4_13*etemp2_13
     sqr+=etemp
     etemp=V4_14*etemp2_14
     sqr+=etemp
     etemp=V4_15*etemp2_15
     sqr+=etemp
     etemp=V4_16*etemp2_16
     sqr+=etemp
     etemp=V4_17*etemp2_17
     sqr+=etemp
     etemp=V4_18*etemp2_18
     sqr+=etemp
     etemp=V4_19*etemp2_19
     sqr+=etemp
     etemp=V4_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V4_1*sqr
     Vtemp_2=V4_2*sqr
     Vtemp_3=V4_3*sqr
     Vtemp_4=V4_4*sqr
     Vtemp_5=V4_5*sqr
     Vtemp_6=V4_6*sqr
     Vtemp_7=V4_7*sqr
     Vtemp_8=V4_8*sqr
     Vtemp_9=V4_9*sqr
     Vtemp_10=V4_10*sqr
     Vtemp_11=V4_11*sqr
     Vtemp_12=V4_12*sqr
     Vtemp_13=V4_13*sqr
     Vtemp_14=V4_14*sqr
     Vtemp_15=V4_15*sqr
     Vtemp_16=V4_16*sqr
     Vtemp_17=V4_17*sqr
     Vtemp_18=V4_18*sqr
     Vtemp_19=V4_19*sqr
     Vtemp_20=V4_20*sqr
#
     V12_1+=Vtemp_1
     V12_2+=Vtemp_2
     V12_3+=Vtemp_3
     V12_4+=Vtemp_4
     V12_5+=Vtemp_5
     V12_6+=Vtemp_6
     V12_7+=Vtemp_7
     V12_8+=Vtemp_8
     V12_9+=Vtemp_9
     V12_10+=Vtemp_10
     V12_11+=Vtemp_11
     V12_12+=Vtemp_12
     V12_13+=Vtemp_13
     V12_14+=Vtemp_14
     V12_15+=Vtemp_15
     V12_16+=Vtemp_16
     V12_17+=Vtemp_17
     V12_18+=Vtemp_18
     V12_19+=Vtemp_19
     V12_20+=Vtemp_20
#
#
     etemp2_1=V12_1
     etemp2_2=V12_2
     etemp2_3=V12_3
     etemp2_4=V12_4
     etemp2_5=V12_5
     etemp2_6=V12_6
     etemp2_7=V12_7
     etemp2_8=V12_8
     etemp2_9=V12_9
     etemp2_10=V12_10
     etemp2_11=V12_11
     etemp2_12=V12_12
     etemp2_13=V12_13
     etemp2_14=V12_14
     etemp2_15=V12_15
     etemp2_16=V12_16
     etemp2_17=V12_17
     etemp2_18=V12_18
     etemp2_19=V12_19
     etemp2_20=V12_20
#
     sqr=0.0
     etemp=V5_1*etemp2_1
     sqr+=etemp
     etemp=V5_2*etemp2_2
     sqr+=etemp
     etemp=V5_3*etemp2_3
     sqr+=etemp
     etemp=V5_4*etemp2_4
     sqr+=etemp
     etemp=V5_5*etemp2_5
     sqr+=etemp
     etemp=V5_6*etemp2_6
     sqr+=etemp
     etemp=V5_7*etemp2_7
     sqr+=etemp
     etemp=V5_8*etemp2_8
     sqr+=etemp
     etemp=V5_9*etemp2_9
     sqr+=etemp
     etemp=V5_10*etemp2_10
     sqr+=etemp
     etemp=V5_11*etemp2_11
     sqr+=etemp
     etemp=V5_12*etemp2_12
     sqr+=etemp
     etemp=V5_13*etemp2_13
     sqr+=etemp
     etemp=V5_14*etemp2_14
     sqr+=etemp
     etemp=V5_15*etemp2_15
     sqr+=etemp
     etemp=V5_16*etemp2_16
     sqr+=etemp
     etemp=V5_17*etemp2_17
     sqr+=etemp
     etemp=V5_18*etemp2_18
     sqr+=etemp
     etemp=V5_19*etemp2_19
     sqr+=etemp
     etemp=V5_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V5_1*sqr
     Vtemp_2=V5_2*sqr
     Vtemp_3=V5_3*sqr
     Vtemp_4=V5_4*sqr
     Vtemp_5=V5_5*sqr
     Vtemp_6=V5_6*sqr
     Vtemp_7=V5_7*sqr
     Vtemp_8=V5_8*sqr
     Vtemp_9=V5_9*sqr
     Vtemp_10=V5_10*sqr
     Vtemp_11=V5_11*sqr
     Vtemp_12=V5_12*sqr
     Vtemp_13=V5_13*sqr
     Vtemp_14=V5_14*sqr
     Vtemp_15=V5_15*sqr
     Vtemp_16=V5_16*sqr
     Vtemp_17=V5_17*sqr
     Vtemp_18=V5_18*sqr
     Vtemp_19=V5_19*sqr
     Vtemp_20=V5_20*sqr
#
     V12_1+=Vtemp_1
     V12_2+=Vtemp_2
     V12_3+=Vtemp_3
     V12_4+=Vtemp_4
     V12_5+=Vtemp_5
     V12_6+=Vtemp_6
     V12_7+=Vtemp_7
     V12_8+=Vtemp_8
     V12_9+=Vtemp_9
     V12_10+=Vtemp_10
     V12_11+=Vtemp_11
     V12_12+=Vtemp_12
     V12_13+=Vtemp_13
     V12_14+=Vtemp_14
     V12_15+=Vtemp_15
     V12_16+=Vtemp_16
     V12_17+=Vtemp_17
     V12_18+=Vtemp_18
     V12_19+=Vtemp_19
     V12_20+=Vtemp_20
#
#
     etemp2_1=V12_1
     etemp2_2=V12_2
     etemp2_3=V12_3
     etemp2_4=V12_4
     etemp2_5=V12_5
     etemp2_6=V12_6
     etemp2_7=V12_7
     etemp2_8=V12_8
     etemp2_9=V12_9
     etemp2_10=V12_10
     etemp2_11=V12_11
     etemp2_12=V12_12
     etemp2_13=V12_13
     etemp2_14=V12_14
     etemp2_15=V12_15
     etemp2_16=V12_16
     etemp2_17=V12_17
     etemp2_18=V12_18
     etemp2_19=V12_19
     etemp2_20=V12_20
#
     sqr=0.0
     etemp=V6_1*etemp2_1
     sqr+=etemp
     etemp=V6_2*etemp2_2
     sqr+=etemp
     etemp=V6_3*etemp2_3
     sqr+=etemp
     etemp=V6_4*etemp2_4
     sqr+=etemp
     etemp=V6_5*etemp2_5
     sqr+=etemp
     etemp=V6_6*etemp2_6
     sqr+=etemp
     etemp=V6_7*etemp2_7
     sqr+=etemp
     etemp=V6_8*etemp2_8
     sqr+=etemp
     etemp=V6_9*etemp2_9
     sqr+=etemp
     etemp=V6_10*etemp2_10
     sqr+=etemp
     etemp=V6_11*etemp2_11
     sqr+=etemp
     etemp=V6_12*etemp2_12
     sqr+=etemp
     etemp=V6_13*etemp2_13
     sqr+=etemp
     etemp=V6_14*etemp2_14
     sqr+=etemp
     etemp=V6_15*etemp2_15
     sqr+=etemp
     etemp=V6_16*etemp2_16
     sqr+=etemp
     etemp=V6_17*etemp2_17
     sqr+=etemp
     etemp=V6_18*etemp2_18
     sqr+=etemp
     etemp=V6_19*etemp2_19
     sqr+=etemp
     etemp=V6_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V6_1*sqr
     Vtemp_2=V6_2*sqr
     Vtemp_3=V6_3*sqr
     Vtemp_4=V6_4*sqr
     Vtemp_5=V6_5*sqr
     Vtemp_6=V6_6*sqr
     Vtemp_7=V6_7*sqr
     Vtemp_8=V6_8*sqr
     Vtemp_9=V6_9*sqr
     Vtemp_10=V6_10*sqr
     Vtemp_11=V6_11*sqr
     Vtemp_12=V6_12*sqr
     Vtemp_13=V6_13*sqr
     Vtemp_14=V6_14*sqr
     Vtemp_15=V6_15*sqr
     Vtemp_16=V6_16*sqr
     Vtemp_17=V6_17*sqr
     Vtemp_18=V6_18*sqr
     Vtemp_19=V6_19*sqr
     Vtemp_20=V6_20*sqr
#
     V12_1+=Vtemp_1
     V12_2+=Vtemp_2
     V12_3+=Vtemp_3
     V12_4+=Vtemp_4
     V12_5+=Vtemp_5
     V12_6+=Vtemp_6
     V12_7+=Vtemp_7
     V12_8+=Vtemp_8
     V12_9+=Vtemp_9
     V12_10+=Vtemp_10
     V12_11+=Vtemp_11
     V12_12+=Vtemp_12
     V12_13+=Vtemp_13
     V12_14+=Vtemp_14
     V12_15+=Vtemp_15
     V12_16+=Vtemp_16
     V12_17+=Vtemp_17
     V12_18+=Vtemp_18
     V12_19+=Vtemp_19
     V12_20+=Vtemp_20
#
#
     etemp2_1=V12_1
     etemp2_2=V12_2
     etemp2_3=V12_3
     etemp2_4=V12_4
     etemp2_5=V12_5
     etemp2_6=V12_6
     etemp2_7=V12_7
     etemp2_8=V12_8
     etemp2_9=V12_9
     etemp2_10=V12_10
     etemp2_11=V12_11
     etemp2_12=V12_12
     etemp2_13=V12_13
     etemp2_14=V12_14
     etemp2_15=V12_15
     etemp2_16=V12_16
     etemp2_17=V12_17
     etemp2_18=V12_18
     etemp2_19=V12_19
     etemp2_20=V12_20
#
     sqr=0.0
     etemp=V7_1*etemp2_1
     sqr+=etemp
     etemp=V7_2*etemp2_2
     sqr+=etemp
     etemp=V7_3*etemp2_3
     sqr+=etemp
     etemp=V7_4*etemp2_4
     sqr+=etemp
     etemp=V7_5*etemp2_5
     sqr+=etemp
     etemp=V7_6*etemp2_6
     sqr+=etemp
     etemp=V7_7*etemp2_7
     sqr+=etemp
     etemp=V7_8*etemp2_8
     sqr+=etemp
     etemp=V7_9*etemp2_9
     sqr+=etemp
     etemp=V7_10*etemp2_10
     sqr+=etemp
     etemp=V7_11*etemp2_11
     sqr+=etemp
     etemp=V7_12*etemp2_12
     sqr+=etemp
     etemp=V7_13*etemp2_13
     sqr+=etemp
     etemp=V7_14*etemp2_14
     sqr+=etemp
     etemp=V7_15*etemp2_15
     sqr+=etemp
     etemp=V7_16*etemp2_16
     sqr+=etemp
     etemp=V7_17*etemp2_17
     sqr+=etemp
     etemp=V7_18*etemp2_18
     sqr+=etemp
     etemp=V7_19*etemp2_19
     sqr+=etemp
     etemp=V7_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V7_1*sqr
     Vtemp_2=V7_2*sqr
     Vtemp_3=V7_3*sqr
     Vtemp_4=V7_4*sqr
     Vtemp_5=V7_5*sqr
     Vtemp_6=V7_6*sqr
     Vtemp_7=V7_7*sqr
     Vtemp_8=V7_8*sqr
     Vtemp_9=V7_9*sqr
     Vtemp_10=V7_10*sqr
     Vtemp_11=V7_11*sqr
     Vtemp_12=V7_12*sqr
     Vtemp_13=V7_13*sqr
     Vtemp_14=V7_14*sqr
     Vtemp_15=V7_15*sqr
     Vtemp_16=V7_16*sqr
     Vtemp_17=V7_17*sqr
     Vtemp_18=V7_18*sqr
     Vtemp_19=V7_19*sqr
     Vtemp_20=V7_20*sqr
#
     V12_1+=Vtemp_1
     V12_2+=Vtemp_2
     V12_3+=Vtemp_3
     V12_4+=Vtemp_4
     V12_5+=Vtemp_5
     V12_6+=Vtemp_6
     V12_7+=Vtemp_7
     V12_8+=Vtemp_8
     V12_9+=Vtemp_9
     V12_10+=Vtemp_10
     V12_11+=Vtemp_11
     V12_12+=Vtemp_12
     V12_13+=Vtemp_13
     V12_14+=Vtemp_14
     V12_15+=Vtemp_15
     V12_16+=Vtemp_16
     V12_17+=Vtemp_17
     V12_18+=Vtemp_18
     V12_19+=Vtemp_19
     V12_20+=Vtemp_20
#
#
     etemp2_1=V12_1
     etemp2_2=V12_2
     etemp2_3=V12_3
     etemp2_4=V12_4
     etemp2_5=V12_5
     etemp2_6=V12_6
     etemp2_7=V12_7
     etemp2_8=V12_8
     etemp2_9=V12_9
     etemp2_10=V12_10
     etemp2_11=V12_11
     etemp2_12=V12_12
     etemp2_13=V12_13
     etemp2_14=V12_14
     etemp2_15=V12_15
     etemp2_16=V12_16
     etemp2_17=V12_17
     etemp2_18=V12_18
     etemp2_19=V12_19
     etemp2_20=V12_20
#
     sqr=0.0
     etemp=V8_1*etemp2_1
     sqr+=etemp
     etemp=V8_2*etemp2_2
     sqr+=etemp
     etemp=V8_3*etemp2_3
     sqr+=etemp
     etemp=V8_4*etemp2_4
     sqr+=etemp
     etemp=V8_5*etemp2_5
     sqr+=etemp
     etemp=V8_6*etemp2_6
     sqr+=etemp
     etemp=V8_7*etemp2_7
     sqr+=etemp
     etemp=V8_8*etemp2_8
     sqr+=etemp
     etemp=V8_9*etemp2_9
     sqr+=etemp
     etemp=V8_10*etemp2_10
     sqr+=etemp
     etemp=V8_11*etemp2_11
     sqr+=etemp
     etemp=V8_12*etemp2_12
     sqr+=etemp
     etemp=V8_13*etemp2_13
     sqr+=etemp
     etemp=V8_14*etemp2_14
     sqr+=etemp
     etemp=V8_15*etemp2_15
     sqr+=etemp
     etemp=V8_16*etemp2_16
     sqr+=etemp
     etemp=V8_17*etemp2_17
     sqr+=etemp
     etemp=V8_18*etemp2_18
     sqr+=etemp
     etemp=V8_19*etemp2_19
     sqr+=etemp
     etemp=V8_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V8_1*sqr
     Vtemp_2=V8_2*sqr
     Vtemp_3=V8_3*sqr
     Vtemp_4=V8_4*sqr
     Vtemp_5=V8_5*sqr
     Vtemp_6=V8_6*sqr
     Vtemp_7=V8_7*sqr
     Vtemp_8=V8_8*sqr
     Vtemp_9=V8_9*sqr
     Vtemp_10=V8_10*sqr
     Vtemp_11=V8_11*sqr
     Vtemp_12=V8_12*sqr
     Vtemp_13=V8_13*sqr
     Vtemp_14=V8_14*sqr
     Vtemp_15=V8_15*sqr
     Vtemp_16=V8_16*sqr
     Vtemp_17=V8_17*sqr
     Vtemp_18=V8_18*sqr
     Vtemp_19=V8_19*sqr
     Vtemp_20=V8_20*sqr
#
     V12_1+=Vtemp_1
     V12_2+=Vtemp_2
     V12_3+=Vtemp_3
     V12_4+=Vtemp_4
     V12_5+=Vtemp_5
     V12_6+=Vtemp_6
     V12_7+=Vtemp_7
     V12_8+=Vtemp_8
     V12_9+=Vtemp_9
     V12_10+=Vtemp_10
     V12_11+=Vtemp_11
     V12_12+=Vtemp_12
     V12_13+=Vtemp_13
     V12_14+=Vtemp_14
     V12_15+=Vtemp_15
     V12_16+=Vtemp_16
     V12_17+=Vtemp_17
     V12_18+=Vtemp_18
     V12_19+=Vtemp_19
     V12_20+=Vtemp_20
#
#
     etemp2_1=V12_1
     etemp2_2=V12_2
     etemp2_3=V12_3
     etemp2_4=V12_4
     etemp2_5=V12_5
     etemp2_6=V12_6
     etemp2_7=V12_7
     etemp2_8=V12_8
     etemp2_9=V12_9
     etemp2_10=V12_10
     etemp2_11=V12_11
     etemp2_12=V12_12
     etemp2_13=V12_13
     etemp2_14=V12_14
     etemp2_15=V12_15
     etemp2_16=V12_16
     etemp2_17=V12_17
     etemp2_18=V12_18
     etemp2_19=V12_19
     etemp2_20=V12_20
#
     sqr=0.0
     etemp=V9_1*etemp2_1
     sqr+=etemp
     etemp=V9_2*etemp2_2
     sqr+=etemp
     etemp=V9_3*etemp2_3
     sqr+=etemp
     etemp=V9_4*etemp2_4
     sqr+=etemp
     etemp=V9_5*etemp2_5
     sqr+=etemp
     etemp=V9_6*etemp2_6
     sqr+=etemp
     etemp=V9_7*etemp2_7
     sqr+=etemp
     etemp=V9_8*etemp2_8
     sqr+=etemp
     etemp=V9_9*etemp2_9
     sqr+=etemp
     etemp=V9_10*etemp2_10
     sqr+=etemp
     etemp=V9_11*etemp2_11
     sqr+=etemp
     etemp=V9_12*etemp2_12
     sqr+=etemp
     etemp=V9_13*etemp2_13
     sqr+=etemp
     etemp=V9_14*etemp2_14
     sqr+=etemp
     etemp=V9_15*etemp2_15
     sqr+=etemp
     etemp=V9_16*etemp2_16
     sqr+=etemp
     etemp=V9_17*etemp2_17
     sqr+=etemp
     etemp=V9_18*etemp2_18
     sqr+=etemp
     etemp=V9_19*etemp2_19
     sqr+=etemp
     etemp=V9_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V9_1*sqr
     Vtemp_2=V9_2*sqr
     Vtemp_3=V9_3*sqr
     Vtemp_4=V9_4*sqr
     Vtemp_5=V9_5*sqr
     Vtemp_6=V9_6*sqr
     Vtemp_7=V9_7*sqr
     Vtemp_8=V9_8*sqr
     Vtemp_9=V9_9*sqr
     Vtemp_10=V9_10*sqr
     Vtemp_11=V9_11*sqr
     Vtemp_12=V9_12*sqr
     Vtemp_13=V9_13*sqr
     Vtemp_14=V9_14*sqr
     Vtemp_15=V9_15*sqr
     Vtemp_16=V9_16*sqr
     Vtemp_17=V9_17*sqr
     Vtemp_18=V9_18*sqr
     Vtemp_19=V9_19*sqr
     Vtemp_20=V9_20*sqr
#
     V12_1+=Vtemp_1
     V12_2+=Vtemp_2
     V12_3+=Vtemp_3
     V12_4+=Vtemp_4
     V12_5+=Vtemp_5
     V12_6+=Vtemp_6
     V12_7+=Vtemp_7
     V12_8+=Vtemp_8
     V12_9+=Vtemp_9
     V12_10+=Vtemp_10
     V12_11+=Vtemp_11
     V12_12+=Vtemp_12
     V12_13+=Vtemp_13
     V12_14+=Vtemp_14
     V12_15+=Vtemp_15
     V12_16+=Vtemp_16
     V12_17+=Vtemp_17
     V12_18+=Vtemp_18
     V12_19+=Vtemp_19
     V12_20+=Vtemp_20
#
#
     etemp2_1=V12_1
     etemp2_2=V12_2
     etemp2_3=V12_3
     etemp2_4=V12_4
     etemp2_5=V12_5
     etemp2_6=V12_6
     etemp2_7=V12_7
     etemp2_8=V12_8
     etemp2_9=V12_9
     etemp2_10=V12_10
     etemp2_11=V12_11
     etemp2_12=V12_12
     etemp2_13=V12_13
     etemp2_14=V12_14
     etemp2_15=V12_15
     etemp2_16=V12_16
     etemp2_17=V12_17
     etemp2_18=V12_18
     etemp2_19=V12_19
     etemp2_20=V12_20
#
     sqr=0.0
     etemp=V10_1*etemp2_1
     sqr+=etemp
     etemp=V10_2*etemp2_2
     sqr+=etemp
     etemp=V10_3*etemp2_3
     sqr+=etemp
     etemp=V10_4*etemp2_4
     sqr+=etemp
     etemp=V10_5*etemp2_5
     sqr+=etemp
     etemp=V10_6*etemp2_6
     sqr+=etemp
     etemp=V10_7*etemp2_7
     sqr+=etemp
     etemp=V10_8*etemp2_8
     sqr+=etemp
     etemp=V10_9*etemp2_9
     sqr+=etemp
     etemp=V10_10*etemp2_10
     sqr+=etemp
     etemp=V10_11*etemp2_11
     sqr+=etemp
     etemp=V10_12*etemp2_12
     sqr+=etemp
     etemp=V10_13*etemp2_13
     sqr+=etemp
     etemp=V10_14*etemp2_14
     sqr+=etemp
     etemp=V10_15*etemp2_15
     sqr+=etemp
     etemp=V10_16*etemp2_16
     sqr+=etemp
     etemp=V10_17*etemp2_17
     sqr+=etemp
     etemp=V10_18*etemp2_18
     sqr+=etemp
     etemp=V10_19*etemp2_19
     sqr+=etemp
     etemp=V10_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V10_1*sqr
     Vtemp_2=V10_2*sqr
     Vtemp_3=V10_3*sqr
     Vtemp_4=V10_4*sqr
     Vtemp_5=V10_5*sqr
     Vtemp_6=V10_6*sqr
     Vtemp_7=V10_7*sqr
     Vtemp_8=V10_8*sqr
     Vtemp_9=V10_9*sqr
     Vtemp_10=V10_10*sqr
     Vtemp_11=V10_11*sqr
     Vtemp_12=V10_12*sqr
     Vtemp_13=V10_13*sqr
     Vtemp_14=V10_14*sqr
     Vtemp_15=V10_15*sqr
     Vtemp_16=V10_16*sqr
     Vtemp_17=V10_17*sqr
     Vtemp_18=V10_18*sqr
     Vtemp_19=V10_19*sqr
     Vtemp_20=V10_20*sqr
#
     V12_1+=Vtemp_1
     V12_2+=Vtemp_2
     V12_3+=Vtemp_3
     V12_4+=Vtemp_4
     V12_5+=Vtemp_5
     V12_6+=Vtemp_6
     V12_7+=Vtemp_7
     V12_8+=Vtemp_8
     V12_9+=Vtemp_9
     V12_10+=Vtemp_10
     V12_11+=Vtemp_11
     V12_12+=Vtemp_12
     V12_13+=Vtemp_13
     V12_14+=Vtemp_14
     V12_15+=Vtemp_15
     V12_16+=Vtemp_16
     V12_17+=Vtemp_17
     V12_18+=Vtemp_18
     V12_19+=Vtemp_19
     V12_20+=Vtemp_20
#
#
     etemp2_1=V12_1
     etemp2_2=V12_2
     etemp2_3=V12_3
     etemp2_4=V12_4
     etemp2_5=V12_5
     etemp2_6=V12_6
     etemp2_7=V12_7
     etemp2_8=V12_8
     etemp2_9=V12_9
     etemp2_10=V12_10
     etemp2_11=V12_11
     etemp2_12=V12_12
     etemp2_13=V12_13
     etemp2_14=V12_14
     etemp2_15=V12_15
     etemp2_16=V12_16
     etemp2_17=V12_17
     etemp2_18=V12_18
     etemp2_19=V12_19
     etemp2_20=V12_20
#
     sqr=0.0
     etemp=V11_1*etemp2_1
     sqr+=etemp
     etemp=V11_2*etemp2_2
     sqr+=etemp
     etemp=V11_3*etemp2_3
     sqr+=etemp
     etemp=V11_4*etemp2_4
     sqr+=etemp
     etemp=V11_5*etemp2_5
     sqr+=etemp
     etemp=V11_6*etemp2_6
     sqr+=etemp
     etemp=V11_7*etemp2_7
     sqr+=etemp
     etemp=V11_8*etemp2_8
     sqr+=etemp
     etemp=V11_9*etemp2_9
     sqr+=etemp
     etemp=V11_10*etemp2_10
     sqr+=etemp
     etemp=V11_11*etemp2_11
     sqr+=etemp
     etemp=V11_12*etemp2_12
     sqr+=etemp
     etemp=V11_13*etemp2_13
     sqr+=etemp
     etemp=V11_14*etemp2_14
     sqr+=etemp
     etemp=V11_15*etemp2_15
     sqr+=etemp
     etemp=V11_16*etemp2_16
     sqr+=etemp
     etemp=V11_17*etemp2_17
     sqr+=etemp
     etemp=V11_18*etemp2_18
     sqr+=etemp
     etemp=V11_19*etemp2_19
     sqr+=etemp
     etemp=V11_20*etemp2_20
     sqr+=etemp
#
      sqr*=-1.0
#
     Vtemp_1=V11_1*sqr
     Vtemp_2=V11_2*sqr
     Vtemp_3=V11_3*sqr
     Vtemp_4=V11_4*sqr
     Vtemp_5=V11_5*sqr
     Vtemp_6=V11_6*sqr
     Vtemp_7=V11_7*sqr
     Vtemp_8=V11_8*sqr
     Vtemp_9=V11_9*sqr
     Vtemp_10=V11_10*sqr
     Vtemp_11=V11_11*sqr
     Vtemp_12=V11_12*sqr
     Vtemp_13=V11_13*sqr
     Vtemp_14=V11_14*sqr
     Vtemp_15=V11_15*sqr
     Vtemp_16=V11_16*sqr
     Vtemp_17=V11_17*sqr
     Vtemp_18=V11_18*sqr
     Vtemp_19=V11_19*sqr
     Vtemp_20=V11_20*sqr
#
     V12_1+=Vtemp_1
     V12_2+=Vtemp_2
     V12_3+=Vtemp_3
     V12_4+=Vtemp_4
     V12_5+=Vtemp_5
     V12_6+=Vtemp_6
     V12_7+=Vtemp_7
     V12_8+=Vtemp_8
     V12_9+=Vtemp_9
     V12_10+=Vtemp_10
     V12_11+=Vtemp_11
     V12_12+=Vtemp_12
     V12_13+=Vtemp_13
     V12_14+=Vtemp_14
     V12_15+=Vtemp_15
     V12_16+=Vtemp_16
     V12_17+=Vtemp_17
     V12_18+=Vtemp_18
     V12_19+=Vtemp_19
     V12_20+=Vtemp_20
#
#
     Vtemp_1=V12_1
     Vtemp_2=V12_2
     Vtemp_3=V12_3
     Vtemp_4=V12_4
     Vtemp_5=V12_5
     Vtemp_6=V12_6
     Vtemp_7=V12_7
     Vtemp_8=V12_8
     Vtemp_9=V12_9
     Vtemp_10=V12_10
     Vtemp_11=V12_11
     Vtemp_12=V12_12
     Vtemp_13=V12_13
     Vtemp_14=V12_14
     Vtemp_15=V12_15
     Vtemp_16=V12_16
     Vtemp_17=V12_17
     Vtemp_18=V12_18
     Vtemp_19=V12_19
     Vtemp_20=V12_20
#
     sqr=0.0
#
     etemp=V12_1*Vtemp_1
     sqr+=etemp
     etemp=V12_2*Vtemp_2
     sqr+=etemp
     etemp=V12_3*Vtemp_3
     sqr+=etemp
     etemp=V12_4*Vtemp_4
     sqr+=etemp
     etemp=V12_5*Vtemp_5
     sqr+=etemp
     etemp=V12_6*Vtemp_6
     sqr+=etemp
     etemp=V12_7*Vtemp_7
     sqr+=etemp
     etemp=V12_8*Vtemp_8
     sqr+=etemp
     etemp=V12_9*Vtemp_9
     sqr+=etemp
     etemp=V12_10*Vtemp_10
     sqr+=etemp
     etemp=V12_11*Vtemp_11
     sqr+=etemp
     etemp=V12_12*Vtemp_12
     sqr+=etemp
     etemp=V12_13*Vtemp_13
     sqr+=etemp
     etemp=V12_14*Vtemp_14
     sqr+=etemp
     etemp=V12_15*Vtemp_15
     sqr+=etemp
     etemp=V12_16*Vtemp_16
     sqr+=etemp
     etemp=V12_17*Vtemp_17
     sqr+=etemp
     etemp=V12_18*Vtemp_18
     sqr+=etemp
     etemp=V12_19*Vtemp_19
     sqr+=etemp
     etemp=V12_20*Vtemp_20
     sqr+=etemp
#
       exponent=0.5
       execute square_root sqr exponent
       sqr2=1.0/sqr
#
     V12_1*=sqr2
     V12_2*=sqr2
     V12_3*=sqr2
     V12_4*=sqr2
     V12_5*=sqr2
     V12_6*=sqr2
     V12_7*=sqr2
     V12_8*=sqr2
     V12_9*=sqr2
     V12_10*=sqr2
     V12_11*=sqr2
     V12_12*=sqr2
     V12_13*=sqr2
     V12_14*=sqr2
     V12_15*=sqr2
     V12_16*=sqr2
     V12_17*=sqr2
     V12_18*=sqr2
     V12_19*=sqr2
     V12_20*=sqr2
# 
     DO k20 
     DO j20 
#
        if j20 == 1 
           if k20 == 1 
              MYvev(k20,j20) = V1_1  
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_1  
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_1  
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_1  
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_1  
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_1  
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_1  
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_1  
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_1  
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_1  
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_1  
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_1  
           endif 
        endif 
#
#
        if j20 == 2 
           if k20 == 1 
              MYvev(k20,j20) = V1_2  
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_2  
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_2  
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_2  
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_2  
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_2  
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_2  
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_2  
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_2  
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_2  
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_2  
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_2  
           endif 
        endif 
#
#
        if j20 == 3 
           if k20 == 1 
              MYvev(k20,j20) = V1_3  
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_3  
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_3  
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_3  
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_3  
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_3  
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_3  
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_3  
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_3  
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_3  
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_3  
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_3  
           endif 
        endif 
#
#
        if j20 == 4 
           if k20 == 1 
              MYvev(k20,j20) = V1_4  
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_4  
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_4  
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_4  
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_4  
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_4  
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_4  
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_4  
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_4  
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_4  
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_4  
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_4  
           endif 
        endif 
#
#
        if j20 == 5 
           if k20 == 1 
              MYvev(k20,j20) = V1_5  
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_5  
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_5  
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_5  
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_5  
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_5  
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_5  
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_5  
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_5  
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_5  
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_5  
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_5  
           endif 
        endif 
#
#
        if j20 == 6 
           if k20 == 1 
              MYvev(k20,j20) = V1_6  
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_6  
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_6  
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_6  
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_6  
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_6  
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_6  
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_6  
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_6  
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_6  
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_6  
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_6  
           endif 
        endif 
#
#
        if j20 == 7 
           if k20 == 1 
              MYvev(k20,j20) = V1_7  
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_7  
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_7  
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_7  
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_7  
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_7  
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_7  
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_7  
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_7  
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_7  
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_7  
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_7  
           endif 
        endif 
#
#
        if j20 == 8 
           if k20 == 1 
              MYvev(k20,j20) = V1_8  
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_8  
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_8  
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_8  
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_8  
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_8  
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_8  
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_8  
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_8  
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_8  
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_8  
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_8  
           endif 
        endif 
#
#
        if j20 == 9 
           if k20 == 1 
              MYvev(k20,j20) = V1_9  
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_9  
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_9  
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_9  
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_9  
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_9  
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_9  
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_9  
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_9  
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_9  
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_9  
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_9  
           endif 
        endif 
#
#
        if j20 == 10
           if k20 == 1 
              MYvev(k20,j20) = V1_10 
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_10 
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_10 
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_10 
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_10 
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_10 
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_10 
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_10 
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_10 
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_10 
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_10 
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_10 
           endif 
        endif 
#
#
        if j20 == 11
           if k20 == 1 
              MYvev(k20,j20) = V1_11 
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_11 
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_11 
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_11 
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_11 
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_11 
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_11 
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_11 
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_11 
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_11 
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_11 
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_11 
           endif 
        endif 
#
#
        if j20 == 12
           if k20 == 1 
              MYvev(k20,j20) = V1_12 
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_12 
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_12 
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_12 
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_12 
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_12 
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_12 
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_12 
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_12 
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_12 
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_12 
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_12 
           endif 
        endif 
#
#
        if j20 == 13
           if k20 == 1 
              MYvev(k20,j20) = V1_13 
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_13 
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_13 
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_13 
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_13 
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_13 
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_13 
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_13 
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_13 
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_13 
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_13 
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_13 
           endif 
        endif 
#
#
        if j20 == 14
           if k20 == 1 
              MYvev(k20,j20) = V1_14 
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_14 
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_14 
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_14 
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_14 
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_14 
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_14 
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_14 
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_14 
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_14 
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_14 
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_14 
           endif 
        endif 
#
#
        if j20 == 15
           if k20 == 1 
              MYvev(k20,j20) = V1_15 
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_15 
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_15 
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_15 
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_15 
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_15 
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_15 
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_15 
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_15 
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_15 
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_15 
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_15 
           endif 
        endif 
#
#
        if j20 == 16
           if k20 == 1 
              MYvev(k20,j20) = V1_16 
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_16 
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_16 
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_16 
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_16 
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_16 
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_16 
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_16 
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_16 
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_16 
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_16 
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_16 
           endif 
        endif 
#
#
        if j20 == 17
           if k20 == 1 
              MYvev(k20,j20) = V1_17 
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_17 
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_17 
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_17 
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_17 
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_17 
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_17 
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_17 
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_17 
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_17 
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_17 
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_17 
           endif 
        endif 
#
#
        if j20 == 18
           if k20 == 1 
              MYvev(k20,j20) = V1_18 
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_18 
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_18 
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_18 
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_18 
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_18 
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_18 
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_18 
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_18 
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_18 
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_18 
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_18 
           endif 
        endif 
#
#
        if j20 == 19
           if k20 == 1 
              MYvev(k20,j20) = V1_19 
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_19 
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_19 
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_19 
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_19 
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_19 
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_19 
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_19 
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_19 
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_19 
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_19 
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_19 
           endif 
        endif 
#
#
        if j20 == 20
           if k20 == 1 
              MYvev(k20,j20) = V1_20 
           endif 
           if k20 == 2 
              MYvev(k20,j20) = V2_20 
           endif 
           if k20 == 3 
              MYvev(k20,j20) = V3_20 
           endif 
           if k20 == 4 
              MYvev(k20,j20) = V4_20 
           endif 
           if k20 == 5 
              MYvev(k20,j20) = V5_20 
           endif 
           if k20 == 6 
              MYvev(k20,j20) = V6_20 
           endif 
           if k20 == 7 
              MYvev(k20,j20) = V7_20 
           endif 
           if k20 == 8 
              MYvev(k20,j20) = V8_20 
           endif 
           if k20 == 9 
              MYvev(k20,j20) = V9_20 
           endif 
           if k20 == 10
              MYvev(k20,j20) = V10_20 
           endif 
           if k20 == 11
              MYvev(k20,j20) = V11_20 
           endif 
           if k20 == 12
              MYvev(k20,j20) = V12_20 
           endif 
        endif 
#
     ENDDO j20 
     ENDDO k20 
#
#
     ENDPROC GSCHMIDT
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
      PROC TRANSFORM
#     -------------- 
#
      PARDO a, i
            DO j20
               if j20 <= 12
                  tai(a,i) = 0.0
                  DO k21
                     if k21 <= 20
                        GET         VC1A(a,i,k21)
                        t1ai(a,i) = VC1A(a,i,k21)
                        do k20
                           if k20 == k21
                              t20(j20,k20)      = MYvev(j20,k20)
                              execute return_sval t20 fact
                           endif
                        enddo k20
                        t1ai(a,i)*= fact
                        tai(a,i) += t1ai(a,i)
                     endif # k21 <= 20
                  ENDDO k21
                  t2aiS(a,i,j20)       = tai(a,i)
                  PUT VTEMP1A(a,i,j20) = t2aiS(a,i,j20)
               endif # j20 <= 12
            ENDDO j20
      ENDPARDO a, i
#
      execute sip_barrier
      execute server_barrier
#
#   rewrite temporary vectors into the usual ones
#
      PARDO a, i
            DO k20
               if k20 <= 12
                  GET        VTEMP1A(a,i,k20)
                  tai(a,i) = VTEMP1A(a,i,k20)
                  do k21
                     if k21 == k20
                        tais(a,i,k21)         = tai(a,i)
                        PUT VC1A(a,i,k21) = taiS(a,i,k21)
                     endif # k21 == k20
                  enddo k21
               endif # k20 <= 12
            ENDDO k20
      ENDPARDO a, i
#
      execute sip_barrier
#
      ENDPROC TRANSFORM
#     ----------------- 
#
# ----------------------------------------------------------------------------
#
      PROC ConstrA_a
#     --------------
#
      PARDO a, i
            DO k20
            IF k20 == spdim
               GET         VCH1A(a,i,k20)
               t1ai(a,i) = VCH1A(a,i,k20)
               DO k21
               if k21 <= spdim
                  DO j20
                     IF j20 == k21
                        GET                VC1A(a,i,k21)
                        tai(a,i)         = VC1A(a,i,k21)
                        etemp            = tai(a,i)*t1ai(a,i)
                        t20(j20,k20)     = etemp
                        Lax(j20,k20) += t20(j20,k20)
                     endif # j20 == k21
                  ENDDO j20
               endif
               ENDDO k21
            endif
            ENDDO k20
      ENDPARDO a, i
#
      PARDO a, i
            DO k21
            IF k21 == spdim
                  DO j20
                     IF j20 == k21
                        GET        VC1A(a,i,k21)
                        tai(a,i) = VC1A(a,i,k21)
                        DO k20
                          if k20 < spdim
                             GET                VCH1A(a,i,k20)
                             t1ai(a,i)        = VCH1A(a,i,k20)
                             etemp            = tai(a,i)*t1ai(a,i)
                             t20(j20,k20)     = etemp
                             Lax(j20,k20) += t20(j20,k20)
                          endif
                        ENDDO k20
                     endif # j20 == k21
                  ENDDO j20
            endif
            ENDDO k21
      ENDPARDO a, i
#
      ENDPROC ConstrA_a
#     -----------------

# ----------------------------------------------------------------------------
#
      PROC ConstrA_b
#     --------------
#
      ENDPROC ConstrA_b
#     -----------------
#
# ----------------------------------------------------------------------------
#
# -----------------------------------------------------------------------------
#
      PROC Aconstr_tr
#     ---------------
#
      do spdim
      if spdim < 13
#
      create ax
      allocate Lax(*,*) 
      execute sip_barrier
      CALL ConstrA_a
      CALL ConstrA_b
      execute sip_barrier
      DO kindex20 
      DO jindex20 
           #t20(jindex20,kindex20) = Lax(jindex20,kindex20) 
            PUT ax(jindex20,kindex20) += Lax(jindex20,kindex20)
      ENDDO jindex20
      ENDDO kindex20

      execute sip_barrier
#
       DO kindex20
       DO jindex20
          if kindex20 == spdim
          if jindex20 <= spdim
             GET                         ax(jindex20,kindex20)
             sMAT20(jindex20,kindex20) = ax(jindex20,kindex20)
          endif
          endif
          if kindex20 <= spdim
          if jindex20 == spdim
             GET                         ax(jindex20,kindex20)
             sMAT20(jindex20,kindex20) = ax(jindex20,kindex20)
          endif
          endif
       ENDDO jindex20
       ENDDO kindex20
       execute sip_barrier
#
       if spdim == 2
          DO kindex2
          DO kindex20
             if kindex20 == kindex2
          DO jindex2
          DO jindex20
             if jindex20 == jindex2
                t20(jindex20,kindex20)  = smat20(jindex20,kindex20)
                execute return_sval   t20 etemp3
                atemp2(jindex2,kindex2) = etemp3
                sMAT2(jindex2,kindex2)  = atemp2(jindex2,kindex2)
             endif
          ENDDO jindex20
          ENDDO jindex2
             endif
          ENDDO kindex20
          ENDDO kindex2
       endif
#
       if spdim == 3
          DO kindex3
          DO kindex20
             if kindex20 == kindex3
          DO jindex3
          DO jindex20
             if jindex20 == jindex3
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp3(jindex3,kindex3)    = etemp3
                sMAT3(jindex3,kindex3) = atemp3(jindex3,kindex3)
             endif
          ENDDO jindex20
          ENDDO jindex3
             endif
          ENDDO kindex20
          ENDDO kindex3
       endif
#
       if spdim == 4
          DO kindex4
          DO kindex20
             if kindex20 == kindex4
          DO jindex4
          DO jindex20
             if jindex20 == jindex4
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp4(jindex4,kindex4)    = etemp3
                sMAT4(jindex4,kindex4) = atemp4(jindex4,kindex4)
             endif
          ENDDO jindex20
          ENDDO jindex4
             endif
          ENDDO kindex20
          ENDDO kindex4
       endif
#
       if spdim == 5
          DO kindex5
          DO kindex20
             if kindex20 == kindex5
          DO jindex5
          DO jindex20
             if jindex20 == jindex5
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp5(jindex5,kindex5)    = etemp3
                sMAT5(jindex5,kindex5) = atemp5(jindex5,kindex5)
             endif
          ENDDO jindex20
          ENDDO jindex5
             endif
          ENDDO kindex20
          ENDDO kindex5
       endif
#
       if spdim == 6
          DO kindex6
          DO kindex20
             if kindex20 == kindex6
          DO jindex6
          DO jindex20
             if jindex20 == jindex6
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp6(jindex6,kindex6)    = etemp3
                sMAT6(jindex6,kindex6) = atemp6(jindex6,kindex6)
             endif
          ENDDO jindex20
          ENDDO jindex6
             endif
          ENDDO kindex20
          ENDDO kindex6
       endif
#
       if spdim == 7
          DO kindex7
          DO kindex20
             if kindex20 == kindex7
          DO jindex7
          DO jindex20
             if jindex20 == jindex7
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp7(jindex7,kindex7)    = etemp3
                sMAT7(jindex7,kindex7) = atemp7(jindex7,kindex7)
             endif
          ENDDO jindex20
          ENDDO jindex7
             endif
          ENDDO kindex20
          ENDDO kindex7
       endif
#
       if spdim == 8
          DO kindex8
          DO kindex20
             if kindex20 == kindex8
          DO jindex8
          DO jindex20
             if jindex20 == jindex8
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp8(jindex8,kindex8)    = etemp3
                sMAT8(jindex8,kindex8) = atemp8(jindex8,kindex8)
             endif
          ENDDO jindex20
          ENDDO jindex8
             endif
          ENDDO kindex20
          ENDDO kindex8
       endif
#
       if spdim == 9
          DO kindex9
          DO kindex20
             if kindex20 == kindex9
          DO jindex9
          DO jindex20
             if jindex20 == jindex9
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp9(jindex9,kindex9)    = etemp3
                sMAT9(jindex9,kindex9) = atemp9(jindex9,kindex9)
             endif
          ENDDO jindex20
          ENDDO jindex9
             endif
          ENDDO kindex20
          ENDDO kindex9
       endif
#
       if spdim == 10
          DO kindex10
          DO kindex20
             if kindex20 == kindex10
          DO jindex10
          DO jindex20
             if jindex20 == jindex10
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp10(jindex10,kindex10)    = etemp3
                sMAT10(jindex10,kindex10) = atemp10(jindex10,kindex10)
             endif
          ENDDO jindex20
          ENDDO jindex10
             endif
          ENDDO kindex20
          ENDDO kindex10
       endif
#
       if spdim == 11
          DO kindex11
          DO kindex20
             if kindex20 == kindex11
          DO jindex11
          DO jindex20
             if jindex20 == jindex11
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp11(jindex11,kindex11)    = etemp3
                sMAT11(jindex11,kindex11) = atemp11(jindex11,kindex11)
             endif
          ENDDO jindex20
          ENDDO jindex11
             endif
          ENDDO kindex20
          ENDDO kindex11
       endif
#
       if spdim == 12
          DO kindex12
          DO kindex20
             if kindex20 == kindex12
          DO jindex12
          DO jindex20
             if jindex20 == jindex12
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp12(jindex12,kindex12)    = etemp3
                sMAT12(jindex12,kindex12) = atemp12(jindex12,kindex12)
             endif
          ENDDO jindex20
          ENDDO jindex12
             endif
          ENDDO kindex20
          ENDDO kindex12
       endif
#
      execute sip_barrier
      deallocate Lax(*,*) 
      delete ax
#
      endif # spdim < 13
      enddo spdim
#
     ENDPROC Aconstr_tr
#    ------------------
#
# -----------------------------------------------------------------------------
#
# -----------------------------------------------------------------------------
#
      PROC Aconstr
#     ------------
#
      create ax
      allocate Lax(*,*) 
      execute sip_barrier
      CALL ConstrA_a
      CALL ConstrA_b 
      execute sip_barrier
      DO kindex20 
      DO jindex20 
           #t20(jindex20,kindex20) = Lax(jindex20,kindex20) 
            PUT ax(jindex20,kindex20) += Lax(jindex20,kindex20)
      ENDDO jindex20
      ENDDO kindex20

      execute sip_barrier
#
       DO kindex20
       DO jindex20
          if kindex20 == spdim
          if jindex20 <= spdim
             GET                         ax(jindex20,kindex20)
             sMAT20(jindex20,kindex20) = ax(jindex20,kindex20)
          endif
          endif
          if kindex20 <= spdim
          if jindex20 == spdim
             GET                         ax(jindex20,kindex20)
             sMAT20(jindex20,kindex20) = ax(jindex20,kindex20)
          endif
          endif
       ENDDO jindex20
       ENDDO kindex20
       execute sip_barrier
#
       if spdim == 2
          DO kindex20
          DO jindex20
          DO kindex2
          DO jindex2
             if kindex20 == kindex2
             if jindex20 == jindex2
                t20(jindex20,kindex20)  = smat20(jindex20,kindex20)
                execute return_sval   t20 etemp3
                atemp2(jindex2,kindex2) = etemp3
                sMAT2(jindex2,kindex2)  = atemp2(jindex2,kindex2)
             endif
             endif
          ENDDO jindex2
          ENDDO kindex2
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 3
          DO kindex20
          DO jindex20
          DO kindex3
          DO jindex3
             if kindex20 == kindex3
             if jindex20 == jindex3
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp3(jindex3,kindex3)    = etemp3
                sMAT3(jindex3,kindex3) = atemp3(jindex3,kindex3)
             endif
             endif
          ENDDO jindex3
          ENDDO kindex3
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 4
          DO kindex20
          DO jindex20
          DO kindex4
          DO jindex4
             if kindex20 == kindex4
             if jindex20 == jindex4
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp4(jindex4,kindex4)    = etemp3
                sMAT4(jindex4,kindex4) = atemp4(jindex4,kindex4)
             endif
             endif
          ENDDO jindex4
          ENDDO kindex4
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 5
          DO kindex20
          DO jindex20
          DO kindex5
          DO jindex5
             if kindex20 == kindex5
             if jindex20 == jindex5
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp5(jindex5,kindex5)    = etemp3
                sMAT5(jindex5,kindex5) = atemp5(jindex5,kindex5)
             endif
             endif
          ENDDO jindex5
          ENDDO kindex5
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 6
          DO kindex20
          DO jindex20
          DO kindex6
          DO jindex6
             if kindex20 == kindex6
             if jindex20 == jindex6
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp6(jindex6,kindex6)    = etemp3
                sMAT6(jindex6,kindex6) = atemp6(jindex6,kindex6)
             endif
             endif
          ENDDO jindex6
          ENDDO kindex6
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 7
          DO kindex20
          DO jindex20
          DO kindex7
          DO jindex7
             if kindex20 == kindex7
             if jindex20 == jindex7
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp7(jindex7,kindex7)    = etemp3
                sMAT7(jindex7,kindex7) = atemp7(jindex7,kindex7)
             endif
             endif
          ENDDO jindex7
          ENDDO kindex7
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 8
          DO kindex20
          DO jindex20
          DO kindex8
          DO jindex8
             if kindex20 == kindex8
             if jindex20 == jindex8
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp8(jindex8,kindex8)    = etemp3
                sMAT8(jindex8,kindex8) = atemp8(jindex8,kindex8)
             endif
             endif
          ENDDO jindex8
          ENDDO kindex8
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 9
          DO kindex20
          DO jindex20
          DO kindex9
          DO jindex9
             if kindex20 == kindex9
             if jindex20 == jindex9
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp9(jindex9,kindex9)    = etemp3
                sMAT9(jindex9,kindex9) = atemp9(jindex9,kindex9)
             endif
             endif
          ENDDO jindex9
          ENDDO kindex9
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 10
          DO kindex20
          DO jindex20
          DO kindex10
          DO jindex10
             if kindex20 == kindex10
             if jindex20 == jindex10
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp10(jindex10,kindex10)    = etemp3
                sMAT10(jindex10,kindex10) = atemp10(jindex10,kindex10)
             endif
             endif
          ENDDO jindex10
          ENDDO kindex10
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 11
          DO kindex20
          DO jindex20
          DO kindex11
          DO jindex11
             if kindex20 == kindex11
             if jindex20 == jindex11
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp11(jindex11,kindex11)    = etemp3
                sMAT11(jindex11,kindex11) = atemp11(jindex11,kindex11)
             endif
             endif
          ENDDO jindex11
          ENDDO kindex11
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 12
          DO kindex20
          DO jindex20
          DO kindex12
          DO jindex12
             if kindex20 == kindex12
             if jindex20 == jindex12
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp12(jindex12,kindex12)    = etemp3
                sMAT12(jindex12,kindex12) = atemp12(jindex12,kindex12)
             endif
             endif
          ENDDO jindex12
          ENDDO kindex12
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 13
          DO kindex20
          DO jindex20
          DO kindex13
          DO jindex13
             if kindex20 == kindex13
             if jindex20 == jindex13
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp13(jindex13,kindex13)    = etemp3
                sMAT13(jindex13,kindex13) = atemp13(jindex13,kindex13)
             endif
             endif
          ENDDO jindex13
          ENDDO kindex13
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 14
          DO kindex20
          DO jindex20
          DO kindex14
          DO jindex14
             if kindex20 == kindex14
             if jindex20 == jindex14
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp14(jindex14,kindex14)    = etemp3
                sMAT14(jindex14,kindex14) = atemp14(jindex14,kindex14)
             endif
             endif
          ENDDO jindex14
          ENDDO kindex14
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 15
          DO kindex20
          DO jindex20
          DO kindex15
          DO jindex15
             if kindex20 == kindex15
             if jindex20 == jindex15
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp15(jindex15,kindex15)    = etemp3
                sMAT15(jindex15,kindex15) = atemp15(jindex15,kindex15)
             endif
             endif
          ENDDO jindex15
          ENDDO kindex15
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 16
          DO kindex20
          DO jindex20
          DO kindex16
          DO jindex16
             if kindex20 == kindex16
             if jindex20 == jindex16
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp16(jindex16,kindex16)    = etemp3
                sMAT16(jindex16,kindex16) = atemp16(jindex16,kindex16)
             endif
             endif
          ENDDO jindex16
          ENDDO kindex16
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 17
          DO kindex20
          DO jindex20
          DO kindex17
          DO jindex17
             if kindex20 == kindex17
             if jindex20 == jindex17
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp17(jindex17,kindex17)    = etemp3
                sMAT17(jindex17,kindex17) = atemp17(jindex17,kindex17)
             endif
             endif
          ENDDO jindex17
          ENDDO kindex17
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 18
          DO kindex20
          DO jindex20
          DO kindex18
          DO jindex18
             if kindex20 == kindex18
             if jindex20 == jindex18
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp18(jindex18,kindex18)    = etemp3
                sMAT18(jindex18,kindex18) = atemp18(jindex18,kindex18)
             endif
             endif
          ENDDO jindex18
          ENDDO kindex18
          ENDDO jindex20
          ENDDO kindex20
       endif
#
       if spdim == 19
          DO kindex20
          DO jindex20
          DO kindex19
          DO jindex19
             if kindex20 == kindex19
             if jindex20 == jindex19
                t20(jindex20,kindex20)     = smat20(jindex20,kindex20)
                execute return_sval    t20 etemp3
                atemp19(jindex19,kindex19)    = etemp3
                sMAT19(jindex19,kindex19) = atemp19(jindex19,kindex19)
             endif
             endif
          ENDDO jindex19
          ENDDO kindex19
          ENDDO jindex20
          ENDDO kindex20
       endif
#
      execute sip_barrier
      deallocate Lax(*,*) 
      delete ax
#
     ENDPROC Aconstr
#    ---------------
#
# -----------------------------------------------------------------------------
#
      PROC TRANSFORM_HC
#     ----------------- 
#
      PARDO a, i
            DO j20
               if j20 <= 12
                  tai(a,i) = 0.0
                  DO k20
                     GET                  VCH1A(a,i,k20)
                     t1ai(a,i)          = VCH1A(a,i,k20)

                     t20(j20,k20)       = MYvev(j20,k20)
                     execute return_sval t20 fact

                     t1ai(a,i)         *= fact
                     tai(a,i)          += t1ai(a,i)
                  ENDDO k20
                  t2aiS(a,i,j20)       = tai(a,i)
                  PUT VTEMP1A(a,i,j20) = t2aiS(a,i,j20)
               endif # j20 <= 12
            ENDDO j20
      ENDPARDO a, i
#
      execute sip_barrier
#
#   rewrite temporary vectors into the usual ones
#
      PARDO a, i
            DO k20
               if k20 <= 12
                  GET                  VTEMP1A(a,i,k20)
                  tai(a,i)           = VTEMP1A(a,i,k20)
                  t2ais(a,i,k20)     = tai(a,i)
                  PUT VCH1A(a,i,k20) = t2aiS(a,i,k20)
               endif # k20 <= 12
            ENDDO k20
      ENDPARDO a, i
#
      execute sip_barrier 
#
      ENDPROC TRANSFORM_HC
#     --------------------
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
     PROC NORMVEC
#
#
#------1 vectors -------------------------------
#
       sqr=0.0
#
     etemp=V1_1*V1_1
     sqr+=etemp
     etemp=V1_2*V1_2
     sqr+=etemp
     etemp=V1_3*V1_3
     sqr+=etemp
     etemp=V1_4*V1_4
     sqr+=etemp
     etemp=V1_5*V1_5
     sqr+=etemp
     etemp=V1_6*V1_6
     sqr+=etemp
     etemp=V1_7*V1_7
     sqr+=etemp
     etemp=V1_8*V1_8
     sqr+=etemp
     etemp=V1_9*V1_9
     sqr+=etemp
     etemp=V1_10*V1_10
     sqr+=etemp
     etemp=V1_11*V1_11
     sqr+=etemp
     etemp=V1_12*V1_12
     sqr+=etemp
     etemp=V1_13*V1_13
     sqr+=etemp
     etemp=V1_14*V1_14
     sqr+=etemp
     etemp=V1_15*V1_15
     sqr+=etemp
     etemp=V1_16*V1_16
     sqr+=etemp
     etemp=V1_17*V1_17
     sqr+=etemp
     etemp=V1_18*V1_18
     sqr+=etemp
     etemp=V1_19*V1_19
     sqr+=etemp
     etemp=V1_20*V1_20
     sqr+=etemp
#
     exponent=0.5
     execute square_root sqr exponent
     sqr2=1.0/sqr
#
     V1_1*=sqr2
     V1_2*=sqr2
     V1_3*=sqr2
     V1_4*=sqr2
     V1_5*=sqr2
     V1_6*=sqr2
     V1_7*=sqr2
     V1_8*=sqr2
     V1_9*=sqr2
     V1_10*=sqr2
     V1_11*=sqr2
     V1_12*=sqr2
     V1_13*=sqr2
     V1_14*=sqr2
     V1_15*=sqr2
     V1_16*=sqr2
     V1_17*=sqr2
     V1_18*=sqr2
     V1_19*=sqr2
     V1_20*=sqr2
#
#------2 vectors -------------------------------
#
       sqr=0.0
#
     etemp=V2_1*V2_1
     sqr+=etemp
     etemp=V2_2*V2_2
     sqr+=etemp
     etemp=V2_3*V2_3
     sqr+=etemp
     etemp=V2_4*V2_4
     sqr+=etemp
     etemp=V2_5*V2_5
     sqr+=etemp
     etemp=V2_6*V2_6
     sqr+=etemp
     etemp=V2_7*V2_7
     sqr+=etemp
     etemp=V2_8*V2_8
     sqr+=etemp
     etemp=V2_9*V2_9
     sqr+=etemp
     etemp=V2_10*V2_10
     sqr+=etemp
     etemp=V2_11*V2_11
     sqr+=etemp
     etemp=V2_12*V2_12
     sqr+=etemp
     etemp=V2_13*V2_13
     sqr+=etemp
     etemp=V2_14*V2_14
     sqr+=etemp
     etemp=V2_15*V2_15
     sqr+=etemp
     etemp=V2_16*V2_16
     sqr+=etemp
     etemp=V2_17*V2_17
     sqr+=etemp
     etemp=V2_18*V2_18
     sqr+=etemp
     etemp=V2_19*V2_19
     sqr+=etemp
     etemp=V2_20*V2_20
     sqr+=etemp
#
     exponent=0.5
      execute square_root sqr exponent
      sqr2=1.0/sqr
#
     V2_1*=sqr2
     V2_2*=sqr2
     V2_3*=sqr2
     V2_4*=sqr2
     V2_5*=sqr2
     V2_6*=sqr2
     V2_7*=sqr2
     V2_8*=sqr2
     V2_9*=sqr2
     V2_10*=sqr2
     V2_11*=sqr2
     V2_12*=sqr2
     V2_13*=sqr2
     V2_14*=sqr2
     V2_15*=sqr2
     V2_16*=sqr2
     V2_17*=sqr2
     V2_18*=sqr2
     V2_19*=sqr2
     V2_20*=sqr2
#
#------3 vectors -------------------------------
#
       sqr=0.0
#
     etemp=V3_1*V3_1
     sqr+=etemp
     etemp=V3_2*V3_2
     sqr+=etemp
     etemp=V3_3*V3_3
     sqr+=etemp
     etemp=V3_4*V3_4
     sqr+=etemp
     etemp=V3_5*V3_5
     sqr+=etemp
     etemp=V3_6*V3_6
     sqr+=etemp
     etemp=V3_7*V3_7
     sqr+=etemp
     etemp=V3_8*V3_8
     sqr+=etemp
     etemp=V3_9*V3_9
     sqr+=etemp
     etemp=V3_10*V3_10
     sqr+=etemp
     etemp=V3_11*V3_11
     sqr+=etemp
     etemp=V3_12*V3_12
     sqr+=etemp
     etemp=V3_13*V3_13
     sqr+=etemp
     etemp=V3_14*V3_14
     sqr+=etemp
     etemp=V3_15*V3_15
     sqr+=etemp
     etemp=V3_16*V3_16
     sqr+=etemp
     etemp=V3_17*V3_17
     sqr+=etemp
     etemp=V3_18*V3_18
     sqr+=etemp
     etemp=V3_19*V3_19
     sqr+=etemp
     etemp=V3_20*V3_20
     sqr+=etemp
#
     exponent=0.5
      execute square_root sqr exponent
      sqr2=1.0/sqr
#
     V3_1*=sqr2
     V3_2*=sqr2
     V3_3*=sqr2
     V3_4*=sqr2
     V3_5*=sqr2
     V3_6*=sqr2
     V3_7*=sqr2
     V3_8*=sqr2
     V3_9*=sqr2
     V3_10*=sqr2
     V3_11*=sqr2
     V3_12*=sqr2
     V3_13*=sqr2
     V3_14*=sqr2
     V3_15*=sqr2
     V3_16*=sqr2
     V3_17*=sqr2
     V3_18*=sqr2
     V3_19*=sqr2
     V3_20*=sqr2
#
#------4 vectors -------------------------------
#
       sqr=0.0
#
     etemp=V4_1*V4_1
     sqr+=etemp
     etemp=V4_2*V4_2
     sqr+=etemp
     etemp=V4_3*V4_3
     sqr+=etemp
     etemp=V4_4*V4_4
     sqr+=etemp
     etemp=V4_5*V4_5
     sqr+=etemp
     etemp=V4_6*V4_6
     sqr+=etemp
     etemp=V4_7*V4_7
     sqr+=etemp
     etemp=V4_8*V4_8
     sqr+=etemp
     etemp=V4_9*V4_9
     sqr+=etemp
     etemp=V4_10*V4_10
     sqr+=etemp
     etemp=V4_11*V4_11
     sqr+=etemp
     etemp=V4_12*V4_12
     sqr+=etemp
     etemp=V4_13*V4_13
     sqr+=etemp
     etemp=V4_14*V4_14
     sqr+=etemp
     etemp=V4_15*V4_15
     sqr+=etemp
     etemp=V4_16*V4_16
     sqr+=etemp
     etemp=V4_17*V4_17
     sqr+=etemp
     etemp=V4_18*V4_18
     sqr+=etemp
     etemp=V4_19*V4_19
     sqr+=etemp
     etemp=V4_20*V4_20
     sqr+=etemp
#
     exponent=0.5
      execute square_root sqr exponent
      sqr2=1.0/sqr
#
     V4_1*=sqr2
     V4_2*=sqr2
     V4_3*=sqr2
     V4_4*=sqr2
     V4_5*=sqr2
     V4_6*=sqr2
     V4_7*=sqr2
     V4_8*=sqr2
     V4_9*=sqr2
     V4_10*=sqr2
     V4_11*=sqr2
     V4_12*=sqr2
     V4_13*=sqr2
     V4_14*=sqr2
     V4_15*=sqr2
     V4_16*=sqr2
     V4_17*=sqr2
     V4_18*=sqr2
     V4_19*=sqr2
     V4_20*=sqr2
#
#------5 vectors -------------------------------
#
       sqr=0.0
#
     etemp=V5_1*V5_1
     sqr+=etemp
     etemp=V5_2*V5_2
     sqr+=etemp
     etemp=V5_3*V5_3
     sqr+=etemp
     etemp=V5_4*V5_4
     sqr+=etemp
     etemp=V5_5*V5_5
     sqr+=etemp
     etemp=V5_6*V5_6
     sqr+=etemp
     etemp=V5_7*V5_7
     sqr+=etemp
     etemp=V5_8*V5_8
     sqr+=etemp
     etemp=V5_9*V5_9
     sqr+=etemp
     etemp=V5_10*V5_10
     sqr+=etemp
     etemp=V5_11*V5_11
     sqr+=etemp
     etemp=V5_12*V5_12
     sqr+=etemp
     etemp=V5_13*V5_13
     sqr+=etemp
     etemp=V5_14*V5_14
     sqr+=etemp
     etemp=V5_15*V5_15
     sqr+=etemp
     etemp=V5_16*V5_16
     sqr+=etemp
     etemp=V5_17*V5_17
     sqr+=etemp
     etemp=V5_18*V5_18
     sqr+=etemp
     etemp=V5_19*V5_19
     sqr+=etemp
     etemp=V5_20*V5_20
     sqr+=etemp
#
     exponent=0.5
      execute square_root sqr exponent
      sqr2=1.0/sqr
#
     V5_1*=sqr2
     V5_2*=sqr2
     V5_3*=sqr2
     V5_4*=sqr2
     V5_5*=sqr2
     V5_6*=sqr2
     V5_7*=sqr2
     V5_8*=sqr2
     V5_9*=sqr2
     V5_10*=sqr2
     V5_11*=sqr2
     V5_12*=sqr2
     V5_13*=sqr2
     V5_14*=sqr2
     V5_15*=sqr2
     V5_16*=sqr2
     V5_17*=sqr2
     V5_18*=sqr2
     V5_19*=sqr2
     V5_20*=sqr2
#
#------6 vectors -------------------------------
#
       sqr=0.0
#
     etemp=V6_1*V6_1
     sqr+=etemp
     etemp=V6_2*V6_2
     sqr+=etemp
     etemp=V6_3*V6_3
     sqr+=etemp
     etemp=V6_4*V6_4
     sqr+=etemp
     etemp=V6_5*V6_5
     sqr+=etemp
     etemp=V6_6*V6_6
     sqr+=etemp
     etemp=V6_7*V6_7
     sqr+=etemp
     etemp=V6_8*V6_8
     sqr+=etemp
     etemp=V6_9*V6_9
     sqr+=etemp
     etemp=V6_10*V6_10
     sqr+=etemp
     etemp=V6_11*V6_11
     sqr+=etemp
     etemp=V6_12*V6_12
     sqr+=etemp
     etemp=V6_13*V6_13
     sqr+=etemp
     etemp=V6_14*V6_14
     sqr+=etemp
     etemp=V6_15*V6_15
     sqr+=etemp
     etemp=V6_16*V6_16
     sqr+=etemp
     etemp=V6_17*V6_17
     sqr+=etemp
     etemp=V6_18*V6_18
     sqr+=etemp
     etemp=V6_19*V6_19
     sqr+=etemp
     etemp=V6_20*V6_20
     sqr+=etemp
#
     exponent=0.5
      execute square_root sqr exponent
      sqr2=1.0/sqr
#
     V6_1*=sqr2
     V6_2*=sqr2
     V6_3*=sqr2
     V6_4*=sqr2
     V6_5*=sqr2
     V6_6*=sqr2
     V6_7*=sqr2
     V6_8*=sqr2
     V6_9*=sqr2
     V6_10*=sqr2
     V6_11*=sqr2
     V6_12*=sqr2
     V6_13*=sqr2
     V6_14*=sqr2
     V6_15*=sqr2
     V6_16*=sqr2
     V6_17*=sqr2
     V6_18*=sqr2
     V6_19*=sqr2
     V6_20*=sqr2
#
#------7 vectors -------------------------------
#
       sqr=0.0
#
     etemp=V7_1*V7_1
     sqr+=etemp
     etemp=V7_2*V7_2
     sqr+=etemp
     etemp=V7_3*V7_3
     sqr+=etemp
     etemp=V7_4*V7_4
     sqr+=etemp
     etemp=V7_5*V7_5
     sqr+=etemp
     etemp=V7_6*V7_6
     sqr+=etemp
     etemp=V7_7*V7_7
     sqr+=etemp
     etemp=V7_8*V7_8
     sqr+=etemp
     etemp=V7_9*V7_9
     sqr+=etemp
     etemp=V7_10*V7_10
     sqr+=etemp
     etemp=V7_11*V7_11
     sqr+=etemp
     etemp=V7_12*V7_12
     sqr+=etemp
     etemp=V7_13*V7_13
     sqr+=etemp
     etemp=V7_14*V7_14
     sqr+=etemp
     etemp=V7_15*V7_15
     sqr+=etemp
     etemp=V7_16*V7_16
     sqr+=etemp
     etemp=V7_17*V7_17
     sqr+=etemp
     etemp=V7_18*V7_18
     sqr+=etemp
     etemp=V7_19*V7_19
     sqr+=etemp
     etemp=V7_20*V7_20
     sqr+=etemp
#
     exponent=0.5
      execute square_root sqr exponent
      sqr2=1.0/sqr
#
     V7_1*=sqr2
     V7_2*=sqr2
     V7_3*=sqr2
     V7_4*=sqr2
     V7_5*=sqr2
     V7_6*=sqr2
     V7_7*=sqr2
     V7_8*=sqr2
     V7_9*=sqr2
     V7_10*=sqr2
     V7_11*=sqr2
     V7_12*=sqr2
     V7_13*=sqr2
     V7_14*=sqr2
     V7_15*=sqr2
     V7_16*=sqr2
     V7_17*=sqr2
     V7_18*=sqr2
     V7_19*=sqr2
     V7_20*=sqr2
#
#------8 vectors -------------------------------
#
       sqr=0.0
#
     etemp=V8_1*V8_1
     sqr+=etemp
     etemp=V8_2*V8_2
     sqr+=etemp
     etemp=V8_3*V8_3
     sqr+=etemp
     etemp=V8_4*V8_4
     sqr+=etemp
     etemp=V8_5*V8_5
     sqr+=etemp
     etemp=V8_6*V8_6
     sqr+=etemp
     etemp=V8_7*V8_7
     sqr+=etemp
     etemp=V8_8*V8_8
     sqr+=etemp
     etemp=V8_9*V8_9
     sqr+=etemp
     etemp=V8_10*V8_10
     sqr+=etemp
     etemp=V8_11*V8_11
     sqr+=etemp
     etemp=V8_12*V8_12
     sqr+=etemp
     etemp=V8_13*V8_13
     sqr+=etemp
     etemp=V8_14*V8_14
     sqr+=etemp
     etemp=V8_15*V8_15
     sqr+=etemp
     etemp=V8_16*V8_16
     sqr+=etemp
     etemp=V8_17*V8_17
     sqr+=etemp
     etemp=V8_18*V8_18
     sqr+=etemp
     etemp=V8_19*V8_19
     sqr+=etemp
     etemp=V8_20*V8_20
     sqr+=etemp
#
     exponent=0.5
      execute square_root sqr exponent
      sqr2=1.0/sqr
#
     V8_1*=sqr2
     V8_2*=sqr2
     V8_3*=sqr2
     V8_4*=sqr2
     V8_5*=sqr2
     V8_6*=sqr2
     V8_7*=sqr2
     V8_8*=sqr2
     V8_9*=sqr2
     V8_10*=sqr2
     V8_11*=sqr2
     V8_12*=sqr2
     V8_13*=sqr2
     V8_14*=sqr2
     V8_15*=sqr2
     V8_16*=sqr2
     V8_17*=sqr2
     V8_18*=sqr2
     V8_19*=sqr2
     V8_20*=sqr2
#
#------9 vectors -------------------------------
#
       sqr=0.0
#
     etemp=V9_1*V9_1
     sqr+=etemp
     etemp=V9_2*V9_2
     sqr+=etemp
     etemp=V9_3*V9_3
     sqr+=etemp
     etemp=V9_4*V9_4
     sqr+=etemp
     etemp=V9_5*V9_5
     sqr+=etemp
     etemp=V9_6*V9_6
     sqr+=etemp
     etemp=V9_7*V9_7
     sqr+=etemp
     etemp=V9_8*V9_8
     sqr+=etemp
     etemp=V9_9*V9_9
     sqr+=etemp
     etemp=V9_10*V9_10
     sqr+=etemp
     etemp=V9_11*V9_11
     sqr+=etemp
     etemp=V9_12*V9_12
     sqr+=etemp
     etemp=V9_13*V9_13
     sqr+=etemp
     etemp=V9_14*V9_14
     sqr+=etemp
     etemp=V9_15*V9_15
     sqr+=etemp
     etemp=V9_16*V9_16
     sqr+=etemp
     etemp=V9_17*V9_17
     sqr+=etemp
     etemp=V9_18*V9_18
     sqr+=etemp
     etemp=V9_19*V9_19
     sqr+=etemp
     etemp=V9_20*V9_20
     sqr+=etemp
#
     exponent=0.5
      execute square_root sqr exponent
      sqr2=1.0/sqr
#
     V9_1*=sqr2
     V9_2*=sqr2
     V9_3*=sqr2
     V9_4*=sqr2
     V9_5*=sqr2
     V9_6*=sqr2
     V9_7*=sqr2
     V9_8*=sqr2
     V9_9*=sqr2
     V9_10*=sqr2
     V9_11*=sqr2
     V9_12*=sqr2
     V9_13*=sqr2
     V9_14*=sqr2
     V9_15*=sqr2
     V9_16*=sqr2
     V9_17*=sqr2
     V9_18*=sqr2
     V9_19*=sqr2
     V9_20*=sqr2
#
#------10 vectors -------------------------------
#
       sqr=0.0
#
     etemp=V10_1*V10_1
     sqr+=etemp
     etemp=V10_2*V10_2
     sqr+=etemp
     etemp=V10_3*V10_3
     sqr+=etemp
     etemp=V10_4*V10_4
     sqr+=etemp
     etemp=V10_5*V10_5
     sqr+=etemp
     etemp=V10_6*V10_6
     sqr+=etemp
     etemp=V10_7*V10_7
     sqr+=etemp
     etemp=V10_8*V10_8
     sqr+=etemp
     etemp=V10_9*V10_9
     sqr+=etemp
     etemp=V10_10*V10_10
     sqr+=etemp
     etemp=V10_11*V10_11
     sqr+=etemp
     etemp=V10_12*V10_12
     sqr+=etemp
     etemp=V10_13*V10_13
     sqr+=etemp
     etemp=V10_14*V10_14
     sqr+=etemp
     etemp=V10_15*V10_15
     sqr+=etemp
     etemp=V10_16*V10_16
     sqr+=etemp
     etemp=V10_17*V10_17
     sqr+=etemp
     etemp=V10_18*V10_18
     sqr+=etemp
     etemp=V10_19*V10_19
     sqr+=etemp
     etemp=V10_20*V10_20
     sqr+=etemp
#
     exponent=0.5
      execute square_root sqr exponent
      sqr2=1.0/sqr
#
     V10_1*=sqr2
     V10_2*=sqr2
     V10_3*=sqr2
     V10_4*=sqr2
     V10_5*=sqr2
     V10_6*=sqr2
     V10_7*=sqr2
     V10_8*=sqr2
     V10_9*=sqr2
     V10_10*=sqr2
     V10_11*=sqr2
     V10_12*=sqr2
     V10_13*=sqr2
     V10_14*=sqr2
     V10_15*=sqr2
     V10_16*=sqr2
     V10_17*=sqr2
     V10_18*=sqr2
     V10_19*=sqr2
     V10_20*=sqr2
#
#------11 vectors -------------------------------
#
       sqr=0.0
#
     etemp=V11_1*V11_1
     sqr+=etemp
     etemp=V11_2*V11_2
     sqr+=etemp
     etemp=V11_3*V11_3
     sqr+=etemp
     etemp=V11_4*V11_4
     sqr+=etemp
     etemp=V11_5*V11_5
     sqr+=etemp
     etemp=V11_6*V11_6
     sqr+=etemp
     etemp=V11_7*V11_7
     sqr+=etemp
     etemp=V11_8*V11_8
     sqr+=etemp
     etemp=V11_9*V11_9
     sqr+=etemp
     etemp=V11_10*V11_10
     sqr+=etemp
     etemp=V11_11*V11_11
     sqr+=etemp
     etemp=V11_12*V11_12
     sqr+=etemp
     etemp=V11_13*V11_13
     sqr+=etemp
     etemp=V11_14*V11_14
     sqr+=etemp
     etemp=V11_15*V11_15
     sqr+=etemp
     etemp=V11_16*V11_16
     sqr+=etemp
     etemp=V11_17*V11_17
     sqr+=etemp
     etemp=V11_18*V11_18
     sqr+=etemp
     etemp=V11_19*V11_19
     sqr+=etemp
     etemp=V11_20*V11_20
     sqr+=etemp
#
     exponent=0.5
      execute square_root sqr exponent
      sqr2=1.0/sqr
#
     V11_1*=sqr2
     V11_2*=sqr2
     V11_3*=sqr2
     V11_4*=sqr2
     V11_5*=sqr2
     V11_6*=sqr2
     V11_7*=sqr2
     V11_8*=sqr2
     V11_9*=sqr2
     V11_10*=sqr2
     V11_11*=sqr2
     V11_12*=sqr2
     V11_13*=sqr2
     V11_14*=sqr2
     V11_15*=sqr2
     V11_16*=sqr2
     V11_17*=sqr2
     V11_18*=sqr2
     V11_19*=sqr2
     V11_20*=sqr2
#
#------12 vectors -------------------------------
#
       sqr=0.0
#
     etemp=V12_1*V12_1
     sqr+=etemp
     etemp=V12_2*V12_2
     sqr+=etemp
     etemp=V12_3*V12_3
     sqr+=etemp
     etemp=V12_4*V12_4
     sqr+=etemp
     etemp=V12_5*V12_5
     sqr+=etemp
     etemp=V12_6*V12_6
     sqr+=etemp
     etemp=V12_7*V12_7
     sqr+=etemp
     etemp=V12_8*V12_8
     sqr+=etemp
     etemp=V12_9*V12_9
     sqr+=etemp
     etemp=V12_10*V12_10
     sqr+=etemp
     etemp=V12_11*V12_11
     sqr+=etemp
     etemp=V12_12*V12_12
     sqr+=etemp
     etemp=V12_13*V12_13
     sqr+=etemp
     etemp=V12_14*V12_14
     sqr+=etemp
     etemp=V12_15*V12_15
     sqr+=etemp
     etemp=V12_16*V12_16
     sqr+=etemp
     etemp=V12_17*V12_17
     sqr+=etemp
     etemp=V12_18*V12_18
     sqr+=etemp
     etemp=V12_19*V12_19
     sqr+=etemp
     etemp=V12_20*V12_20
     sqr+=etemp
#
     exponent=0.5
      execute square_root sqr exponent
      sqr2=1.0/sqr
#
     V12_1*=sqr2
     V12_2*=sqr2
     V12_3*=sqr2
     V12_4*=sqr2
     V12_5*=sqr2
     V12_6*=sqr2
     V12_7*=sqr2
     V12_8*=sqr2
     V12_9*=sqr2
     V12_10*=sqr2
     V12_11*=sqr2
     V12_12*=sqr2
     V12_13*=sqr2
     V12_14*=sqr2
     V12_15*=sqr2
     V12_16*=sqr2
     V12_17*=sqr2
     V12_18*=sqr2
     V12_19*=sqr2
     V12_20*=sqr2
#
     ENDPROC NORMVEC
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
     PROC TRUNCATE
#    ------------- 
#
        call FNDVECS
#
        call NORMVEC
#
        call GSCHMIDT
#
        execute sip_barrier
#
        call TRANSFORM
#
        call TRANSFORM_HC
#
        execute sip_barrier
#
        CALL Aconstr_tr
#
        call copy_toVCactual_tr
#
        execute sip_barrier
#
     ENDPROC TRUNCATE
#    ---------------- 
#
      PROC cre_arrays
#     --------------- 
#
       create VC1A 
       create VCH1A 
       create VTEMP1A 
#
       create VEV
       create VCE1A
       create VCONV1A
       create VCONV1B
       create VCACT1A
       create VCHACT1A
       create Fae_a
       create Fae_b
       create Fmi_a
       create Fmi_b
       create Fia_a
       create Fia_b
       create DDii
       create DDaa
       create DDjj
       create DDbb
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--start of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
      create VSTART1A1
      create VSTART1A2
      create VSTART1A3
      create VSTART1A4
      create VSTART1A5
      create VSTART1A6
      create VSTART1A7
      create VSTART1A8
      create VSTART1A9
      create VSTART1A10
      create VSTART1A11
      create VSTART1A12
      create VCEND1A1
      create VCEND1A2
      create VCEND1A3
      create VCEND1A4
      create VCEND1A5
      create VCEND1A6
      create VCEND1A7
      create VCEND1A8
      create VCEND1A9
      create VCEND1A10
      create VCEND1A11
      create VCEND1A12
      create VCEND1B1
      create VCEND1B2
      create VCEND1B3
      create VCEND1B4
      create VCEND1B5
      create VCEND1B6
      create VCEND1B7
      create VCEND1B8
      create VCEND1B9
      create VCEND1B10
      create VCEND1B11
      create VCEND1B12
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
       EXECUTE SIP_BARRIER
       EXECUTE SERVER_BARRIER
#
      ENDPROC cre_arrays
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--start of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
      PROC start_copy
#     --------------- 
#
      PARDO a, i
      if iroot == 2.0
      get VSTART1A2(a,i)
      tai(a,i)=VSTART1A2(a,i)
      endif
      if iroot == 3.0
      get VSTART1A3(a,i)
      tai(a,i)=VSTART1A3(a,i)
      endif
      if iroot == 4.0
      get VSTART1A4(a,i)
      tai(a,i)=VSTART1A4(a,i)
      endif
      if iroot == 5.0
      get VSTART1A5(a,i)
      tai(a,i)=VSTART1A5(a,i)
      endif
      if iroot == 6.0
      get VSTART1A6(a,i)
      tai(a,i)=VSTART1A6(a,i)
      endif
      if iroot == 7.0
      get VSTART1A7(a,i)
      tai(a,i)=VSTART1A7(a,i)
      endif
      if iroot == 8.0
      get VSTART1A8(a,i)
      tai(a,i)=VSTART1A8(a,i)
      endif
      if iroot == 9.0
      get VSTART1A9(a,i)
      tai(a,i)=VSTART1A9(a,i)
      endif
      if iroot == 10.0
      get VSTART1A10(a,i)
      tai(a,i)=VSTART1A10(a,i)
      endif
      if iroot == 11.0
      get VSTART1A11(a,i)
      tai(a,i)=VSTART1A11(a,i)
      endif
      if iroot == 12.0
      get VSTART1A12(a,i)
      tai(a,i)=VSTART1A12(a,i)
      endif
#
      PUT VCHACT1A(a,i)=tai(a,i)
      PUT VCE1A(a,i)=tai(a,i)
#
      ENDPARDO a, i
#
      ENDPROC start_copy
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--start of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--start of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
      PROC start_copy_tr
#
      PARDO a, i
      if iroot == 2.0
      get VSTART1A2(a,i)
      tai(a,i)=VSTART1A2(a,i)
      endif
      if iroot == 3.0
      get VSTART1A3(a,i)
      tai(a,i)=VSTART1A3(a,i)
      endif
      if iroot == 4.0
      get VSTART1A4(a,i)
      tai(a,i)=VSTART1A4(a,i)
      endif
      if iroot == 5.0
      get VSTART1A5(a,i)
      tai(a,i)=VSTART1A5(a,i)
      endif
      if iroot == 6.0
      get VSTART1A6(a,i)
      tai(a,i)=VSTART1A6(a,i)
      endif
      if iroot == 7.0
      get VSTART1A7(a,i)
      tai(a,i)=VSTART1A7(a,i)
      endif
      if iroot == 8.0
      get VSTART1A8(a,i)
      tai(a,i)=VSTART1A8(a,i)
      endif
      if iroot == 9.0
      get VSTART1A9(a,i)
      tai(a,i)=VSTART1A9(a,i)
      endif
      if iroot == 10.0
      get VSTART1A10(a,i)
      tai(a,i)=VSTART1A10(a,i)
      endif
      if iroot == 11.0
      get VSTART1A11(a,i)
      tai(a,i)=VSTART1A11(a,i)
      endif
      if iroot == 12.0
      get VSTART1A12(a,i)
      tai(a,i)=VSTART1A12(a,i)
      endif
#
      PUT VCACT1A(a,i)=tai(a,i)
#
      ENDPARDO a, i
#
      ENDPROC start_copy_tr
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
      PROC root_put
#
          if iroot == 2.0
          root1=omega
          endif
#
          if iroot == 3.0
          root2=omega
          endif
#
          if iroot == 4.0
          root3=omega
          endif
#
          if iroot == 5.0
          root4=omega
          endif
#
          if iroot == 6.0
          root5=omega
          endif
#
          if iroot == 7.0
          root6=omega
          endif
#
          if iroot == 8.0
          root7=omega
          endif
#
          if iroot == 9.0
          root8=omega
          endif
#
          if iroot == 10.0
          root9=omega
          endif
#
          if iroot == 11.0
          root10=omega
          endif
#
          if iroot == 12.0
          root11=omega
          endif
#
          if iroot == 13.0
          root12=omega
          endif
#
      ENDPROC root_put
#
     PROC PRNTING
#
       execute print_scalar residuum
       execute print_scalar omega
       execute print_scalar ispdim
       execute print_scalar iroot
       execute print_scalar imaxc
       execute print_scalar nsp
#
     ENDPROC PRNTING
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--start of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
       PROC SORT_VEC
#
       do kindex12
#
       xmax=1000.0
       ncount=0.0
#
       do jindex12
#
       ncount+=1.0
#
        if jindex12 == 1
        aeigtemp = root1
        endif
        if jindex12 == 2
        aeigtemp = root2
        endif
        if jindex12 == 3
        aeigtemp = root3
        endif
        if jindex12 == 4
        aeigtemp = root4
        endif
        if jindex12 == 5
        aeigtemp = root5
        endif
        if jindex12 == 6
        aeigtemp = root6
        endif
        if jindex12 == 7
        aeigtemp = root7
        endif
        if jindex12 == 8
        aeigtemp = root8
        endif
        if jindex12 == 9
        aeigtemp = root9
        endif
        if jindex12 == 10
        aeigtemp = root10
        endif
        if jindex12 == 11
        aeigtemp = root11
        endif
        if jindex12 == 12
        aeigtemp = root12
        endif
#
       if aeigtemp < xmax
       xmax=aeigtemp
       imax=ncount
       endif
#
       enddo jindex12
#
        if imax == 1.0
        root1 = 1001.0
        endif
        if imax == 2.0
        root2 = 1001.0
        endif
        if imax == 3.0
        root3 = 1001.0
        endif
        if imax == 4.0
        root4 = 1001.0
        endif
        if imax == 5.0
        root5 = 1001.0
        endif
        if imax == 6.0
        root6 = 1001.0
        endif
        if imax == 7.0
        root7 = 1001.0
        endif
        if imax == 8.0
        root8 = 1001.0
        endif
        if imax == 9.0
        root9 = 1001.0
        endif
        if imax == 10.0
        root10 = 1001.0
        endif
        if imax == 11.0
        root11 = 1001.0
        endif
        if imax == 12.0
        root12 = 1001.0
        endif
#
      PARDO a, i
#
        if imax == 1.0
        get VCEND1A1(a,i)
        tai(a,i)=VCEND1A1(a,i)
        endif
        if imax == 2.0
        get VCEND1A2(a,i)
        tai(a,i)=VCEND1A2(a,i)
        endif
        if imax == 3.0
        get VCEND1A3(a,i)
        tai(a,i)=VCEND1A3(a,i)
        endif
        if imax == 4.0
        get VCEND1A4(a,i)
        tai(a,i)=VCEND1A4(a,i)
        endif
        if imax == 5.0
        get VCEND1A5(a,i)
        tai(a,i)=VCEND1A5(a,i)
        endif
        if imax == 6.0
        get VCEND1A6(a,i)
        tai(a,i)=VCEND1A6(a,i)
        endif
        if imax == 7.0
        get VCEND1A7(a,i)
        tai(a,i)=VCEND1A7(a,i)
        endif
        if imax == 8.0
        get VCEND1A8(a,i)
        tai(a,i)=VCEND1A8(a,i)
        endif
        if imax == 9.0
        get VCEND1A9(a,i)
        tai(a,i)=VCEND1A9(a,i)
        endif
        if imax == 10.0
        get VCEND1A10(a,i)
        tai(a,i)=VCEND1A10(a,i)
        endif
        if imax == 11.0
        get VCEND1A11(a,i)
        tai(a,i)=VCEND1A11(a,i)
        endif
        if imax == 12.0
        get VCEND1A12(a,i)
        tai(a,i)=VCEND1A12(a,i)
        endif
#
#        execute print_scalar imax
#        execute dump_block tai
#
        if kindex12 == 1
        PUT VSTART1A1(a,i) = tai(a,i)
        endif
        if kindex12 == 2
        PUT VSTART1A2(a,i) = tai(a,i)
        endif
        if kindex12 == 3
        PUT VSTART1A3(a,i) = tai(a,i)
        endif
        if kindex12 == 4
        PUT VSTART1A4(a,i) = tai(a,i)
        endif
        if kindex12 == 5
        PUT VSTART1A5(a,i) = tai(a,i)
        endif
        if kindex12 == 6
        PUT VSTART1A6(a,i) = tai(a,i)
        endif
        if kindex12 == 7
        PUT VSTART1A7(a,i) = tai(a,i)
        endif
        if kindex12 == 8
        PUT VSTART1A8(a,i) = tai(a,i)
        endif
        if kindex12 == 9
        PUT VSTART1A9(a,i) = tai(a,i)
        endif
        if kindex12 == 10
        PUT VSTART1A10(a,i) = tai(a,i)
        endif
        if kindex12 == 11
        PUT VSTART1A11(a,i) = tai(a,i)
        endif
        if kindex12 == 12
        PUT VSTART1A12(a,i) = tai(a,i)
        endif
#
#
      ENDPARDO a, i
#
      execute sip_barrier
      execute server_barrier
#
       enddo kindex12
#
       ENDPROC SORT_VEC
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--start of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
      PROC NORM_VEC
#
#
      etemp1=0.0
      etemp2=0.0
      sqr=0.0
#
      sum1=0.0
#
      PARDO a, i
      get VSTART1A1(a,i)
      tai(a,i)=VSTART1A1(a,i)
#      execute dump_block tai
      t2ai(a,i)=VSTART1A1(a,i)
      etemp=tai(a,i)*t2ai(a,i)
      sum1+=etemp
      put VCEND1A1(a,i)=tai(a,i)
      ENDPARDO a, i
#
      sum2=0.0
#
      execute sip_barrier
#
      collective etemp1+=sum1
      collective etemp2+=sum2
#
      sqr+=etemp1
      sqr+=etemp2
#
      execute sip_barrier
      execute server_barrier
#
      execute norm_fac sqr exponent
#
      PARDO a, i
      get VCEND1A1(a,i)
      tai(a,i)=VCEND1A1(a,i)
      tai(a,i)*=sqr
      put VSTART1A1(a,i)=tai(a,i)
      ENDPARDO a, i
#
      execute sip_barrier
      execute server_barrier
#
#
      etemp1=0.0
      etemp2=0.0
      sqr=0.0
#
      sum1=0.0
#
      PARDO a, i
      get VSTART1A2(a,i)
      tai(a,i)=VSTART1A2(a,i)
      t2ai(a,i)=VSTART1A2(a,i)
      etemp=tai(a,i)*t2ai(a,i)
      sum1+=etemp
      put VCEND1A2(a,i)=tai(a,i)
      ENDPARDO a, i
#
      sum2=0.0
#
      execute sip_barrier
#
      collective etemp1+=sum1
      collective etemp2+=sum2
#
      sqr+=etemp1
      sqr+=etemp2
#
      execute sip_barrier
      execute server_barrier
#
      execute norm_fac sqr exponent
#
      PARDO a, i
      get VCEND1A2(a,i)
      tai(a,i)=VCEND1A2(a,i)
      tai(a,i)*=sqr
      put VSTART1A2(a,i)=tai(a,i)
      ENDPARDO a, i
#
      execute sip_barrier
      execute server_barrier
#
#
      etemp1=0.0
      etemp2=0.0
      sqr=0.0
#
      sum1=0.0
#
      PARDO a, i
      get VSTART1A3(a,i)
      tai(a,i)=VSTART1A3(a,i)
      t2ai(a,i)=VSTART1A3(a,i)
      etemp=tai(a,i)*t2ai(a,i)
      sum1+=etemp
      put VCEND1A3(a,i)=tai(a,i)
      ENDPARDO a, i
#
      sum2=0.0
#
#
      execute sip_barrier
#
      collective etemp1+=sum1
      collective etemp2+=sum2
#
      sqr+=etemp1
      sqr+=etemp2
#
      execute sip_barrier
      execute server_barrier
#
      execute norm_fac sqr exponent
#
      PARDO a, i
      get VCEND1A3(a,i)
      tai(a,i)=VCEND1A3(a,i)
      tai(a,i)*=sqr
      put VSTART1A3(a,i)=tai(a,i)
      ENDPARDO a, i
#
      execute sip_barrier
      execute server_barrier
#
#
      etemp1=0.0
      etemp2=0.0
      sqr=0.0
#
      sum1=0.0
#
      PARDO a, i
      get VSTART1A4(a,i)
      tai(a,i)=VSTART1A4(a,i)
      t2ai(a,i)=VSTART1A4(a,i)
      etemp=tai(a,i)*t2ai(a,i)
      sum1+=etemp
      put VCEND1A4(a,i)=tai(a,i)
      ENDPARDO a, i
#
      sum2=0.0
#
      execute sip_barrier
#
      collective etemp1+=sum1
      collective etemp2+=sum2
#
      sqr+=etemp1
      sqr+=etemp2
#
      execute sip_barrier
      execute server_barrier
#
      execute norm_fac sqr exponent
#
      PARDO a, i
      get VCEND1A4(a,i)
      tai(a,i)=VCEND1A4(a,i)
      tai(a,i)*=sqr
      put VSTART1A4(a,i)=tai(a,i)
      ENDPARDO a, i
#
      execute sip_barrier
      execute server_barrier
#
#
      etemp1=0.0
      etemp2=0.0
      sqr=0.0
#
      sum1=0.0
#
      PARDO a, i
      get VSTART1A5(a,i)
      tai(a,i)=VSTART1A5(a,i)
      t2ai(a,i)=VSTART1A5(a,i)
      etemp=tai(a,i)*t2ai(a,i)
      sum1+=etemp
      put VCEND1A5(a,i)=tai(a,i)
      ENDPARDO a, i
#
      sum2=0.0
#
      execute sip_barrier
#
      collective etemp1+=sum1
      collective etemp2+=sum2
#
      sqr+=etemp1
      sqr+=etemp2
#
      execute sip_barrier
      execute server_barrier
#
      execute norm_fac sqr exponent
#
      PARDO a, i
      get VCEND1A5(a,i)
      tai(a,i)=VCEND1A5(a,i)
      tai(a,i)*=sqr
      put VSTART1A5(a,i)=tai(a,i)
      ENDPARDO a, i
#
      execute sip_barrier
      execute server_barrier
#
#
      etemp1=0.0
      etemp2=0.0
      sqr=0.0
#
      sum1=0.0
#
      PARDO a, i
      get VSTART1A6(a,i)
      tai(a,i)=VSTART1A6(a,i)
      t2ai(a,i)=VSTART1A6(a,i)
      etemp=tai(a,i)*t2ai(a,i)
      sum1+=etemp
      put VCEND1A6(a,i)=tai(a,i)
      ENDPARDO a, i
#
      sum2=0.0
#
      execute sip_barrier
#
      collective etemp1+=sum1
      collective etemp2+=sum2
#
      sqr+=etemp1
      sqr+=etemp2
#
      execute sip_barrier
      execute server_barrier
#
      execute norm_fac sqr exponent
#
      PARDO a, i
      get VCEND1A6(a,i)
      tai(a,i)=VCEND1A6(a,i)
      tai(a,i)*=sqr
      put VSTART1A6(a,i)=tai(a,i)
      ENDPARDO a, i
#
      execute sip_barrier
      execute server_barrier
#
#
      etemp1=0.0
      etemp2=0.0
      sqr=0.0
#
      sum1=0.0
#
      PARDO a, i
      get VSTART1A7(a,i)
      tai(a,i)=VSTART1A7(a,i)
      t2ai(a,i)=VSTART1A7(a,i)
      etemp=tai(a,i)*t2ai(a,i)
      sum1+=etemp
      put VCEND1A7(a,i)=tai(a,i)
      ENDPARDO a, i
#
      sum2=0.0
#
      execute sip_barrier
#
      collective etemp1+=sum1
      collective etemp2+=sum2
#
      sqr+=etemp1
      sqr+=etemp2
#
      execute sip_barrier
      execute server_barrier
#
      execute norm_fac sqr exponent
#
      PARDO a, i
      get VCEND1A7(a,i)
      tai(a,i)=VCEND1A7(a,i)
      tai(a,i)*=sqr
      put VSTART1A7(a,i)=tai(a,i)
      ENDPARDO a, i
#
      execute sip_barrier
      execute server_barrier
#
#
      etemp1=0.0
      etemp2=0.0
      sqr=0.0
#
      sum1=0.0
#
      PARDO a, i
      get VSTART1A8(a,i)
      tai(a,i)=VSTART1A8(a,i)
      t2ai(a,i)=VSTART1A8(a,i)
      etemp=tai(a,i)*t2ai(a,i)
      sum1+=etemp
      put VCEND1A8(a,i)=tai(a,i)
      ENDPARDO a, i
#
      sum2=0.0
#
      execute sip_barrier
#
      collective etemp1+=sum1
      collective etemp2+=sum2
#
      sqr+=etemp1
      sqr+=etemp2
#
      execute sip_barrier
      execute server_barrier
#
      execute norm_fac sqr exponent
#
      PARDO a, i
      get VCEND1A8(a,i)
      tai(a,i)=VCEND1A8(a,i)
      tai(a,i)*=sqr
      put VSTART1A8(a,i)=tai(a,i)
      ENDPARDO a, i
#
      execute sip_barrier
      execute server_barrier
#
#
      etemp1=0.0
      etemp2=0.0
      sqr=0.0
#
      sum1=0.0
#
      PARDO a, i
      get VSTART1A9(a,i)
      tai(a,i)=VSTART1A9(a,i)
      t2ai(a,i)=VSTART1A9(a,i)
      etemp=tai(a,i)*t2ai(a,i)
      sum1+=etemp
      put VCEND1A9(a,i)=tai(a,i)
      ENDPARDO a, i
#
      sum2=0.0
#
      execute sip_barrier
#
      collective etemp1+=sum1
      collective etemp2+=sum2
#
      sqr+=etemp1
      sqr+=etemp2
#
      execute sip_barrier
      execute server_barrier
#
      execute norm_fac sqr exponent
#
      PARDO a, i
      get VCEND1A9(a,i)
      tai(a,i)=VCEND1A9(a,i)
      tai(a,i)*=sqr
      put VSTART1A9(a,i)=tai(a,i)
      ENDPARDO a, i
#
      execute sip_barrier
      execute server_barrier
#
#
      etemp1=0.0
      etemp2=0.0
      sqr=0.0
#
      sum1=0.0
#
      PARDO a, i
      get VSTART1A10(a,i)
      tai(a,i)=VSTART1A10(a,i)
      t2ai(a,i)=VSTART1A10(a,i)
      etemp=tai(a,i)*t2ai(a,i)
      sum1+=etemp
      put VCEND1A10(a,i)=tai(a,i)
      ENDPARDO a, i
#
      sum2=0.0
#
      execute sip_barrier
#
      collective etemp1+=sum1
      collective etemp2+=sum2
#
      sqr+=etemp1
      sqr+=etemp2
#
      execute sip_barrier
      execute server_barrier
#
      execute norm_fac sqr exponent
#
      PARDO a, i
      get VCEND1A10(a,i)
      tai(a,i)=VCEND1A10(a,i)
      tai(a,i)*=sqr
      put VSTART1A10(a,i)=tai(a,i)
      ENDPARDO a, i
#
      execute sip_barrier
      execute server_barrier
#
#
      etemp1=0.0
      etemp2=0.0
      sqr=0.0
#
      sum1=0.0
#
      PARDO a, i
      get VSTART1A11(a,i)
      tai(a,i)=VSTART1A11(a,i)
      t2ai(a,i)=VSTART1A11(a,i)
      etemp=tai(a,i)*t2ai(a,i)
      sum1+=etemp
      put VCEND1A11(a,i)=tai(a,i)
      ENDPARDO a, i
#
      sum2=0.0
#
      execute sip_barrier
#
      collective etemp1+=sum1
      collective etemp2+=sum2
#
      sqr+=etemp1
      sqr+=etemp2
#
      execute sip_barrier
      execute server_barrier
#
      execute norm_fac sqr exponent
#
      PARDO a, i
      get VCEND1A11(a,i)
      tai(a,i)=VCEND1A11(a,i)
      tai(a,i)*=sqr
      put VSTART1A11(a,i)=tai(a,i)
      ENDPARDO a, i
#
      execute sip_barrier
      execute server_barrier
#
#
      etemp1=0.0
      etemp2=0.0
      sqr=0.0
#
      sum1=0.0
#
      PARDO a, i
      get VSTART1A12(a,i)
      tai(a,i)=VSTART1A12(a,i)
      t2ai(a,i)=VSTART1A12(a,i)
      etemp=tai(a,i)*t2ai(a,i)
      sum1+=etemp
      put VCEND1A12(a,i)=tai(a,i)
      ENDPARDO a, i
#
      sum2=0.0
#
      execute sip_barrier
#
      collective etemp1+=sum1
      collective etemp2+=sum2
#
      sqr+=etemp1
      sqr+=etemp2
#
      execute sip_barrier
      execute server_barrier
#
      execute norm_fac sqr exponent
#
      PARDO a, i
      get VCEND1A12(a,i)
      tai(a,i)=VCEND1A12(a,i)
      tai(a,i)*=sqr
      put VSTART1A12(a,i)=tai(a,i)
      ENDPARDO a, i
#
      execute sip_barrier
      execute server_barrier
#
      ENDPROC NORM_VEC
#
#======================================================
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#--end of script generated part of the code
#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#======================================================
#
#     BEGIN MAIN PROGRAM
#
       execute load_balance_off 
       CALL TRAN_PPPP 
      #CALL READ_AMP
       execute server_barrier
#
#***********************************************************
#
       call cre_arrays
#
       root1=100000.0
       root2=100000.0
       root3=100000.0
       root4=100000.0
       root5=100000.0
       root6=100000.0
       root7=100000.0
       root8=100000.0
       root9=100000.0
       root10=100000.0
       root11=100000.0
       root12=100000.0
#
       eomthresh=0.0001
      #rootmax=7.0
      #eomthresh=eom_tol  #
       rootmax=eom_roots  # Watson Added
       EXECUTE  PRINT_SCALAR  eom_roots
       EXECUTE  PRINT_SCALAR  eom_tol
       six = 6.0 
       if eom_roots < six  
          rootmax = 6.0  
       endif 
#
# WARNING: DO NOT SET MAXCYCLE BELOW 25. TERRIBLE THINGS WOULD HAPPEN.
#
       maxcycle=100.0
#
       nsp=1.0
       iroot=1.0
       ispdim=1.0
       imaxc=0.0
#
       call CONVER
#
       call startvec2
#
       call copy_starttoev
#
# --------------------------------------------------------------
#
       do spdim
#
          imaxc+=1.0
#
          if spdim >= 2
             call copy_toVCactual
          endif
#
          call HCmult
#
          call Aconstr
#
          call Adiag
#
          call SELVEC
#
          call VECLINCOMB_1
#
          call VECLINCOMB_2
#
          call RESID
#
          call REZYDUUM
#
          call SCALEVCACT
#
          if residuum < eomthresh
             call endwrite
          endif
#
          if residuum > eomthresh
             call ORTHOGON
          endif
#
          if spdim < 20
             if residuum < eomthresh
#
                iroot+=1.0
#
                call root_put
                imaxc=0.0
#
                if iroot > rootmax
                   iroot-=1.0
                   call prnting
                   iroot+=1.0
                exit
             endif
#
             EXECUTE SIP_BARRIER
             EXECUTE SERVER_BARRIER
#
             call start_copy
#
             EXECUTE SIP_BARRIER
             EXECUTE SERVER_BARRIER
#
             call ORTHOGON
#
          endif
#
          if residuum > eomthresh
             call prnting
          endif
          if residuum < eomthresh
             iroot+=-1.0
             call prnting
             iroot+=1.0
          endif
#
          endif
#
          if spdim == 20
          if residuum < eomthresh
          if iroot == rootmax
            iroot+=1.0
            call root_put
            imaxc=0.0
            call prnting
            exit
          endif
          endif
          endif
#
          nsp+=1.0
          ispdim+=1.0
#
       enddo spdim
#
# --------------------------------------------------------------
#
       if iroot <= rootmax # new
#
       if iroot < 13.0
#
       call TRUNCATE
#
       if residuum > eomthresh
          nsp+=-1.0
          ispdim-=1.0
          call prnting
          nsp+=1.0
          ispdim+=1.0
       endif
#
       if residuum < eomthresh
#
       nsp+=-1.0
       ispdim-=1.0
       call prnting
       nsp+=1.0
       ispdim+=1.0
#
       iroot+=1.0
#
       call root_put
#
       EXECUTE SIP_BARRIER
       EXECUTE SERVER_BARRIER
#
       call start_copy
#
       EXECUTE SIP_BARRIER
       EXECUTE SERVER_BARRIER
#
       do spdim
       if spdim == 20
       call ORTHOGON
#
       call start_copy_tr
#
       EXECUTE SIP_BARRIER
       EXECUTE SERVER_BARRIER
       endif
       enddo spdim
#
       endif
#
       endif
#
       endif # new
#
       do eomcycle
#
       if iroot > rootmax
       exit
       endif
#
       ispdim=1.0
#
       do spdim
#
       if spdim > 12
#
          if spdim == 13
             if residuum < eomthresh
                 if eomcycle > 1 #### NEW
#
                iroot+=1.0
#
                call root_put
#
                endif    #### NEW
#
             imaxc=0.0
#
             EXECUTE SIP_BARRIER
             EXECUTE SERVER_BARRIER
#
             call start_copy
#
             EXECUTE SIP_BARRIER
             EXECUTE SERVER_BARRIER
#
             call ORTHOGON
#
             call copy_toVCactual
#
             endif
#
             if imaxc > maxcycle
                if residuum > eomthresh
#
                call endwrite
#
                iroot+=1.0
#
                call root_put
#
                   if iroot > 12.0
                   exit
                   endif
#
                imaxc=0.0
#
                EXECUTE SIP_BARRIER
                EXECUTE SERVER_BARRIER
#
                call start_copy
#
                EXECUTE SIP_BARRIER
                EXECUTE SERVER_BARRIER
#
                call ORTHOGON
#
                EXECUTE SIP_BARRIER
                EXECUTE SERVER_BARRIER
#
                call copy_toVCactual
                EXECUTE SIP_BARRIER
                EXECUTE SERVER_BARRIER
#
                endif
             endif
          endif
          imaxc+=1.0
#
       if spdim == 13
       if eomcycle > 1 
       if residuum > eomthresh 
       call copy_toVCactual
       endif
       endif
       endif
#
       if spdim > 13
       call copy_toVCactual
       endif
#
       call HCmult
#
       call Aconstr
       EXECUTE SIP_BARRIER
#
       call Adiag
#
       call SELVEC
#
       call VECLINCOMB_1
#
       call VECLINCOMB_2
#
       call RESID
#
       call REZYDUUM
#
       call SCALEVCACT
#
       if residuum < eomthresh
       call endwrite
       endif
#
       if residuum > eomthresh
       if maxcycle >= imaxc
       call ORTHOGON
       endif
       endif
#
       EXECUTE SIP_BARRIER
       EXECUTE SERVER_BARRIER
#
       if spdim < 20
         if residuum < eomthresh
#
            iroot+=1.0
#
            call root_put
            imaxc=0.0
#
            EXECUTE SIP_BARRIER
            EXECUTE SERVER_BARRIER
#
            if iroot > rootmax
            call prnting
            exit
            endif
#
            call start_copy
#
            EXECUTE SIP_BARRIER
            EXECUTE SERVER_BARRIER
#
            call ORTHOGON
#
            EXECUTE SIP_BARRIER
            EXECUTE SERVER_BARRIER
#
         endif
         if imaxc > maxcycle
         if residuum > eomthresh
#
            call endwrite
#
            iroot+=1.0
#
            call root_put
#
                if iroot > 12.0
                exit
                endif
#
            imaxc=0.0
#
            EXECUTE SIP_BARRIER
            EXECUTE SERVER_BARRIER
#
            if iroot > rootmax
            call prnting
            exit
            endif
#
            call start_copy
#
            EXECUTE SIP_BARRIER
            EXECUTE SERVER_BARRIER
#
            call ORTHOGON
#
            EXECUTE SIP_BARRIER
            EXECUTE SERVER_BARRIER
#
         endif
         endif
#
         if residuum > eomthresh
         call prnting
         endif
         if residuum < eomthresh
         iroot+=-1.0
         call prnting
         iroot+=1.0
         endif
#
         nsp+=1.0
#
       endif
#
       if spdim == 20
       if residuum < eomthresh
       if iroot == rootmax
            iroot+=1.0
            call root_put
            call prnting
            exit
       endif
       endif
       endif
#
       endif
#
       ispdim+=1.0
#
       enddo spdim
#
             if imaxc > maxcycle
             if iroot > 12.0
             iroot+=-1.0
             call endwrite
             iroot+=1.0
             exit
             endif
             endif
#
       if iroot > rootmax
       exit
       endif
#
       EXECUTE SIP_BARRIER
       EXECUTE SERVER_BARRIER
#
       call TRUNCATE
#
       call prnting
#
       nsp+=1.0
#
       EXECUTE SIP_BARRIER
       EXECUTE SERVER_BARRIER
#
       enddo eomcycle
#
# --------- print out the excitation energies------  
#
#
       execute print_scalar root1
       execute print_scalar root2
       execute print_scalar root3
       execute print_scalar root4
       execute print_scalar root5
       execute print_scalar root6
       execute print_scalar root7
       execute print_scalar root8
       execute print_scalar root9
       execute print_scalar root10
       execute print_scalar root11
       execute print_scalar root12
#
       evfev = 27.2113957
       root1*=evfev
       root2*=evfev
       root3*=evfev
       root4*=evfev
       root5*=evfev
       root6*=evfev
       root7*=evfev
       root8*=evfev
       root9*=evfev
       root10*=evfev
       root11*=evfev
       root12*=evfev
#
       execute print_scalar root1
       execute print_scalar root2
       execute print_scalar root3
       execute print_scalar root4
       execute print_scalar root5
       execute print_scalar root6
       execute print_scalar root7
       execute print_scalar root8
       execute print_scalar root9
       execute print_scalar root10
       execute print_scalar root11
       execute print_scalar root12
#
       call SORT_VEC
#
       EXECUTE SIP_BARRIER
       EXECUTE SERVER_BARRIER
#
       Call NORM_VEC
#
       call WRITEOUT
#
       delete VEV
       delete VCE1A
       delete VCACT1A
       delete VCHACT1A
       delete VSTART1A1
       delete VSTART1A2
       execute sip_barrier
       execute server_barrier
#
       ENDSIAL CIS_RHF_MO
#
